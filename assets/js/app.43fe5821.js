(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(e){function t(t){for(var i,r,s=t[0],l=t[1],c=t[2],d=0,h=[];d<s.length;d++)r=s[d],Object.prototype.hasOwnProperty.call(o,r)&&o[r]&&h.push(o[r][0]),o[r]=0;for(i in l)Object.prototype.hasOwnProperty.call(l,i)&&(e[i]=l[i]);for(u&&u(t);h.length;)h.shift()();return a.push.apply(a,c||[]),n()}function n(){for(var e,t=0;t<a.length;t++){for(var n=a[t],i=!0,s=1;s<n.length;s++){var l=n[s];0!==o[l]&&(i=!1)}i&&(a.splice(t--,1),e=r(r.s=n[0]))}return e}var i={},o={1:0},a=[];function r(t){if(i[t])return i[t].exports;var n=i[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.e=function(e){var t=[],n=o[e];if(0!==n)if(n)t.push(n[2]);else{var i=new Promise((function(t,i){n=o[e]=[t,i]}));t.push(n[2]=i);var a,s=document.createElement("script");s.charset="utf-8",s.timeout=120,r.nc&&s.setAttribute("nonce",r.nc),s.src=function(e){return r.p+"assets/js/"+({}[e]||e)+"."+{2:"4bd4da93",3:"8fef78bb",4:"8d81970c",5:"a38eddcf",6:"39269a22",7:"04ce27fc",8:"da7efa03",9:"b9932911",10:"70d06117",11:"4358b321",12:"d1e3c2ce",13:"abb74f9e",14:"8ff7e9d2",15:"88a972f8",16:"7ff89ab6",17:"81044414",18:"3299bfd8",19:"1d00c433",20:"ac3a3acb",21:"b3368b9f",22:"665d7500",23:"127b61ea",24:"f6a7bb38",25:"d1b382bb",26:"cade407d",27:"c4fa1189",28:"23657c22",29:"f020df62",30:"953a2bf0",31:"769449d4",32:"d5a2d42d",33:"ea220d00",34:"89661ff3",35:"40a5c431",36:"74b27032",37:"d541aced",38:"a533f413",39:"ebf8d2ad",40:"95cccead",41:"4921d55e",42:"3eebf83b",43:"a98a07cd",44:"845c88c6",45:"c4f9c7d5",46:"81455ade",47:"4b574c51",48:"e5f65ee9",49:"85a840b7",50:"14771731",51:"eb02dc3c",52:"41fd8043",53:"a1d62190",54:"c6dce626",55:"f686a1be",56:"ab95c2e7",57:"167466d1",58:"be52e669",59:"f676cfdc",60:"8b19e3cf",61:"e02606a7",62:"5b5088f6",63:"ab548387",64:"e09caca2",65:"28b4699d",66:"4d411662",67:"d422c975",68:"29e952d2",69:"c9e92859",70:"efbd4c3e",71:"7eaa2fe7",72:"99b7630a",73:"3c1f8abd",74:"d3b064bc",75:"8ec421b2",76:"1906af5b",77:"a81394b7",78:"98d93d0e",79:"f44d5742",80:"c0be628f",81:"18c29ba1",82:"58732668",83:"a2e8e07f",84:"a7d4db1e",85:"0d43771b",86:"f89d6994",87:"b1ca8977",88:"66de10f6",89:"e7a9a634",90:"32006d4a",91:"211f3a8b"}[e]+".js"}(e);var l=new Error;a=function(t){s.onerror=s.onload=null,clearTimeout(c);var n=o[e];if(0!==n){if(n){var i=t&&("load"===t.type?"missing":t.type),a=t&&t.target&&t.target.src;l.message="Loading chunk "+e+" failed.\n("+i+": "+a+")",l.name="ChunkLoadError",l.type=i,l.request=a,n[1](l)}o[e]=void 0}};var c=setTimeout((function(){a({type:"timeout",target:s})}),12e4);s.onerror=s.onload=a,document.head.appendChild(s)}return Promise.all(t)},r.m=e,r.c=i,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="/",r.oe=function(e){throw console.error(e),e};var s=window.webpackJsonp=window.webpackJsonp||[],l=s.push.bind(s);s.push=t,s=s.slice();for(var c=0;c<s.length;c++)t(s[c]);var u=l;a.push([185,0]),n()}([function(e,t,n){var i=n(3),o=n(27).f,a=n(13),r=n(11),s=n(71),l=n(120),c=n(103);e.exports=function(e,t){var n,u,d,h,f,p=e.target,m=e.global,g=e.stat;if(n=m?i:g?i[p]||s(p,{}):(i[p]||{}).prototype)for(u in t){if(h=t[u],d=e.noTargetGet?(f=o(n,u))&&f.value:n[u],!c(m?u:p+(g?".":"#")+u,e.forced)&&void 0!==d){if(typeof h==typeof d)continue;l(h,d)}(e.sham||d&&d.sham)&&a(h,"sham",!0),r(n,u,h,e)}}},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t,n){var i=n(3),o=n(70),a=n(7),r=n(50),s=n(73),l=n(114),c=o("wks"),u=i.Symbol,d=l?u:u&&u.withoutSetter||r;e.exports=function(e){return a(c,e)||(s&&a(u,e)?c[e]=u[e]:c[e]=d("Symbol."+e)),c[e]}},function(e,t){var n=function(e){return e&&e.Math==Math&&e};e.exports=n("object"==typeof globalThis&&globalThis)||n("object"==typeof window&&window)||n("object"==typeof self&&self)||n("object"==typeof global&&global)||Function("return this")()},function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,t,n){var i=n(4);e.exports=function(e){if(!i(e))throw TypeError(String(e)+" is not an object");return e}},function(e,t,n){var i=n(1);e.exports=!i((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(e,t){var n={}.hasOwnProperty;e.exports=function(e,t){return n.call(e,t)}},function(e,t,n){var i=n(6),o=n(113),a=n(5),r=n(49),s=Object.defineProperty;t.f=i?s:function(e,t,n){if(a(e),t=r(t,!0),a(n),o)try{return s(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported");return"value"in n&&(e[t]=n.value),e}},function(e,t,n){var i=n(80),o=n(11),a=n(199);i||o(Object.prototype,"toString",a,{unsafe:!0})},function(e,t,n){var i=n(45),o=Math.min;e.exports=function(e){return e>0?o(i(e),9007199254740991):0}},function(e,t,n){var i=n(3),o=n(13),a=n(7),r=n(71),s=n(76),l=n(32),c=l.get,u=l.enforce,d=String(String).split("String");(e.exports=function(e,t,n,s){var l=!!s&&!!s.unsafe,c=!!s&&!!s.enumerable,h=!!s&&!!s.noTargetGet;"function"==typeof n&&("string"!=typeof t||a(n,"name")||o(n,"name",t),u(n).source=d.join("string"==typeof t?t:"")),e!==i?(l?!h&&e[t]&&(c=!0):delete e[t],c?e[t]=n:o(e,t,n)):c?e[t]=n:r(t,n)})(Function.prototype,"toString",(function(){return"function"==typeof this&&c(this).source||s(this)}))},function(e,t,n){var i=n(21);e.exports=function(e){return Object(i(e))}},function(e,t,n){var i=n(6),o=n(8),a=n(38);e.exports=i?function(e,t,n){return o.f(e,t,a(1,n))}:function(e,t,n){return e[t]=n,e}},function(e,t,n){var i=n(37),o=n(21);e.exports=function(e){return i(o(e))}},function(e,t,n){var i=n(6),o=n(1),a=n(7),r=Object.defineProperty,s={},l=function(e){throw e};e.exports=function(e,t){if(a(s,e))return s[e];t||(t={});var n=[][e],c=!!a(t,"ACCESSORS")&&t.ACCESSORS,u=a(t,0)?t[0]:l,d=a(t,1)?t[1]:void 0;return s[e]=!!n&&!o((function(){if(c&&!i)return!0;var e={length:-1};c?r(e,1,{enumerable:!0,get:l}):e[1]=1,n.call(e,u,d)}))}},function(e,t){var n=Array.isArray;e.exports=n},function(e,t,n){var i=n(148),o="object"==typeof self&&self&&self.Object===Object&&self,a=i||o||Function("return this")();e.exports=a},function(e,t,n){"use strict";function i(e,t,n,i,o,a,r,s){var l,c="function"==typeof e?e.options:e;if(t&&(c.render=t,c.staticRenderFns=n,c._compiled=!0),i&&(c.functional=!0),a&&(c._scopeId="data-v-"+a),r?(l=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),o&&o.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(r)},c._ssrRegister=l):o&&(l=s?function(){o.call(this,(c.functional?this.parent:this).$root.$options.shadowRoot)}:o),l)if(c.functional){c._injectStyles=l;var u=c.render;c.render=function(e,t){return l.call(t),u(e,t)}}else{var d=c.beforeCreate;c.beforeCreate=d?[].concat(d,l):[l]}return{exports:e,options:c}}n.d(t,"a",(function(){return i}))},function(e,t){var n={}.toString;e.exports=function(e){return n.call(e).slice(8,-1)}},function(e,t,n){var i=n(118),o=n(3),a=function(e){return"function"==typeof e?e:void 0};e.exports=function(e,t){return arguments.length<2?a(i[e])||a(o[e]):i[e]&&i[e][t]||o[e]&&o[e][t]}},function(e,t){e.exports=function(e){if(null==e)throw TypeError("Can't call method on "+e);return e}},function(e,t){e.exports=!1},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(String(e)+" is not a function");return e}},function(e,t,n){var i=n(225),o=n(228);e.exports=function(e,t){var n=o(e,t);return i(n)?n:void 0}},function(e,t,n){"use strict";var i=n(0),o=n(28).filter,a=n(54),r=n(15),s=a("filter"),l=r("filter");i({target:"Array",proto:!0,forced:!s||!l},{filter:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){"use strict";var i=n(0),o=n(57);i({target:"RegExp",proto:!0,forced:/./.exec!==o},{exec:o})},function(e,t,n){var i=n(6),o=n(77),a=n(38),r=n(14),s=n(49),l=n(7),c=n(113),u=Object.getOwnPropertyDescriptor;t.f=i?u:function(e,t){if(e=r(e),t=s(t,!0),c)try{return u(e,t)}catch(e){}if(l(e,t))return a(!o.f.call(e,t),e[t])}},function(e,t,n){var i=n(46),o=n(37),a=n(12),r=n(10),s=n(105),l=[].push,c=function(e){var t=1==e,n=2==e,c=3==e,u=4==e,d=6==e,h=5==e||d;return function(f,p,m,g){for(var y,v,w=a(f),b=o(w),k=i(p,m,3),x=r(b.length),A=0,S=g||s,j=t?S(f,x):n?S(f,0):void 0;x>A;A++)if((h||A in b)&&(v=k(y=b[A],A,w),e))if(t)j[A]=v;else if(v)switch(e){case 3:return!0;case 5:return y;case 6:return A;case 2:l.call(j,y)}else if(u)return!1;return d?-1:c||u?u:j}};e.exports={forEach:c(0),map:c(1),filter:c(2),some:c(3),every:c(4),find:c(5),findIndex:c(6)}},function(e,t){e.exports=function(e){return null!=e&&"object"==typeof e}},function(e,t,n){"use strict";var i=n(135).charAt,o=n(32),a=n(119),r=o.set,s=o.getterFor("String Iterator");a(String,"String",(function(e){r(this,{type:"String Iterator",string:String(e),index:0})}),(function(){var e,t=s(this),n=t.string,o=t.index;return o>=n.length?{value:void 0,done:!0}:(e=i(n,o),t.index+=e.length,{value:e,done:!1})}))},function(e,t,n){"use strict";var i=n(1);e.exports=function(e,t){var n=[][e];return!!n&&i((function(){n.call(null,t||function(){throw 1},1)}))}},function(e,t,n){var i,o,a,r=n(186),s=n(3),l=n(4),c=n(13),u=n(7),d=n(52),h=n(40),f=s.WeakMap;if(r){var p=new f,m=p.get,g=p.has,y=p.set;i=function(e,t){return y.call(p,e,t),t},o=function(e){return m.call(p,e)||{}},a=function(e){return g.call(p,e)}}else{var v=d("state");h[v]=!0,i=function(e,t){return c(e,v,t),t},o=function(e){return u(e,v)?e[v]:{}},a=function(e){return u(e,v)}}e.exports={set:i,get:o,has:a,enforce:function(e){return a(e)?o(e):i(e,{})},getterFor:function(e){return function(t){var n;if(!l(t)||(n=o(t)).type!==e)throw TypeError("Incompatible receiver, "+e+" required");return n}}}},function(e,t,n){var i=n(19);e.exports=Array.isArray||function(e){return"Array"==i(e)}},function(e,t,n){var i=n(3),o=n(136),a=n(111),r=n(13),s=n(2),l=s("iterator"),c=s("toStringTag"),u=a.values;for(var d in o){var h=i[d],f=h&&h.prototype;if(f){if(f[l]!==u)try{r(f,l,u)}catch(e){f[l]=u}if(f[c]||r(f,c,d),o[d])for(var p in a)if(f[p]!==a[p])try{r(f,p,a[p])}catch(e){f[p]=a[p]}}}},function(e,t,n){var i=n(42),o=n(210),a=n(211),r=i?i.toStringTag:void 0;e.exports=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":r&&r in Object(e)?o(e):a(e)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));n(94);var i=n(43);n(48),n(58),n(83),n(145),n(9),n(30),n(34);var o=n(64);function a(e){return function(e){if(Array.isArray(e))return Object(i.a)(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||Object(o.a)(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},function(e,t,n){var i=n(1),o=n(19),a="".split;e.exports=i((function(){return!Object("z").propertyIsEnumerable(0)}))?function(e){return"String"==o(e)?a.call(e,""):Object(e)}:Object},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t,n){var i,o=n(5),a=n(180),r=n(75),s=n(40),l=n(117),c=n(72),u=n(52),d=u("IE_PROTO"),h=function(){},f=function(e){return"<script>"+e+"<\/script>"},p=function(){try{i=document.domain&&new ActiveXObject("htmlfile")}catch(e){}var e,t;p=i?function(e){e.write(f("")),e.close();var t=e.parentWindow.Object;return e=null,t}(i):((t=c("iframe")).style.display="none",l.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(f("document.F=Object")),e.close(),e.F);for(var n=r.length;n--;)delete p.prototype[r[n]];return p()};s[d]=!0,e.exports=Object.create||function(e,t){var n;return null!==e?(h.prototype=o(e),n=new h,h.prototype=null,n[d]=e):n=p(),void 0===t?n:a(n,t)}},function(e,t){e.exports={}},function(e,t){e.exports={}},function(e,t,n){var i=n(17).Symbol;e.exports=i},function(e,t,n){"use strict";function i(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,i=new Array(t);n<t;n++)i[n]=e[n];return i}n.d(t,"a",(function(){return i}))},function(e,t,n){"use strict";var i=n(100),o=n(5),a=n(12),r=n(10),s=n(45),l=n(21),c=n(108),u=n(101),d=Math.max,h=Math.min,f=Math.floor,p=/\$([$&'`]|\d\d?|<[^>]*>)/g,m=/\$([$&'`]|\d\d?)/g;i("replace",2,(function(e,t,n,i){var g=i.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE,y=i.REPLACE_KEEPS_$0,v=g?"$":"$0";return[function(n,i){var o=l(this),a=null==n?void 0:n[e];return void 0!==a?a.call(n,o,i):t.call(String(o),n,i)},function(e,i){if(!g&&y||"string"==typeof i&&-1===i.indexOf(v)){var a=n(t,e,this,i);if(a.done)return a.value}var l=o(e),f=String(this),p="function"==typeof i;p||(i=String(i));var m=l.global;if(m){var b=l.unicode;l.lastIndex=0}for(var k=[];;){var x=u(l,f);if(null===x)break;if(k.push(x),!m)break;""===String(x[0])&&(l.lastIndex=c(f,r(l.lastIndex),b))}for(var A,S="",j=0,_=0;_<k.length;_++){x=k[_];for(var I=String(x[0]),P=d(h(s(x.index),f.length),0),T=[],z=1;z<x.length;z++)T.push(void 0===(A=x[z])?A:String(A));var E=x.groups;if(p){var C=[I].concat(T,P,f);void 0!==E&&C.push(E);var L=String(i.apply(void 0,C))}else L=w(I,f,P,T,E,i);P>=j&&(S+=f.slice(j,P)+L,j=P+I.length)}return S+f.slice(j)}];function w(e,n,i,o,r,s){var l=i+e.length,c=o.length,u=m;return void 0!==r&&(r=a(r),u=p),t.call(s,u,(function(t,a){var s;switch(a.charAt(0)){case"$":return"$";case"&":return e;case"`":return n.slice(0,i);case"'":return n.slice(l);case"<":s=r[a.slice(1,-1)];break;default:var u=+a;if(0===u)return t;if(u>c){var d=f(u/10);return 0===d?t:d<=c?void 0===o[d-1]?a.charAt(1):o[d-1]+a.charAt(1):t}s=o[u-1]}return void 0===s?"":s}))}}))},function(e,t){var n=Math.ceil,i=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?i:n)(e)}},function(e,t,n){var i=n(23);e.exports=function(e,t,n){if(i(e),void 0===t)return e;switch(n){case 0:return function(){return e.call(t)};case 1:return function(n){return e.call(t,n)};case 2:return function(n,i){return e.call(t,n,i)};case 3:return function(n,i,o){return e.call(t,n,i,o)}}return function(){return e.apply(t,arguments)}}},function(e,t,n){"use strict";var i=n(0),o=n(4),a=n(33),r=n(116),s=n(10),l=n(14),c=n(55),u=n(2),d=n(54),h=n(15),f=d("slice"),p=h("slice",{ACCESSORS:!0,0:0,1:2}),m=u("species"),g=[].slice,y=Math.max;i({target:"Array",proto:!0,forced:!f||!p},{slice:function(e,t){var n,i,u,d=l(this),h=s(d.length),f=r(e,h),p=r(void 0===t?h:t,h);if(a(d)&&("function"!=typeof(n=d.constructor)||n!==Array&&!a(n.prototype)?o(n)&&null===(n=n[m])&&(n=void 0):n=void 0,n===Array||void 0===n))return g.call(d,f,p);for(i=new(void 0===n?Array:n)(y(p-f,0)),u=0;f<p;f++,u++)f in d&&c(i,u,d[f]);return i.length=u,i}})},function(e,t,n){"use strict";var i=n(0),o=n(3),a=n(20),r=n(22),s=n(6),l=n(73),c=n(114),u=n(1),d=n(7),h=n(33),f=n(4),p=n(5),m=n(12),g=n(14),y=n(49),v=n(38),w=n(39),b=n(51),k=n(69),x=n(205),A=n(78),S=n(27),j=n(8),_=n(77),I=n(13),P=n(11),T=n(70),z=n(52),E=n(40),C=n(50),L=n(2),D=n(143),O=n(144),W=n(53),R=n(32),N=n(28).forEach,H=z("hidden"),M=L("toPrimitive"),U=R.set,q=R.getterFor("Symbol"),$=Object.prototype,F=o.Symbol,G=a("JSON","stringify"),B=S.f,V=j.f,Y=x.f,K=_.f,J=T("symbols"),Q=T("op-symbols"),Z=T("string-to-symbol-registry"),X=T("symbol-to-string-registry"),ee=T("wks"),te=o.QObject,ne=!te||!te.prototype||!te.prototype.findChild,ie=s&&u((function(){return 7!=w(V({},"a",{get:function(){return V(this,"a",{value:7}).a}})).a}))?function(e,t,n){var i=B($,t);i&&delete $[t],V(e,t,n),i&&e!==$&&V($,t,i)}:V,oe=function(e,t){var n=J[e]=w(F.prototype);return U(n,{type:"Symbol",tag:e,description:t}),s||(n.description=t),n},ae=c?function(e){return"symbol"==typeof e}:function(e){return Object(e)instanceof F},re=function(e,t,n){e===$&&re(Q,t,n),p(e);var i=y(t,!0);return p(n),d(J,i)?(n.enumerable?(d(e,H)&&e[H][i]&&(e[H][i]=!1),n=w(n,{enumerable:v(0,!1)})):(d(e,H)||V(e,H,v(1,{})),e[H][i]=!0),ie(e,i,n)):V(e,i,n)},se=function(e,t){p(e);var n=g(t),i=b(n).concat(de(n));return N(i,(function(t){s&&!le.call(n,t)||re(e,t,n[t])})),e},le=function(e){var t=y(e,!0),n=K.call(this,t);return!(this===$&&d(J,t)&&!d(Q,t))&&(!(n||!d(this,t)||!d(J,t)||d(this,H)&&this[H][t])||n)},ce=function(e,t){var n=g(e),i=y(t,!0);if(n!==$||!d(J,i)||d(Q,i)){var o=B(n,i);return!o||!d(J,i)||d(n,H)&&n[H][i]||(o.enumerable=!0),o}},ue=function(e){var t=Y(g(e)),n=[];return N(t,(function(e){d(J,e)||d(E,e)||n.push(e)})),n},de=function(e){var t=e===$,n=Y(t?Q:g(e)),i=[];return N(n,(function(e){!d(J,e)||t&&!d($,e)||i.push(J[e])})),i};(l||(P((F=function(){if(this instanceof F)throw TypeError("Symbol is not a constructor");var e=arguments.length&&void 0!==arguments[0]?String(arguments[0]):void 0,t=C(e),n=function(e){this===$&&n.call(Q,e),d(this,H)&&d(this[H],t)&&(this[H][t]=!1),ie(this,t,v(1,e))};return s&&ne&&ie($,t,{configurable:!0,set:n}),oe(t,e)}).prototype,"toString",(function(){return q(this).tag})),P(F,"withoutSetter",(function(e){return oe(C(e),e)})),_.f=le,j.f=re,S.f=ce,k.f=x.f=ue,A.f=de,D.f=function(e){return oe(L(e),e)},s&&(V(F.prototype,"description",{configurable:!0,get:function(){return q(this).description}}),r||P($,"propertyIsEnumerable",le,{unsafe:!0}))),i({global:!0,wrap:!0,forced:!l,sham:!l},{Symbol:F}),N(b(ee),(function(e){O(e)})),i({target:"Symbol",stat:!0,forced:!l},{for:function(e){var t=String(e);if(d(Z,t))return Z[t];var n=F(t);return Z[t]=n,X[n]=t,n},keyFor:function(e){if(!ae(e))throw TypeError(e+" is not a symbol");if(d(X,e))return X[e]},useSetter:function(){ne=!0},useSimple:function(){ne=!1}}),i({target:"Object",stat:!0,forced:!l,sham:!s},{create:function(e,t){return void 0===t?w(e):se(w(e),t)},defineProperty:re,defineProperties:se,getOwnPropertyDescriptor:ce}),i({target:"Object",stat:!0,forced:!l},{getOwnPropertyNames:ue,getOwnPropertySymbols:de}),i({target:"Object",stat:!0,forced:u((function(){A.f(1)}))},{getOwnPropertySymbols:function(e){return A.f(m(e))}}),G)&&i({target:"JSON",stat:!0,forced:!l||u((function(){var e=F();return"[null]"!=G([e])||"{}"!=G({a:e})||"{}"!=G(Object(e))}))},{stringify:function(e,t,n){for(var i,o=[e],a=1;arguments.length>a;)o.push(arguments[a++]);if(i=t,(f(t)||void 0!==e)&&!ae(e))return h(t)||(t=function(e,t){if("function"==typeof i&&(t=i.call(this,e,t)),!ae(t))return t}),o[1]=t,G.apply(null,o)}});F.prototype[M]||I(F.prototype,M,F.prototype.valueOf),W(F,"Symbol"),E[H]=!0},function(e,t,n){var i=n(4);e.exports=function(e,t){if(!i(e))return e;var n,o;if(t&&"function"==typeof(n=e.toString)&&!i(o=n.call(e)))return o;if("function"==typeof(n=e.valueOf)&&!i(o=n.call(e)))return o;if(!t&&"function"==typeof(n=e.toString)&&!i(o=n.call(e)))return o;throw TypeError("Can't convert object to primitive value")}},function(e,t){var n=0,i=Math.random();e.exports=function(e){return"Symbol("+String(void 0===e?"":e)+")_"+(++n+i).toString(36)}},function(e,t,n){var i=n(115),o=n(75);e.exports=Object.keys||function(e){return i(e,o)}},function(e,t,n){var i=n(70),o=n(50),a=i("keys");e.exports=function(e){return a[e]||(a[e]=o(e))}},function(e,t,n){var i=n(8).f,o=n(7),a=n(2)("toStringTag");e.exports=function(e,t,n){e&&!o(e=n?e:e.prototype,a)&&i(e,a,{configurable:!0,value:t})}},function(e,t,n){var i=n(1),o=n(2),a=n(82),r=o("species");e.exports=function(e){return a>=51||!i((function(){var t=[];return(t.constructor={})[r]=function(){return{foo:1}},1!==t[e](Boolean).foo}))}},function(e,t,n){"use strict";var i=n(49),o=n(8),a=n(38);e.exports=function(e,t,n){var r=i(t);r in e?o.f(e,r,a(0,n)):e[r]=n}},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));n(9);function i(e,t,n,i,o,a,r){try{var s=e[a](r),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(i,o)}function o(e){return function(){var t=this,n=arguments;return new Promise((function(o,a){var r=e.apply(t,n);function s(e){i(r,o,a,s,l,"next",e)}function l(e){i(r,o,a,s,l,"throw",e)}s(void 0)}))}}},function(e,t,n){"use strict";var i,o,a=n(107),r=n(183),s=RegExp.prototype.exec,l=String.prototype.replace,c=s,u=(i=/a/,o=/b*/g,s.call(i,"a"),s.call(o,"a"),0!==i.lastIndex||0!==o.lastIndex),d=r.UNSUPPORTED_Y||r.BROKEN_CARET,h=void 0!==/()??/.exec("")[1];(u||h||d)&&(c=function(e){var t,n,i,o,r=this,c=d&&r.sticky,f=a.call(r),p=r.source,m=0,g=e;return c&&(-1===(f=f.replace("y","")).indexOf("g")&&(f+="g"),g=String(e).slice(r.lastIndex),r.lastIndex>0&&(!r.multiline||r.multiline&&"\n"!==e[r.lastIndex-1])&&(p="(?: "+p+")",g=" "+g,m++),n=new RegExp("^(?:"+p+")",f)),h&&(n=new RegExp("^"+p+"$(?!\\s)",f)),u&&(t=r.lastIndex),i=s.call(c?n:r,g),c?i?(i.input=i.input.slice(m),i[0]=i[0].slice(m),i.index=r.lastIndex,r.lastIndex+=i[0].length):r.lastIndex=0:u&&i&&(r.lastIndex=r.global?i.index+i[0].length:t),h&&i&&i.length>1&&l.call(i[0],n,(function(){for(o=1;o<arguments.length-2;o++)void 0===arguments[o]&&(i[o]=void 0)})),i}),e.exports=c},function(e,t,n){"use strict";var i=n(0),o=n(6),a=n(3),r=n(7),s=n(4),l=n(8).f,c=n(120),u=a.Symbol;if(o&&"function"==typeof u&&(!("description"in u.prototype)||void 0!==u().description)){var d={},h=function(){var e=arguments.length<1||void 0===arguments[0]?void 0:String(arguments[0]),t=this instanceof h?new u(e):void 0===e?u():u(e);return""===e&&(d[t]=!0),t};c(h,u);var f=h.prototype=u.prototype;f.constructor=h;var p=f.toString,m="Symbol(test)"==String(u("test")),g=/^Symbol\((.*)\)[^)]+$/;l(f,"description",{configurable:!0,get:function(){var e=s(this)?this.valueOf():this,t=p.call(e);if(r(d,e))return"";var n=m?t.slice(7,-1):t.replace(g,"$1");return""===n?void 0:n}}),i({global:!0,forced:!0},{Symbol:h})}},function(e,t,n){var i=n(215),o=n(216),a=n(217),r=n(218),s=n(219);function l(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var i=e[t];this.set(i[0],i[1])}}l.prototype.clear=i,l.prototype.delete=o,l.prototype.get=a,l.prototype.has=r,l.prototype.set=s,e.exports=l},function(e,t,n){var i=n(150);e.exports=function(e,t){for(var n=e.length;n--;)if(i(e[n][0],t))return n;return-1}},function(e,t,n){var i=n(24)(Object,"create");e.exports=i},function(e,t,n){var i=n(237);e.exports=function(e,t){var n=e.__data__;return i(t)?n["string"==typeof t?"string":"hash"]:n.map}},function(e,t,n){var i=n(92);e.exports=function(e){if("string"==typeof e||i(e))return e;var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));n(145),n(47),n(146),n(84),n(9),n(109),n(30);var i=n(43);function o(e,t){if(e){if("string"==typeof e)return Object(i.a)(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Object(i.a)(e,t):void 0}}},function(e,t,n){var i,o;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(o="function"==typeof(i=function(){var e,t,n={version:"0.2.0"},i=n.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function o(e,t,n){return e<t?t:e>n?n:e}function a(e){return 100*(-1+e)}n.configure=function(e){var t,n;for(t in e)void 0!==(n=e[t])&&e.hasOwnProperty(t)&&(i[t]=n);return this},n.status=null,n.set=function(e){var t=n.isStarted();e=o(e,i.minimum,1),n.status=1===e?null:e;var l=n.render(!t),c=l.querySelector(i.barSelector),u=i.speed,d=i.easing;return l.offsetWidth,r((function(t){""===i.positionUsing&&(i.positionUsing=n.getPositioningCSS()),s(c,function(e,t,n){var o;return(o="translate3d"===i.positionUsing?{transform:"translate3d("+a(e)+"%,0,0)"}:"translate"===i.positionUsing?{transform:"translate("+a(e)+"%,0)"}:{"margin-left":a(e)+"%"}).transition="all "+t+"ms "+n,o}(e,u,d)),1===e?(s(l,{transition:"none",opacity:1}),l.offsetWidth,setTimeout((function(){s(l,{transition:"all "+u+"ms linear",opacity:0}),setTimeout((function(){n.remove(),t()}),u)}),u)):setTimeout(t,u)})),this},n.isStarted=function(){return"number"==typeof n.status},n.start=function(){n.status||n.set(0);var e=function(){setTimeout((function(){n.status&&(n.trickle(),e())}),i.trickleSpeed)};return i.trickle&&e(),this},n.done=function(e){return e||n.status?n.inc(.3+.5*Math.random()).set(1):this},n.inc=function(e){var t=n.status;return t?("number"!=typeof e&&(e=(1-t)*o(Math.random()*t,.1,.95)),t=o(t+e,0,.994),n.set(t)):n.start()},n.trickle=function(){return n.inc(Math.random()*i.trickleRate)},e=0,t=0,n.promise=function(i){return i&&"resolved"!==i.state()?(0===t&&n.start(),e++,t++,i.always((function(){0==--t?(e=0,n.done()):n.set((e-t)/e)})),this):this},n.render=function(e){if(n.isRendered())return document.getElementById("nprogress");c(document.documentElement,"nprogress-busy");var t=document.createElement("div");t.id="nprogress",t.innerHTML=i.template;var o,r=t.querySelector(i.barSelector),l=e?"-100":a(n.status||0),u=document.querySelector(i.parent);return s(r,{transition:"all 0 linear",transform:"translate3d("+l+"%,0,0)"}),i.showSpinner||(o=t.querySelector(i.spinnerSelector))&&h(o),u!=document.body&&c(u,"nprogress-custom-parent"),u.appendChild(t),t},n.remove=function(){u(document.documentElement,"nprogress-busy"),u(document.querySelector(i.parent),"nprogress-custom-parent");var e=document.getElementById("nprogress");e&&h(e)},n.isRendered=function(){return!!document.getElementById("nprogress")},n.getPositioningCSS=function(){var e=document.body.style,t="WebkitTransform"in e?"Webkit":"MozTransform"in e?"Moz":"msTransform"in e?"ms":"OTransform"in e?"O":"";return t+"Perspective"in e?"translate3d":t+"Transform"in e?"translate":"margin"};var r=function(){var e=[];function t(){var n=e.shift();n&&n(t)}return function(n){e.push(n),1==e.length&&t()}}(),s=function(){var e=["Webkit","O","Moz","ms"],t={};function n(n){return n=n.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(e,t){return t.toUpperCase()})),t[n]||(t[n]=function(t){var n=document.body.style;if(t in n)return t;for(var i,o=e.length,a=t.charAt(0).toUpperCase()+t.slice(1);o--;)if((i=e[o]+a)in n)return i;return t}(n))}function i(e,t,i){t=n(t),e.style[t]=i}return function(e,t){var n,o,a=arguments;if(2==a.length)for(n in t)void 0!==(o=t[n])&&t.hasOwnProperty(n)&&i(e,n,o);else i(e,a[1],a[2])}}();function l(e,t){return("string"==typeof e?e:d(e)).indexOf(" "+t+" ")>=0}function c(e,t){var n=d(e),i=n+t;l(n,t)||(e.className=i.substring(1))}function u(e,t){var n,i=d(e);l(e,t)&&(n=i.replace(" "+t+" "," "),e.className=n.substring(1,n.length-1))}function d(e){return(" "+(e.className||"")+" ").replace(/\s+/gi," ")}function h(e){e&&e.parentNode&&e.parentNode.removeChild(e)}return n})?i.call(t,n,t,e):i)||(e.exports=o)},function(e,t,n){"use strict";var i=n(0),o=n(28).map,a=n(54),r=n(15),s=a("map"),l=r("map");i({target:"Array",proto:!0,forced:!s||!l},{map:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){"use strict";var i=n(0),o=n(37),a=n(14),r=n(31),s=[].join,l=o!=Object,c=r("join",",");i({target:"Array",proto:!0,forced:l||!c},{join:function(e){return s.call(a(this),void 0===e?",":e)}})},function(e,t,n){var i=n(2),o=n(39),a=n(8),r=i("unscopables"),s=Array.prototype;null==s[r]&&a.f(s,r,{configurable:!0,value:o(null)}),e.exports=function(e){s[r][e]=!0}},function(e,t,n){var i=n(115),o=n(75).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return i(e,o)}},function(e,t,n){var i=n(22),o=n(112);(e.exports=function(e,t){return o[e]||(o[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.6.5",mode:i?"pure":"global",copyright:"© 2020 Denis Pushkarev (zloirock.ru)"})},function(e,t,n){var i=n(3),o=n(13);e.exports=function(e,t){try{o(i,e,t)}catch(n){i[e]=t}return t}},function(e,t,n){var i=n(3),o=n(4),a=i.document,r=o(a)&&o(a.createElement);e.exports=function(e){return r?a.createElement(e):{}}},function(e,t,n){var i=n(1);e.exports=!!Object.getOwnPropertySymbols&&!i((function(){return!String(Symbol())}))},function(e,t,n){var i=n(14),o=n(10),a=n(116),r=function(e){return function(t,n,r){var s,l=i(t),c=o(l.length),u=a(r,c);if(e&&n!=n){for(;c>u;)if((s=l[u++])!=s)return!0}else for(;c>u;u++)if((e||u in l)&&l[u]===n)return e||u||0;return!e&&-1}};e.exports={includes:r(!0),indexOf:r(!1)}},function(e,t){e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(e,t,n){var i=n(112),o=Function.toString;"function"!=typeof i.inspectSource&&(i.inspectSource=function(e){return o.call(e)}),e.exports=i.inspectSource},function(e,t,n){"use strict";var i={}.propertyIsEnumerable,o=Object.getOwnPropertyDescriptor,a=o&&!i.call({1:2},1);t.f=a?function(e){var t=o(this,e);return!!t&&t.enumerable}:i},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,n){var i=n(7),o=n(12),a=n(52),r=n(123),s=a("IE_PROTO"),l=Object.prototype;e.exports=r?Object.getPrototypeOf:function(e){return e=o(e),i(e,s)?e[s]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?l:null}},function(e,t,n){var i={};i[n(2)("toStringTag")]="z",e.exports="[object z]"===String(i)},function(e,t,n){var i=n(5),o=n(23),a=n(2)("species");e.exports=function(e,t){var n,r=i(e).constructor;return void 0===r||null==(n=i(r)[a])?t:o(n)}},function(e,t,n){var i,o,a=n(3),r=n(132),s=a.process,l=s&&s.versions,c=l&&l.v8;c?o=(i=c.split("."))[0]+i[1]:r&&(!(i=r.match(/Edge\/(\d+)/))||i[1]>=74)&&(i=r.match(/Chrome\/(\d+)/))&&(o=i[1]),e.exports=o&&+o},function(e,t,n){n(144)("iterator")},function(e,t,n){var i=n(6),o=n(8).f,a=Function.prototype,r=a.toString,s=/^\s*function ([^ (]*)/;i&&!("name"in a)&&o(a,"name",{configurable:!0,get:function(){try{return r.call(this).match(s)[1]}catch(e){return""}}})},function(e,t,n){var i=n(209),o=n(29),a=Object.prototype,r=a.hasOwnProperty,s=a.propertyIsEnumerable,l=i(function(){return arguments}())?i:function(e){return o(e)&&r.call(e,"callee")&&!s.call(e,"callee")};e.exports=l},function(e,t,n){var i=n(24)(n(17),"Map");e.exports=i},function(e,t){e.exports=function(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}},function(e,t,n){var i=n(229),o=n(236),a=n(238),r=n(239),s=n(240);function l(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var i=e[t];this.set(i[0],i[1])}}l.prototype.clear=i,l.prototype.delete=o,l.prototype.get=a,l.prototype.has=r,l.prototype.set=s,e.exports=l},function(e,t){e.exports=function(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=e})),n}},function(e,t){e.exports=function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}},function(e,t,n){var i=n(16),o=n(92),a=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,r=/^\w*$/;e.exports=function(e,t){if(i(e))return!1;var n=typeof e;return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=e&&!o(e))||(r.test(e)||!a.test(e)||null!=t&&e in Object(t))}},function(e,t,n){var i=n(35),o=n(29);e.exports=function(e){return"symbol"==typeof e||o(e)&&"[object Symbol]"==i(e)}},function(e,t){e.exports=function(e){return e}},function(e,t,n){n(0)({target:"Array",stat:!0},{isArray:n(33)})},function(e,t,n){"use strict";var i=n(0),o=n(137);i({target:"Array",proto:!0,forced:[].forEach!=o},{forEach:o})},function(e,t,n){var i=n(0),o=n(12),a=n(51);i({target:"Object",stat:!0,forced:n(1)((function(){a(1)}))},{keys:function(e){return a(o(e))}})},function(e,t,n){var i=n(3),o=n(136),a=n(137),r=n(13);for(var s in o){var l=i[s],c=l&&l.prototype;if(c&&c.forEach!==a)try{r(c,"forEach",a)}catch(e){c.forEach=a}}},function(e,t,n){"use strict";var i=n(100),o=n(106),a=n(5),r=n(21),s=n(81),l=n(108),c=n(10),u=n(101),d=n(57),h=n(1),f=[].push,p=Math.min,m=!h((function(){return!RegExp(4294967295,"y")}));i("split",2,(function(e,t,n){var i;return i="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(e,n){var i=String(r(this)),a=void 0===n?4294967295:n>>>0;if(0===a)return[];if(void 0===e)return[i];if(!o(e))return t.call(i,e,a);for(var s,l,c,u=[],h=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),p=0,m=new RegExp(e.source,h+"g");(s=d.call(m,i))&&!((l=m.lastIndex)>p&&(u.push(i.slice(p,s.index)),s.length>1&&s.index<i.length&&f.apply(u,s.slice(1)),c=s[0].length,p=l,u.length>=a));)m.lastIndex===s.index&&m.lastIndex++;return p===i.length?!c&&m.test("")||u.push(""):u.push(i.slice(p)),u.length>a?u.slice(0,a):u}:"0".split(void 0,0).length?function(e,n){return void 0===e&&0===n?[]:t.call(this,e,n)}:t,[function(t,n){var o=r(this),a=null==t?void 0:t[e];return void 0!==a?a.call(t,o,n):i.call(String(o),t,n)},function(e,o){var r=n(i,e,this,o,i!==t);if(r.done)return r.value;var d=a(e),h=String(this),f=s(d,RegExp),g=d.unicode,y=(d.ignoreCase?"i":"")+(d.multiline?"m":"")+(d.unicode?"u":"")+(m?"y":"g"),v=new f(m?d:"^(?:"+d.source+")",y),w=void 0===o?4294967295:o>>>0;if(0===w)return[];if(0===h.length)return null===u(v,h)?[h]:[];for(var b=0,k=0,x=[];k<h.length;){v.lastIndex=m?k:0;var A,S=u(v,m?h:h.slice(k));if(null===S||(A=p(c(v.lastIndex+(m?0:k)),h.length))===b)k=l(h,k,g);else{if(x.push(h.slice(b,k)),x.length===w)return x;for(var j=1;j<=S.length-1;j++)if(x.push(S[j]),x.length===w)return x;k=b=A}}return x.push(h.slice(b)),x}]}),!m)},function(e,t,n){var i=function(e){"use strict";var t=Object.prototype,n=t.hasOwnProperty,i="function"==typeof Symbol?Symbol:{},o=i.iterator||"@@iterator",a=i.asyncIterator||"@@asyncIterator",r=i.toStringTag||"@@toStringTag";function s(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{s({},"")}catch(e){s=function(e,t,n){return e[t]=n}}function l(e,t,n,i){var o=t&&t.prototype instanceof d?t:d,a=Object.create(o.prototype),r=new A(i||[]);return a._invoke=function(e,t,n){var i="suspendedStart";return function(o,a){if("executing"===i)throw new Error("Generator is already running");if("completed"===i){if("throw"===o)throw a;return j()}for(n.method=o,n.arg=a;;){var r=n.delegate;if(r){var s=b(r,n);if(s){if(s===u)continue;return s}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===i)throw i="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);i="executing";var l=c(e,t,n);if("normal"===l.type){if(i=n.done?"completed":"suspendedYield",l.arg===u)continue;return{value:l.arg,done:n.done}}"throw"===l.type&&(i="completed",n.method="throw",n.arg=l.arg)}}}(e,n,r),a}function c(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}e.wrap=l;var u={};function d(){}function h(){}function f(){}var p={};p[o]=function(){return this};var m=Object.getPrototypeOf,g=m&&m(m(S([])));g&&g!==t&&n.call(g,o)&&(p=g);var y=f.prototype=d.prototype=Object.create(p);function v(e){["next","throw","return"].forEach((function(t){s(e,t,(function(e){return this._invoke(t,e)}))}))}function w(e,t){var i;this._invoke=function(o,a){function r(){return new t((function(i,r){!function i(o,a,r,s){var l=c(e[o],e,a);if("throw"!==l.type){var u=l.arg,d=u.value;return d&&"object"==typeof d&&n.call(d,"__await")?t.resolve(d.__await).then((function(e){i("next",e,r,s)}),(function(e){i("throw",e,r,s)})):t.resolve(d).then((function(e){u.value=e,r(u)}),(function(e){return i("throw",e,r,s)}))}s(l.arg)}(o,a,i,r)}))}return i=i?i.then(r,r):r()}}function b(e,t){var n=e.iterator[t.method];if(void 0===n){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=void 0,b(e,t),"throw"===t.method))return u;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return u}var i=c(n,e.iterator,t.arg);if("throw"===i.type)return t.method="throw",t.arg=i.arg,t.delegate=null,u;var o=i.arg;return o?o.done?(t[e.resultName]=o.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,u):o:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,u)}function k(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function x(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function A(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(k,this),this.reset(!0)}function S(e){if(e){var t=e[o];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var i=-1,a=function t(){for(;++i<e.length;)if(n.call(e,i))return t.value=e[i],t.done=!1,t;return t.value=void 0,t.done=!0,t};return a.next=a}}return{next:j}}function j(){return{value:void 0,done:!0}}return h.prototype=y.constructor=f,f.constructor=h,h.displayName=s(f,r,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===h||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,f):(e.__proto__=f,s(e,r,"GeneratorFunction")),e.prototype=Object.create(y),e},e.awrap=function(e){return{__await:e}},v(w.prototype),w.prototype[a]=function(){return this},e.AsyncIterator=w,e.async=function(t,n,i,o,a){void 0===a&&(a=Promise);var r=new w(l(t,n,i,o),a);return e.isGeneratorFunction(n)?r:r.next().then((function(e){return e.done?e.value:r.next()}))},v(y),s(y,r,"Generator"),y[o]=function(){return this},y.toString=function(){return"[object Generator]"},e.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var i=t.pop();if(i in e)return n.value=i,n.done=!1,n}return n.done=!0,n}},e.values=S,A.prototype={constructor:A,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(x),!e)for(var t in this)"t"===t.charAt(0)&&n.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function i(n,i){return r.type="throw",r.arg=e,t.next=n,i&&(t.method="next",t.arg=void 0),!!i}for(var o=this.tryEntries.length-1;o>=0;--o){var a=this.tryEntries[o],r=a.completion;if("root"===a.tryLoc)return i("end");if(a.tryLoc<=this.prev){var s=n.call(a,"catchLoc"),l=n.call(a,"finallyLoc");if(s&&l){if(this.prev<a.catchLoc)return i(a.catchLoc,!0);if(this.prev<a.finallyLoc)return i(a.finallyLoc)}else if(s){if(this.prev<a.catchLoc)return i(a.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return i(a.finallyLoc)}}}},abrupt:function(e,t){for(var i=this.tryEntries.length-1;i>=0;--i){var o=this.tryEntries[i];if(o.tryLoc<=this.prev&&n.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var a=o;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var r=a?a.completion:{};return r.type=e,r.arg=t,a?(this.method="next",this.next=a.finallyLoc,u):this.complete(r)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),u},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),x(n),u}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var i=n.completion;if("throw"===i.type){var o=i.arg;x(n)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:S(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=void 0),u}},e}(e.exports);try{regeneratorRuntime=i}catch(e){Function("r","regeneratorRuntime = r")(i)}},function(e,t,n){"use strict";n(26);var i=n(11),o=n(1),a=n(2),r=n(57),s=n(13),l=a("species"),c=!o((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")})),u="$0"==="a".replace(/./,"$0"),d=a("replace"),h=!!/./[d]&&""===/./[d]("a","$0"),f=!o((function(){var e=/(?:)/,t=e.exec;e.exec=function(){return t.apply(this,arguments)};var n="ab".split(e);return 2!==n.length||"a"!==n[0]||"b"!==n[1]}));e.exports=function(e,t,n,d){var p=a(e),m=!o((function(){var t={};return t[p]=function(){return 7},7!=""[e](t)})),g=m&&!o((function(){var t=!1,n=/a/;return"split"===e&&((n={}).constructor={},n.constructor[l]=function(){return n},n.flags="",n[p]=/./[p]),n.exec=function(){return t=!0,null},n[p](""),!t}));if(!m||!g||"replace"===e&&(!c||!u||h)||"split"===e&&!f){var y=/./[p],v=n(p,""[e],(function(e,t,n,i,o){return t.exec===r?m&&!o?{done:!0,value:y.call(t,n,i)}:{done:!0,value:e.call(n,t,i)}:{done:!1}}),{REPLACE_KEEPS_$0:u,REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE:h}),w=v[0],b=v[1];i(String.prototype,e,w),i(RegExp.prototype,p,2==t?function(e,t){return b.call(e,this,t)}:function(e){return b.call(e,this)})}d&&s(RegExp.prototype[p],"sham",!0)}},function(e,t,n){var i=n(19),o=n(57);e.exports=function(e,t){var n=e.exec;if("function"==typeof n){var a=n.call(e,t);if("object"!=typeof a)throw TypeError("RegExp exec method returned something other than an Object or null");return a}if("RegExp"!==i(e))throw TypeError("RegExp#exec called on incompatible receiver");return o.call(e,t)}},function(e,t,n){"use strict";var i=n(0),o=n(1),a=n(33),r=n(4),s=n(12),l=n(10),c=n(55),u=n(105),d=n(54),h=n(2),f=n(82),p=h("isConcatSpreadable"),m=f>=51||!o((function(){var e=[];return e[p]=!1,e.concat()[0]!==e})),g=d("concat"),y=function(e){if(!r(e))return!1;var t=e[p];return void 0!==t?!!t:a(e)};i({target:"Array",proto:!0,forced:!m||!g},{concat:function(e){var t,n,i,o,a,r=s(this),d=u(r,0),h=0;for(t=-1,i=arguments.length;t<i;t++)if(y(a=-1===t?r:arguments[t])){if(h+(o=l(a.length))>9007199254740991)throw TypeError("Maximum allowed index exceeded");for(n=0;n<o;n++,h++)n in a&&c(d,h,a[n])}else{if(h>=9007199254740991)throw TypeError("Maximum allowed index exceeded");c(d,h++,a)}return d.length=h,d}})},function(e,t,n){var i=n(1),o=/#|\.prototype\./,a=function(e,t){var n=s[r(e)];return n==c||n!=l&&("function"==typeof t?i(t):!!t)},r=a.normalize=function(e){return String(e).replace(o,".").toLowerCase()},s=a.data={},l=a.NATIVE="N",c=a.POLYFILL="P";e.exports=a},function(e,t,n){var i=n(5),o=n(188);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,n={};try{(e=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(n,[]),t=n instanceof Array}catch(e){}return function(n,a){return i(n),o(a),t?e.call(n,a):n.__proto__=a,n}}():void 0)},function(e,t,n){var i=n(4),o=n(33),a=n(2)("species");e.exports=function(e,t){var n;return o(e)&&("function"!=typeof(n=e.constructor)||n!==Array&&!o(n.prototype)?i(n)&&null===(n=n[a])&&(n=void 0):n=void 0),new(void 0===n?Array:n)(0===t?0:t)}},function(e,t,n){var i=n(4),o=n(19),a=n(2)("match");e.exports=function(e){var t;return i(e)&&(void 0!==(t=e[a])?!!t:"RegExp"==o(e))}},function(e,t,n){"use strict";var i=n(5);e.exports=function(){var e=i(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.dotAll&&(t+="s"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t}},function(e,t,n){"use strict";var i=n(135).charAt;e.exports=function(e,t,n){return t+(n?i(e,t).length:1)}},function(e,t,n){"use strict";var i=n(11),o=n(5),a=n(1),r=n(107),s=RegExp.prototype,l=s.toString,c=a((function(){return"/a/b"!=l.call({source:"a",flags:"b"})})),u="toString"!=l.name;(c||u)&&i(RegExp.prototype,"toString",(function(){var e=o(this),t=String(e.source),n=e.flags;return"/"+t+"/"+String(void 0===n&&e instanceof RegExp&&!("flags"in s)?r.call(e):n)}),{unsafe:!0})},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,n){"use strict";var i=n(14),o=n(68),a=n(41),r=n(32),s=n(119),l=r.set,c=r.getterFor("Array Iterator");e.exports=s(Array,"Array",(function(e,t){l(this,{type:"Array Iterator",target:i(e),index:0,kind:t})}),(function(){var e=c(this),t=e.target,n=e.kind,i=e.index++;return!t||i>=t.length?(e.target=void 0,{value:void 0,done:!0}):"keys"==n?{value:i,done:!1}:"values"==n?{value:t[i],done:!1}:{value:[i,t[i]],done:!1}}),"values"),a.Arguments=a.Array,o("keys"),o("values"),o("entries")},function(e,t,n){var i=n(3),o=n(71),a=i["__core-js_shared__"]||o("__core-js_shared__",{});e.exports=a},function(e,t,n){var i=n(6),o=n(1),a=n(72);e.exports=!i&&!o((function(){return 7!=Object.defineProperty(a("div"),"a",{get:function(){return 7}}).a}))},function(e,t,n){var i=n(73);e.exports=i&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(e,t,n){var i=n(7),o=n(14),a=n(74).indexOf,r=n(40);e.exports=function(e,t){var n,s=o(e),l=0,c=[];for(n in s)!i(r,n)&&i(s,n)&&c.push(n);for(;t.length>l;)i(s,n=t[l++])&&(~a(c,n)||c.push(n));return c}},function(e,t,n){var i=n(45),o=Math.max,a=Math.min;e.exports=function(e,t){var n=i(e);return n<0?o(n+t,0):a(n,t)}},function(e,t,n){var i=n(20);e.exports=i("document","documentElement")},function(e,t,n){var i=n(3);e.exports=i},function(e,t,n){"use strict";var i=n(0),o=n(187),a=n(79),r=n(104),s=n(53),l=n(13),c=n(11),u=n(2),d=n(22),h=n(41),f=n(122),p=f.IteratorPrototype,m=f.BUGGY_SAFARI_ITERATORS,g=u("iterator"),y=function(){return this};e.exports=function(e,t,n,u,f,v,w){o(n,t,u);var b,k,x,A=function(e){if(e===f&&P)return P;if(!m&&e in _)return _[e];switch(e){case"keys":case"values":case"entries":return function(){return new n(this,e)}}return function(){return new n(this)}},S=t+" Iterator",j=!1,_=e.prototype,I=_[g]||_["@@iterator"]||f&&_[f],P=!m&&I||A(f),T="Array"==t&&_.entries||I;if(T&&(b=a(T.call(new e)),p!==Object.prototype&&b.next&&(d||a(b)===p||(r?r(b,p):"function"!=typeof b[g]&&l(b,g,y)),s(b,S,!0,!0),d&&(h[S]=y))),"values"==f&&I&&"values"!==I.name&&(j=!0,P=function(){return I.call(this)}),d&&!w||_[g]===P||l(_,g,P),h[t]=P,f)if(k={values:A("values"),keys:v?P:A("keys"),entries:A("entries")},w)for(x in k)(m||j||!(x in _))&&c(_,x,k[x]);else i({target:t,proto:!0,forced:m||j},k);return k}},function(e,t,n){var i=n(7),o=n(121),a=n(27),r=n(8);e.exports=function(e,t){for(var n=o(t),s=r.f,l=a.f,c=0;c<n.length;c++){var u=n[c];i(e,u)||s(e,u,l(t,u))}}},function(e,t,n){var i=n(20),o=n(69),a=n(78),r=n(5);e.exports=i("Reflect","ownKeys")||function(e){var t=o.f(r(e)),n=a.f;return n?t.concat(n(e)):t}},function(e,t,n){"use strict";var i,o,a,r=n(79),s=n(13),l=n(7),c=n(2),u=n(22),d=c("iterator"),h=!1;[].keys&&("next"in(a=[].keys())?(o=r(r(a)))!==Object.prototype&&(i=o):h=!0),null==i&&(i={}),u||l(i,d)||s(i,d,(function(){return this})),e.exports={IteratorPrototype:i,BUGGY_SAFARI_ITERATORS:h}},function(e,t,n){var i=n(1);e.exports=!i((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype}))},function(e,t,n){var i=n(3);e.exports=i.Promise},function(e,t,n){var i=n(2),o=n(41),a=i("iterator"),r=Array.prototype;e.exports=function(e){return void 0!==e&&(o.Array===e||r[a]===e)}},function(e,t,n){var i=n(127),o=n(41),a=n(2)("iterator");e.exports=function(e){if(null!=e)return e[a]||e["@@iterator"]||o[i(e)]}},function(e,t,n){var i=n(80),o=n(19),a=n(2)("toStringTag"),r="Arguments"==o(function(){return arguments}());e.exports=i?o:function(e){var t,n,i;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),a))?n:r?o(t):"Object"==(i=o(t))&&"function"==typeof t.callee?"Arguments":i}},function(e,t,n){var i=n(5);e.exports=function(e,t,n,o){try{return o?t(i(n)[0],n[1]):t(n)}catch(t){var a=e.return;throw void 0!==a&&i(a.call(e)),t}}},function(e,t,n){var i=n(2)("iterator"),o=!1;try{var a=0,r={next:function(){return{done:!!a++}},return:function(){o=!0}};r[i]=function(){return this},Array.from(r,(function(){throw 2}))}catch(e){}e.exports=function(e,t){if(!t&&!o)return!1;var n=!1;try{var a={};a[i]=function(){return{next:function(){return{done:n=!0}}}},e(a)}catch(e){}return n}},function(e,t,n){var i,o,a,r=n(3),s=n(1),l=n(19),c=n(46),u=n(117),d=n(72),h=n(131),f=r.location,p=r.setImmediate,m=r.clearImmediate,g=r.process,y=r.MessageChannel,v=r.Dispatch,w=0,b={},k=function(e){if(b.hasOwnProperty(e)){var t=b[e];delete b[e],t()}},x=function(e){return function(){k(e)}},A=function(e){k(e.data)},S=function(e){r.postMessage(e+"",f.protocol+"//"+f.host)};p&&m||(p=function(e){for(var t=[],n=1;arguments.length>n;)t.push(arguments[n++]);return b[++w]=function(){("function"==typeof e?e:Function(e)).apply(void 0,t)},i(w),w},m=function(e){delete b[e]},"process"==l(g)?i=function(e){g.nextTick(x(e))}:v&&v.now?i=function(e){v.now(x(e))}:y&&!h?(a=(o=new y).port2,o.port1.onmessage=A,i=c(a.postMessage,a,1)):!r.addEventListener||"function"!=typeof postMessage||r.importScripts||s(S)||"file:"===f.protocol?i="onreadystatechange"in d("script")?function(e){u.appendChild(d("script")).onreadystatechange=function(){u.removeChild(this),k(e)}}:function(e){setTimeout(x(e),0)}:(i=S,r.addEventListener("message",A,!1))),e.exports={set:p,clear:m}},function(e,t,n){var i=n(132);e.exports=/(iphone|ipod|ipad).*applewebkit/i.test(i)},function(e,t,n){var i=n(20);e.exports=i("navigator","userAgent")||""},function(e,t,n){var i=n(5),o=n(4),a=n(134);e.exports=function(e,t){if(i(e),o(t)&&t.constructor===e)return t;var n=a.f(e);return(0,n.resolve)(t),n.promise}},function(e,t,n){"use strict";var i=n(23),o=function(e){var t,n;this.promise=new e((function(e,i){if(void 0!==t||void 0!==n)throw TypeError("Bad Promise constructor");t=e,n=i})),this.resolve=i(t),this.reject=i(n)};e.exports.f=function(e){return new o(e)}},function(e,t,n){var i=n(45),o=n(21),a=function(e){return function(t,n){var a,r,s=String(o(t)),l=i(n),c=s.length;return l<0||l>=c?e?"":void 0:(a=s.charCodeAt(l))<55296||a>56319||l+1===c||(r=s.charCodeAt(l+1))<56320||r>57343?e?s.charAt(l):a:e?s.slice(l,l+2):r-56320+(a-55296<<10)+65536}};e.exports={codeAt:a(!1),charAt:a(!0)}},function(e,t){e.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},function(e,t,n){"use strict";var i=n(28).forEach,o=n(31),a=n(15),r=o("forEach"),s=a("forEach");e.exports=r&&s?[].forEach:function(e){return i(this,e,arguments.length>1?arguments[1]:void 0)}},function(e,t,n){var i=n(1);e.exports=!i((function(){return Object.isExtensible(Object.preventExtensions({}))}))},function(e,t,n){var i=n(0),o=n(1),a=n(12),r=n(79),s=n(123);i({target:"Object",stat:!0,forced:o((function(){r(1)})),sham:!s},{getPrototypeOf:function(e){return r(a(e))}})},function(e,t,n){var i=n(106);e.exports=function(e){if(i(e))throw TypeError("The method doesn't accept regular expressions");return e}},function(e,t,n){var i=n(2)("match");e.exports=function(e){var t=/./;try{"/./"[e](t)}catch(n){try{return t[i]=!1,"/./"[e](t)}catch(e){}}return!1}},function(e,t,n){n(0)({target:"Object",stat:!0,sham:!n(6)},{create:n(39)})},function(e,t,n){var i=n(2);t.f=i},function(e,t,n){var i=n(118),o=n(7),a=n(143),r=n(8).f;e.exports=function(e){var t=i.Symbol||(i.Symbol={});o(t,e)||r(t,e,{value:a.f(e)})}},function(e,t,n){var i=n(0),o=n(206);i({target:"Array",stat:!0,forced:!n(129)((function(e){Array.from(e)}))},{from:o})},function(e,t,n){var i=n(11),o=Date.prototype,a=o.toString,r=o.getTime;new Date(NaN)+""!="Invalid Date"&&i(o,"toString",(function(){var e=r.call(this);return e==e?a.call(this):"Invalid Date"}))},function(e,t){e.exports=function(e,t){for(var n=-1,i=t.length,o=e.length;++n<i;)e[o+n]=t[n];return e}},function(e,t){var n="object"==typeof global&&global&&global.Object===Object&&global;e.exports=n},function(e,t,n){var i=n(59),o=n(220),a=n(221),r=n(222),s=n(223),l=n(224);function c(e){var t=this.__data__=new i(e);this.size=t.size}c.prototype.clear=o,c.prototype.delete=a,c.prototype.get=r,c.prototype.has=s,c.prototype.set=l,e.exports=c},function(e,t){e.exports=function(e,t){return e===t||e!=e&&t!=t}},function(e,t,n){var i=n(35),o=n(87);e.exports=function(e){if(!o(e))return!1;var t=i(e);return"[object Function]"==t||"[object GeneratorFunction]"==t||"[object AsyncFunction]"==t||"[object Proxy]"==t}},function(e,t){var n=Function.prototype.toString;e.exports=function(e){if(null!=e){try{return n.call(e)}catch(e){}try{return e+""}catch(e){}}return""}},function(e,t,n){var i=n(241),o=n(29);e.exports=function e(t,n,a,r,s){return t===n||(null==t||null==n||!o(t)&&!o(n)?t!=t&&n!=n:i(t,n,a,r,e,s))}},function(e,t,n){var i=n(155),o=n(244),a=n(156);e.exports=function(e,t,n,r,s,l){var c=1&n,u=e.length,d=t.length;if(u!=d&&!(c&&d>u))return!1;var h=l.get(e),f=l.get(t);if(h&&f)return h==t&&f==e;var p=-1,m=!0,g=2&n?new i:void 0;for(l.set(e,t),l.set(t,e);++p<u;){var y=e[p],v=t[p];if(r)var w=c?r(v,y,p,t,e,l):r(y,v,p,e,t,l);if(void 0!==w){if(w)continue;m=!1;break}if(g){if(!o(t,(function(e,t){if(!a(g,t)&&(y===e||s(y,e,n,r,l)))return g.push(t)}))){m=!1;break}}else if(y!==v&&!s(y,v,n,r,l)){m=!1;break}}return l.delete(e),l.delete(t),m}},function(e,t,n){var i=n(88),o=n(242),a=n(243);function r(e){var t=-1,n=null==e?0:e.length;for(this.__data__=new i;++t<n;)this.add(e[t])}r.prototype.add=r.prototype.push=o,r.prototype.has=a,e.exports=r},function(e,t){e.exports=function(e,t){return e.has(t)}},function(e,t,n){var i=n(254),o=n(260),a=n(161);e.exports=function(e){return a(e)?i(e):o(e)}},function(e,t,n){(function(e){var i=n(17),o=n(256),a=t&&!t.nodeType&&t,r=a&&"object"==typeof e&&e&&!e.nodeType&&e,s=r&&r.exports===a?i.Buffer:void 0,l=(s?s.isBuffer:void 0)||o;e.exports=l}).call(this,n(110)(e))},function(e,t){var n=/^(?:0|[1-9]\d*)$/;e.exports=function(e,t){var i=typeof e;return!!(t=null==t?9007199254740991:t)&&("number"==i||"symbol"!=i&&n.test(e))&&e>-1&&e%1==0&&e<t}},function(e,t,n){var i=n(257),o=n(258),a=n(259),r=a&&a.isTypedArray,s=r?o(r):i;e.exports=s},function(e,t,n){var i=n(151),o=n(90);e.exports=function(e){return null!=e&&o(e.length)&&!i(e)}},function(e,t,n){var i=n(24)(n(17),"Set");e.exports=i},function(e,t,n){var i=n(87);e.exports=function(e){return e==e&&!i(e)}},function(e,t){e.exports=function(e,t){return function(n){return null!=n&&(n[e]===t&&(void 0!==t||e in Object(n)))}}},function(e,t,n){var i=n(166),o=n(63);e.exports=function(e,t){for(var n=0,a=(t=i(t,e)).length;null!=e&&n<a;)e=e[o(t[n++])];return n&&n==a?e:void 0}},function(e,t,n){var i=n(16),o=n(91),a=n(271),r=n(274);e.exports=function(e,t){return i(e)?e:o(e,t)?[e]:a(r(e))}},function(e,t,n){},function(e,t,n){n(0)({target:"Object",stat:!0},{setPrototypeOf:n(104)})},function(e,t,n){var i=n(0),o=n(20),a=n(23),r=n(5),s=n(4),l=n(39),c=n(305),u=n(1),d=o("Reflect","construct"),h=u((function(){function e(){}return!(d((function(){}),[],e)instanceof e)})),f=!u((function(){d((function(){}))})),p=h||f;i({target:"Reflect",stat:!0,forced:p,sham:p},{construct:function(e,t){a(e),r(t);var n=arguments.length<3?e:a(arguments[2]);if(f&&!h)return d(e,t,n);if(e==n){switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3])}var i=[null];return i.push.apply(i,t),new(c.apply(e,i))}var o=n.prototype,u=l(s(o)?o:Object.prototype),p=Function.apply.call(e,u,t);return s(p)?p:u}})},function(e,t,n){},function(e,t,n){var i=n(207),o=n(212),a=n(283),r=n(291),s=n(300),l=n(184),c=a((function(e){var t=l(e);return s(t)&&(t=void 0),r(i(e,1,s,!0),o(t,2))}));e.exports=c},function(e,t){var n=/^\s+|\s+$/g,i=/^[-+]0x[0-9a-f]+$/i,o=/^0b[01]+$/i,a=/^0o[0-7]+$/i,r=parseInt,s="object"==typeof global&&global&&global.Object===Object&&global,l="object"==typeof self&&self&&self.Object===Object&&self,c=s||l||Function("return this")(),u=Object.prototype.toString,d=Math.max,h=Math.min,f=function(){return c.Date.now()};function p(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}function m(e){if("number"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Symbol]"==u.call(e)}(e))return NaN;if(p(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=p(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(n,"");var s=o.test(e);return s||a.test(e)?r(e.slice(2),s?2:8):i.test(e)?NaN:+e}e.exports=function(e,t,n){var i,o,a,r,s,l,c=0,u=!1,g=!1,y=!0;if("function"!=typeof e)throw new TypeError("Expected a function");function v(t){var n=i,a=o;return i=o=void 0,c=t,r=e.apply(a,n)}function w(e){return c=e,s=setTimeout(k,t),u?v(e):r}function b(e){var n=e-l;return void 0===l||n>=t||n<0||g&&e-c>=a}function k(){var e=f();if(b(e))return x(e);s=setTimeout(k,function(e){var n=t-(e-l);return g?h(n,a-(e-c)):n}(e))}function x(e){return s=void 0,y&&i?v(e):(i=o=void 0,r)}function A(){var e=f(),n=b(e);if(i=arguments,o=this,l=e,n){if(void 0===s)return w(l);if(g)return s=setTimeout(k,t),v(l)}return void 0===s&&(s=setTimeout(k,t)),r}return t=m(t)||0,p(n)&&(u=!!n.leading,a=(g="maxWait"in n)?d(m(n.maxWait)||0,t):a,y="trailing"in n?!!n.trailing:y),A.cancel=function(){void 0!==s&&clearTimeout(s),c=0,i=l=o=s=void 0},A.flush=function(){return void 0===s?r:x(f())},A}},function(e,t,n){!function(){"use strict";e.exports={polyfill:function(){var e=window,t=document;if(!("scrollBehavior"in t.documentElement.style)||!0===e.__forceSmoothScrollPolyfill__){var n,i=e.HTMLElement||e.Element,o={scroll:e.scroll||e.scrollTo,scrollBy:e.scrollBy,elementScroll:i.prototype.scroll||s,scrollIntoView:i.prototype.scrollIntoView},a=e.performance&&e.performance.now?e.performance.now.bind(e.performance):Date.now,r=(n=e.navigator.userAgent,new RegExp(["MSIE ","Trident/","Edge/"].join("|")).test(n)?1:0);e.scroll=e.scrollTo=function(){void 0!==arguments[0]&&(!0!==l(arguments[0])?p.call(e,t.body,void 0!==arguments[0].left?~~arguments[0].left:e.scrollX||e.pageXOffset,void 0!==arguments[0].top?~~arguments[0].top:e.scrollY||e.pageYOffset):o.scroll.call(e,void 0!==arguments[0].left?arguments[0].left:"object"!=typeof arguments[0]?arguments[0]:e.scrollX||e.pageXOffset,void 0!==arguments[0].top?arguments[0].top:void 0!==arguments[1]?arguments[1]:e.scrollY||e.pageYOffset))},e.scrollBy=function(){void 0!==arguments[0]&&(l(arguments[0])?o.scrollBy.call(e,void 0!==arguments[0].left?arguments[0].left:"object"!=typeof arguments[0]?arguments[0]:0,void 0!==arguments[0].top?arguments[0].top:void 0!==arguments[1]?arguments[1]:0):p.call(e,t.body,~~arguments[0].left+(e.scrollX||e.pageXOffset),~~arguments[0].top+(e.scrollY||e.pageYOffset)))},i.prototype.scroll=i.prototype.scrollTo=function(){if(void 0!==arguments[0])if(!0!==l(arguments[0])){var e=arguments[0].left,t=arguments[0].top;p.call(this,this,void 0===e?this.scrollLeft:~~e,void 0===t?this.scrollTop:~~t)}else{if("number"==typeof arguments[0]&&void 0===arguments[1])throw new SyntaxError("Value could not be converted");o.elementScroll.call(this,void 0!==arguments[0].left?~~arguments[0].left:"object"!=typeof arguments[0]?~~arguments[0]:this.scrollLeft,void 0!==arguments[0].top?~~arguments[0].top:void 0!==arguments[1]?~~arguments[1]:this.scrollTop)}},i.prototype.scrollBy=function(){void 0!==arguments[0]&&(!0!==l(arguments[0])?this.scroll({left:~~arguments[0].left+this.scrollLeft,top:~~arguments[0].top+this.scrollTop,behavior:arguments[0].behavior}):o.elementScroll.call(this,void 0!==arguments[0].left?~~arguments[0].left+this.scrollLeft:~~arguments[0]+this.scrollLeft,void 0!==arguments[0].top?~~arguments[0].top+this.scrollTop:~~arguments[1]+this.scrollTop))},i.prototype.scrollIntoView=function(){if(!0!==l(arguments[0])){var n=h(this),i=n.getBoundingClientRect(),a=this.getBoundingClientRect();n!==t.body?(p.call(this,n,n.scrollLeft+a.left-i.left,n.scrollTop+a.top-i.top),"fixed"!==e.getComputedStyle(n).position&&e.scrollBy({left:i.left,top:i.top,behavior:"smooth"})):e.scrollBy({left:a.left,top:a.top,behavior:"smooth"})}else o.scrollIntoView.call(this,void 0===arguments[0]||arguments[0])}}function s(e,t){this.scrollLeft=e,this.scrollTop=t}function l(e){if(null===e||"object"!=typeof e||void 0===e.behavior||"auto"===e.behavior||"instant"===e.behavior)return!0;if("object"==typeof e&&"smooth"===e.behavior)return!1;throw new TypeError("behavior member of ScrollOptions "+e.behavior+" is not a valid value for enumeration ScrollBehavior.")}function c(e,t){return"Y"===t?e.clientHeight+r<e.scrollHeight:"X"===t?e.clientWidth+r<e.scrollWidth:void 0}function u(t,n){var i=e.getComputedStyle(t,null)["overflow"+n];return"auto"===i||"scroll"===i}function d(e){var t=c(e,"Y")&&u(e,"Y"),n=c(e,"X")&&u(e,"X");return t||n}function h(e){for(;e!==t.body&&!1===d(e);)e=e.parentNode||e.host;return e}function f(t){var n,i,o,r,s=(a()-t.startTime)/468;r=s=s>1?1:s,n=.5*(1-Math.cos(Math.PI*r)),i=t.startX+(t.x-t.startX)*n,o=t.startY+(t.y-t.startY)*n,t.method.call(t.scrollable,i,o),i===t.x&&o===t.y||e.requestAnimationFrame(f.bind(e,t))}function p(n,i,r){var l,c,u,d,h=a();n===t.body?(l=e,c=e.scrollX||e.pageXOffset,u=e.scrollY||e.pageYOffset,d=o.scroll):(l=n,c=n.scrollLeft,u=n.scrollTop,d=s),f({scrollable:l,method:d,startTime:h,startX:c,startY:u,x:i,y:r})}}}}()},function(e,t,n){"use strict";var i=n(0),o=n(28).some,a=n(31),r=n(15),s=a("some"),l=r("some");i({target:"Array",proto:!0,forced:!s||!l},{some:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){"use strict";var i=n(0),o=n(74).includes,a=n(68);i({target:"Array",proto:!0,forced:!n(15)("indexOf",{ACCESSORS:!0,1:0})},{includes:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}}),a("includes")},function(e,t,n){"use strict";var i=n(0),o=n(140),a=n(21);i({target:"String",proto:!0,forced:!n(141)("includes")},{includes:function(e){return!!~String(a(this)).indexOf(o(e),arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){"use strict";var i=n(0),o=n(74).indexOf,a=n(31),r=n(15),s=[].indexOf,l=!!s&&1/[1].indexOf(1,-0)<0,c=a("indexOf"),u=r("indexOf",{ACCESSORS:!0,1:0});i({target:"Array",proto:!0,forced:l||!c||!u},{indexOf:function(e){return l?s.apply(this,arguments)||0:o(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){"use strict";var i=n(0),o=n(28).find,a=n(68),r=n(15),s=!0,l=r("find");"find"in[]&&Array(1).find((function(){s=!1})),i({target:"Array",proto:!0,forced:s||!l},{find:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}}),a("find")},function(e,t,n){var i=n(0),o=n(6);i({target:"Object",stat:!0,forced:!o,sham:!o},{defineProperty:n(8).f})},function(e,t,n){var i=n(6),o=n(8),a=n(5),r=n(51);e.exports=i?Object.defineProperties:function(e,t){a(e);for(var n,i=r(t),s=i.length,l=0;s>l;)o.f(e,n=i[l++],t[n]);return e}},function(e,t,n){"use strict";var i=n(20),o=n(8),a=n(2),r=n(6),s=a("species");e.exports=function(e){var t=i(e),n=o.f;r&&t&&!t[s]&&n(t,s,{configurable:!0,get:function(){return this}})}},function(e,t,n){var i=n(0),o=n(6),a=n(121),r=n(14),s=n(27),l=n(55);i({target:"Object",stat:!0,sham:!o},{getOwnPropertyDescriptors:function(e){for(var t,n,i=r(e),o=s.f,c=a(i),u={},d=0;c.length>d;)void 0!==(n=o(i,t=c[d++]))&&l(u,t,n);return u}})},function(e,t,n){"use strict";var i=n(1);function o(e,t){return RegExp(e,t)}t.UNSUPPORTED_Y=i((function(){var e=o("a","y");return e.lastIndex=2,null!=e.exec("abcd")})),t.BROKEN_CARET=i((function(){var e=o("^r","gy");return e.lastIndex=2,null!=e.exec("str")}))},function(e,t){e.exports=function(e){var t=null==e?0:e.length;return t?e[t-1]:void 0}},function(e,t,n){e.exports=n(307)},function(e,t,n){var i=n(3),o=n(76),a=i.WeakMap;e.exports="function"==typeof a&&/native code/.test(o(a))},function(e,t,n){"use strict";var i=n(122).IteratorPrototype,o=n(39),a=n(38),r=n(53),s=n(41),l=function(){return this};e.exports=function(e,t,n){var c=t+" Iterator";return e.prototype=o(i,{next:a(1,n)}),r(e,c,!1,!0),s[c]=l,e}},function(e,t,n){var i=n(4);e.exports=function(e){if(!i(e)&&null!==e)throw TypeError("Can't set "+String(e)+" as a prototype");return e}},function(e,t,n){"use strict";var i,o,a,r,s=n(0),l=n(22),c=n(3),u=n(20),d=n(124),h=n(11),f=n(190),p=n(53),m=n(181),g=n(4),y=n(23),v=n(191),w=n(19),b=n(76),k=n(192),x=n(129),A=n(81),S=n(130).set,j=n(193),_=n(133),I=n(194),P=n(134),T=n(195),z=n(32),E=n(103),C=n(2),L=n(82),D=C("species"),O="Promise",W=z.get,R=z.set,N=z.getterFor(O),H=d,M=c.TypeError,U=c.document,q=c.process,$=u("fetch"),F=P.f,G=F,B="process"==w(q),V=!!(U&&U.createEvent&&c.dispatchEvent),Y=E(O,(function(){if(!(b(H)!==String(H))){if(66===L)return!0;if(!B&&"function"!=typeof PromiseRejectionEvent)return!0}if(l&&!H.prototype.finally)return!0;if(L>=51&&/native code/.test(H))return!1;var e=H.resolve(1),t=function(e){e((function(){}),(function(){}))};return(e.constructor={})[D]=t,!(e.then((function(){}))instanceof t)})),K=Y||!x((function(e){H.all(e).catch((function(){}))})),J=function(e){var t;return!(!g(e)||"function"!=typeof(t=e.then))&&t},Q=function(e,t,n){if(!t.notified){t.notified=!0;var i=t.reactions;j((function(){for(var o=t.value,a=1==t.state,r=0;i.length>r;){var s,l,c,u=i[r++],d=a?u.ok:u.fail,h=u.resolve,f=u.reject,p=u.domain;try{d?(a||(2===t.rejection&&te(e,t),t.rejection=1),!0===d?s=o:(p&&p.enter(),s=d(o),p&&(p.exit(),c=!0)),s===u.promise?f(M("Promise-chain cycle")):(l=J(s))?l.call(s,h,f):h(s)):f(o)}catch(e){p&&!c&&p.exit(),f(e)}}t.reactions=[],t.notified=!1,n&&!t.rejection&&X(e,t)}))}},Z=function(e,t,n){var i,o;V?((i=U.createEvent("Event")).promise=t,i.reason=n,i.initEvent(e,!1,!0),c.dispatchEvent(i)):i={promise:t,reason:n},(o=c["on"+e])?o(i):"unhandledrejection"===e&&I("Unhandled promise rejection",n)},X=function(e,t){S.call(c,(function(){var n,i=t.value;if(ee(t)&&(n=T((function(){B?q.emit("unhandledRejection",i,e):Z("unhandledrejection",e,i)})),t.rejection=B||ee(t)?2:1,n.error))throw n.value}))},ee=function(e){return 1!==e.rejection&&!e.parent},te=function(e,t){S.call(c,(function(){B?q.emit("rejectionHandled",e):Z("rejectionhandled",e,t.value)}))},ne=function(e,t,n,i){return function(o){e(t,n,o,i)}},ie=function(e,t,n,i){t.done||(t.done=!0,i&&(t=i),t.value=n,t.state=2,Q(e,t,!0))},oe=function(e,t,n,i){if(!t.done){t.done=!0,i&&(t=i);try{if(e===n)throw M("Promise can't be resolved itself");var o=J(n);o?j((function(){var i={done:!1};try{o.call(n,ne(oe,e,i,t),ne(ie,e,i,t))}catch(n){ie(e,i,n,t)}})):(t.value=n,t.state=1,Q(e,t,!1))}catch(n){ie(e,{done:!1},n,t)}}};Y&&(H=function(e){v(this,H,O),y(e),i.call(this);var t=W(this);try{e(ne(oe,this,t),ne(ie,this,t))}catch(e){ie(this,t,e)}},(i=function(e){R(this,{type:O,done:!1,notified:!1,parent:!1,reactions:[],rejection:!1,state:0,value:void 0})}).prototype=f(H.prototype,{then:function(e,t){var n=N(this),i=F(A(this,H));return i.ok="function"!=typeof e||e,i.fail="function"==typeof t&&t,i.domain=B?q.domain:void 0,n.parent=!0,n.reactions.push(i),0!=n.state&&Q(this,n,!1),i.promise},catch:function(e){return this.then(void 0,e)}}),o=function(){var e=new i,t=W(e);this.promise=e,this.resolve=ne(oe,e,t),this.reject=ne(ie,e,t)},P.f=F=function(e){return e===H||e===a?new o(e):G(e)},l||"function"!=typeof d||(r=d.prototype.then,h(d.prototype,"then",(function(e,t){var n=this;return new H((function(e,t){r.call(n,e,t)})).then(e,t)}),{unsafe:!0}),"function"==typeof $&&s({global:!0,enumerable:!0,forced:!0},{fetch:function(e){return _(H,$.apply(c,arguments))}}))),s({global:!0,wrap:!0,forced:Y},{Promise:H}),p(H,O,!1,!0),m(O),a=u(O),s({target:O,stat:!0,forced:Y},{reject:function(e){var t=F(this);return t.reject.call(void 0,e),t.promise}}),s({target:O,stat:!0,forced:l||Y},{resolve:function(e){return _(l&&this===a?H:this,e)}}),s({target:O,stat:!0,forced:K},{all:function(e){var t=this,n=F(t),i=n.resolve,o=n.reject,a=T((function(){var n=y(t.resolve),a=[],r=0,s=1;k(e,(function(e){var l=r++,c=!1;a.push(void 0),s++,n.call(t,e).then((function(e){c||(c=!0,a[l]=e,--s||i(a))}),o)})),--s||i(a)}));return a.error&&o(a.value),n.promise},race:function(e){var t=this,n=F(t),i=n.reject,o=T((function(){var o=y(t.resolve);k(e,(function(e){o.call(t,e).then(n.resolve,i)}))}));return o.error&&i(o.value),n.promise}})},function(e,t,n){var i=n(11);e.exports=function(e,t,n){for(var o in t)i(e,o,t[o],n);return e}},function(e,t){e.exports=function(e,t,n){if(!(e instanceof t))throw TypeError("Incorrect "+(n?n+" ":"")+"invocation");return e}},function(e,t,n){var i=n(5),o=n(125),a=n(10),r=n(46),s=n(126),l=n(128),c=function(e,t){this.stopped=e,this.result=t};(e.exports=function(e,t,n,u,d){var h,f,p,m,g,y,v,w=r(t,n,u?2:1);if(d)h=e;else{if("function"!=typeof(f=s(e)))throw TypeError("Target is not iterable");if(o(f)){for(p=0,m=a(e.length);m>p;p++)if((g=u?w(i(v=e[p])[0],v[1]):w(e[p]))&&g instanceof c)return g;return new c(!1)}h=f.call(e)}for(y=h.next;!(v=y.call(h)).done;)if("object"==typeof(g=l(h,w,v.value,u))&&g&&g instanceof c)return g;return new c(!1)}).stop=function(e){return new c(!0,e)}},function(e,t,n){var i,o,a,r,s,l,c,u,d=n(3),h=n(27).f,f=n(19),p=n(130).set,m=n(131),g=d.MutationObserver||d.WebKitMutationObserver,y=d.process,v=d.Promise,w="process"==f(y),b=h(d,"queueMicrotask"),k=b&&b.value;k||(i=function(){var e,t;for(w&&(e=y.domain)&&e.exit();o;){t=o.fn,o=o.next;try{t()}catch(e){throw o?r():a=void 0,e}}a=void 0,e&&e.enter()},w?r=function(){y.nextTick(i)}:g&&!m?(s=!0,l=document.createTextNode(""),new g(i).observe(l,{characterData:!0}),r=function(){l.data=s=!s}):v&&v.resolve?(c=v.resolve(void 0),u=c.then,r=function(){u.call(c,i)}):r=function(){p.call(d,i)}),e.exports=k||function(e){var t={fn:e,next:void 0};a&&(a.next=t),o||(o=t,r()),a=t}},function(e,t,n){var i=n(3);e.exports=function(e,t){var n=i.console;n&&n.error&&(1===arguments.length?n.error(e):n.error(e,t))}},function(e,t){e.exports=function(e){try{return{error:!1,value:e()}}catch(e){return{error:!0,value:e}}}},function(e,t,n){var i=n(0),o=n(197);i({target:"Object",stat:!0,forced:Object.assign!==o},{assign:o})},function(e,t,n){"use strict";var i=n(6),o=n(1),a=n(51),r=n(78),s=n(77),l=n(12),c=n(37),u=Object.assign,d=Object.defineProperty;e.exports=!u||o((function(){if(i&&1!==u({b:1},u(d({},"a",{enumerable:!0,get:function(){d(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var e={},t={},n=Symbol();return e[n]=7,"abcdefghijklmnopqrst".split("").forEach((function(e){t[e]=e})),7!=u({},e)[n]||"abcdefghijklmnopqrst"!=a(u({},t)).join("")}))?function(e,t){for(var n=l(e),o=arguments.length,u=1,d=r.f,h=s.f;o>u;)for(var f,p=c(arguments[u++]),m=d?a(p).concat(d(p)):a(p),g=m.length,y=0;g>y;)f=m[y++],i&&!h.call(p,f)||(n[f]=p[f]);return n}:u},function(e,t,n){"use strict";var i=n(0),o=n(22),a=n(124),r=n(1),s=n(20),l=n(81),c=n(133),u=n(11);i({target:"Promise",proto:!0,real:!0,forced:!!a&&r((function(){a.prototype.finally.call({then:function(){}},(function(){}))}))},{finally:function(e){var t=l(this,s("Promise")),n="function"==typeof e;return this.then(n?function(n){return c(t,e()).then((function(){return n}))}:e,n?function(n){return c(t,e()).then((function(){throw n}))}:e)}}),o||"function"!=typeof a||a.prototype.finally||u(a.prototype,"finally",s("Promise").prototype.finally)},function(e,t,n){"use strict";var i=n(80),o=n(127);e.exports=i?{}.toString:function(){return"[object "+o(this)+"]"}},function(e,t,n){"use strict";var i=n(0),o=n(201).left,a=n(31),r=n(15),s=a("reduce"),l=r("reduce",{1:0});i({target:"Array",proto:!0,forced:!s||!l},{reduce:function(e){return o(this,e,arguments.length,arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){var i=n(23),o=n(12),a=n(37),r=n(10),s=function(e){return function(t,n,s,l){i(n);var c=o(t),u=a(c),d=r(c.length),h=e?d-1:0,f=e?-1:1;if(s<2)for(;;){if(h in u){l=u[h],h+=f;break}if(h+=f,e?h<0:d<=h)throw TypeError("Reduce of empty array with no initial value")}for(;e?h>=0:d>h;h+=f)h in u&&(l=n(l,u[h],h,c));return l}};e.exports={left:s(!1),right:s(!0)}},function(e,t,n){var i=n(0),o=n(138),a=n(1),r=n(4),s=n(203).onFreeze,l=Object.freeze;i({target:"Object",stat:!0,forced:a((function(){l(1)})),sham:!o},{freeze:function(e){return l&&r(e)?l(s(e)):e}})},function(e,t,n){var i=n(40),o=n(4),a=n(7),r=n(8).f,s=n(50),l=n(138),c=s("meta"),u=0,d=Object.isExtensible||function(){return!0},h=function(e){r(e,c,{value:{objectID:"O"+ ++u,weakData:{}}})},f=e.exports={REQUIRED:!1,fastKey:function(e,t){if(!o(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!a(e,c)){if(!d(e))return"F";if(!t)return"E";h(e)}return e[c].objectID},getWeakData:function(e,t){if(!a(e,c)){if(!d(e))return!0;if(!t)return!1;h(e)}return e[c].weakData},onFreeze:function(e){return l&&f.REQUIRED&&d(e)&&!a(e,c)&&h(e),e}};i[c]=!0},function(e,t,n){"use strict";var i,o=n(0),a=n(27).f,r=n(10),s=n(140),l=n(21),c=n(141),u=n(22),d="".startsWith,h=Math.min,f=c("startsWith");o({target:"String",proto:!0,forced:!!(u||f||(i=a(String.prototype,"startsWith"),!i||i.writable))&&!f},{startsWith:function(e){var t=String(l(this));s(e);var n=r(h(arguments.length>1?arguments[1]:void 0,t.length)),i=String(e);return d?d.call(t,i,n):t.slice(n,n+i.length)===i}})},function(e,t,n){var i=n(14),o=n(69).f,a={}.toString,r="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return r&&"[object Window]"==a.call(e)?function(e){try{return o(e)}catch(e){return r.slice()}}(e):o(i(e))}},function(e,t,n){"use strict";var i=n(46),o=n(12),a=n(128),r=n(125),s=n(10),l=n(55),c=n(126);e.exports=function(e){var t,n,u,d,h,f,p=o(e),m="function"==typeof this?this:Array,g=arguments.length,y=g>1?arguments[1]:void 0,v=void 0!==y,w=c(p),b=0;if(v&&(y=i(y,g>2?arguments[2]:void 0,2)),null==w||m==Array&&r(w))for(n=new m(t=s(p.length));t>b;b++)f=v?y(p[b],b):p[b],l(n,b,f);else for(h=(d=w.call(p)).next,n=new m;!(u=h.call(d)).done;b++)f=v?a(d,y,[u.value,b],!0):u.value,l(n,b,f);return n.length=b,n}},function(e,t,n){var i=n(147),o=n(208);e.exports=function e(t,n,a,r,s){var l=-1,c=t.length;for(a||(a=o),s||(s=[]);++l<c;){var u=t[l];n>0&&a(u)?n>1?e(u,n-1,a,r,s):i(s,u):r||(s[s.length]=u)}return s}},function(e,t,n){var i=n(42),o=n(85),a=n(16),r=i?i.isConcatSpreadable:void 0;e.exports=function(e){return a(e)||o(e)||!!(r&&e&&e[r])}},function(e,t,n){var i=n(35),o=n(29);e.exports=function(e){return o(e)&&"[object Arguments]"==i(e)}},function(e,t,n){var i=n(42),o=Object.prototype,a=o.hasOwnProperty,r=o.toString,s=i?i.toStringTag:void 0;e.exports=function(e){var t=a.call(e,s),n=e[s];try{e[s]=void 0;var i=!0}catch(e){}var o=r.call(e);return i&&(t?e[s]=n:delete e[s]),o}},function(e,t){var n=Object.prototype.toString;e.exports=function(e){return n.call(e)}},function(e,t,n){var i=n(213),o=n(269),a=n(93),r=n(16),s=n(280);e.exports=function(e){return"function"==typeof e?e:null==e?a:"object"==typeof e?r(e)?o(e[0],e[1]):i(e):s(e)}},function(e,t,n){var i=n(214),o=n(268),a=n(164);e.exports=function(e){var t=o(e);return 1==t.length&&t[0][2]?a(t[0][0],t[0][1]):function(n){return n===e||i(n,e,t)}}},function(e,t,n){var i=n(149),o=n(153);e.exports=function(e,t,n,a){var r=n.length,s=r,l=!a;if(null==e)return!s;for(e=Object(e);r--;){var c=n[r];if(l&&c[2]?c[1]!==e[c[0]]:!(c[0]in e))return!1}for(;++r<s;){var u=(c=n[r])[0],d=e[u],h=c[1];if(l&&c[2]){if(void 0===d&&!(u in e))return!1}else{var f=new i;if(a)var p=a(d,h,u,e,t,f);if(!(void 0===p?o(h,d,3,a,f):p))return!1}}return!0}},function(e,t){e.exports=function(){this.__data__=[],this.size=0}},function(e,t,n){var i=n(60),o=Array.prototype.splice;e.exports=function(e){var t=this.__data__,n=i(t,e);return!(n<0)&&(n==t.length-1?t.pop():o.call(t,n,1),--this.size,!0)}},function(e,t,n){var i=n(60);e.exports=function(e){var t=this.__data__,n=i(t,e);return n<0?void 0:t[n][1]}},function(e,t,n){var i=n(60);e.exports=function(e){return i(this.__data__,e)>-1}},function(e,t,n){var i=n(60);e.exports=function(e,t){var n=this.__data__,o=i(n,e);return o<0?(++this.size,n.push([e,t])):n[o][1]=t,this}},function(e,t,n){var i=n(59);e.exports=function(){this.__data__=new i,this.size=0}},function(e,t){e.exports=function(e){var t=this.__data__,n=t.delete(e);return this.size=t.size,n}},function(e,t){e.exports=function(e){return this.__data__.get(e)}},function(e,t){e.exports=function(e){return this.__data__.has(e)}},function(e,t,n){var i=n(59),o=n(86),a=n(88);e.exports=function(e,t){var n=this.__data__;if(n instanceof i){var r=n.__data__;if(!o||r.length<199)return r.push([e,t]),this.size=++n.size,this;n=this.__data__=new a(r)}return n.set(e,t),this.size=n.size,this}},function(e,t,n){var i=n(151),o=n(226),a=n(87),r=n(152),s=/^\[object .+?Constructor\]$/,l=Function.prototype,c=Object.prototype,u=l.toString,d=c.hasOwnProperty,h=RegExp("^"+u.call(d).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");e.exports=function(e){return!(!a(e)||o(e))&&(i(e)?h:s).test(r(e))}},function(e,t,n){var i,o=n(227),a=(i=/[^.]+$/.exec(o&&o.keys&&o.keys.IE_PROTO||""))?"Symbol(src)_1."+i:"";e.exports=function(e){return!!a&&a in e}},function(e,t,n){var i=n(17)["__core-js_shared__"];e.exports=i},function(e,t){e.exports=function(e,t){return null==e?void 0:e[t]}},function(e,t,n){var i=n(230),o=n(59),a=n(86);e.exports=function(){this.size=0,this.__data__={hash:new i,map:new(a||o),string:new i}}},function(e,t,n){var i=n(231),o=n(232),a=n(233),r=n(234),s=n(235);function l(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var i=e[t];this.set(i[0],i[1])}}l.prototype.clear=i,l.prototype.delete=o,l.prototype.get=a,l.prototype.has=r,l.prototype.set=s,e.exports=l},function(e,t,n){var i=n(61);e.exports=function(){this.__data__=i?i(null):{},this.size=0}},function(e,t){e.exports=function(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t}},function(e,t,n){var i=n(61),o=Object.prototype.hasOwnProperty;e.exports=function(e){var t=this.__data__;if(i){var n=t[e];return"__lodash_hash_undefined__"===n?void 0:n}return o.call(t,e)?t[e]:void 0}},function(e,t,n){var i=n(61),o=Object.prototype.hasOwnProperty;e.exports=function(e){var t=this.__data__;return i?void 0!==t[e]:o.call(t,e)}},function(e,t,n){var i=n(61);e.exports=function(e,t){var n=this.__data__;return this.size+=this.has(e)?0:1,n[e]=i&&void 0===t?"__lodash_hash_undefined__":t,this}},function(e,t,n){var i=n(62);e.exports=function(e){var t=i(this,e).delete(e);return this.size-=t?1:0,t}},function(e,t){e.exports=function(e){var t=typeof e;return"string"==t||"number"==t||"symbol"==t||"boolean"==t?"__proto__"!==e:null===e}},function(e,t,n){var i=n(62);e.exports=function(e){return i(this,e).get(e)}},function(e,t,n){var i=n(62);e.exports=function(e){return i(this,e).has(e)}},function(e,t,n){var i=n(62);e.exports=function(e,t){var n=i(this,e),o=n.size;return n.set(e,t),this.size+=n.size==o?0:1,this}},function(e,t,n){var i=n(149),o=n(154),a=n(245),r=n(248),s=n(264),l=n(16),c=n(158),u=n(160),d="[object Object]",h=Object.prototype.hasOwnProperty;e.exports=function(e,t,n,f,p,m){var g=l(e),y=l(t),v=g?"[object Array]":s(e),w=y?"[object Array]":s(t),b=(v="[object Arguments]"==v?d:v)==d,k=(w="[object Arguments]"==w?d:w)==d,x=v==w;if(x&&c(e)){if(!c(t))return!1;g=!0,b=!1}if(x&&!b)return m||(m=new i),g||u(e)?o(e,t,n,f,p,m):a(e,t,v,n,f,p,m);if(!(1&n)){var A=b&&h.call(e,"__wrapped__"),S=k&&h.call(t,"__wrapped__");if(A||S){var j=A?e.value():e,_=S?t.value():t;return m||(m=new i),p(j,_,n,f,m)}}return!!x&&(m||(m=new i),r(e,t,n,f,p,m))}},function(e,t){e.exports=function(e){return this.__data__.set(e,"__lodash_hash_undefined__"),this}},function(e,t){e.exports=function(e){return this.__data__.has(e)}},function(e,t){e.exports=function(e,t){for(var n=-1,i=null==e?0:e.length;++n<i;)if(t(e[n],n,e))return!0;return!1}},function(e,t,n){var i=n(42),o=n(246),a=n(150),r=n(154),s=n(247),l=n(89),c=i?i.prototype:void 0,u=c?c.valueOf:void 0;e.exports=function(e,t,n,i,c,d,h){switch(n){case"[object DataView]":if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case"[object ArrayBuffer]":return!(e.byteLength!=t.byteLength||!d(new o(e),new o(t)));case"[object Boolean]":case"[object Date]":case"[object Number]":return a(+e,+t);case"[object Error]":return e.name==t.name&&e.message==t.message;case"[object RegExp]":case"[object String]":return e==t+"";case"[object Map]":var f=s;case"[object Set]":var p=1&i;if(f||(f=l),e.size!=t.size&&!p)return!1;var m=h.get(e);if(m)return m==t;i|=2,h.set(e,t);var g=r(f(e),f(t),i,c,d,h);return h.delete(e),g;case"[object Symbol]":if(u)return u.call(e)==u.call(t)}return!1}},function(e,t,n){var i=n(17).Uint8Array;e.exports=i},function(e,t){e.exports=function(e){var t=-1,n=Array(e.size);return e.forEach((function(e,i){n[++t]=[i,e]})),n}},function(e,t,n){var i=n(249),o=Object.prototype.hasOwnProperty;e.exports=function(e,t,n,a,r,s){var l=1&n,c=i(e),u=c.length;if(u!=i(t).length&&!l)return!1;for(var d=u;d--;){var h=c[d];if(!(l?h in t:o.call(t,h)))return!1}var f=s.get(e),p=s.get(t);if(f&&p)return f==t&&p==e;var m=!0;s.set(e,t),s.set(t,e);for(var g=l;++d<u;){var y=e[h=c[d]],v=t[h];if(a)var w=l?a(v,y,h,t,e,s):a(y,v,h,e,t,s);if(!(void 0===w?y===v||r(y,v,n,a,s):w)){m=!1;break}g||(g="constructor"==h)}if(m&&!g){var b=e.constructor,k=t.constructor;b==k||!("constructor"in e)||!("constructor"in t)||"function"==typeof b&&b instanceof b&&"function"==typeof k&&k instanceof k||(m=!1)}return s.delete(e),s.delete(t),m}},function(e,t,n){var i=n(250),o=n(251),a=n(157);e.exports=function(e){return i(e,a,o)}},function(e,t,n){var i=n(147),o=n(16);e.exports=function(e,t,n){var a=t(e);return o(e)?a:i(a,n(e))}},function(e,t,n){var i=n(252),o=n(253),a=Object.prototype.propertyIsEnumerable,r=Object.getOwnPropertySymbols,s=r?function(e){return null==e?[]:(e=Object(e),i(r(e),(function(t){return a.call(e,t)})))}:o;e.exports=s},function(e,t){e.exports=function(e,t){for(var n=-1,i=null==e?0:e.length,o=0,a=[];++n<i;){var r=e[n];t(r,n,e)&&(a[o++]=r)}return a}},function(e,t){e.exports=function(){return[]}},function(e,t,n){var i=n(255),o=n(85),a=n(16),r=n(158),s=n(159),l=n(160),c=Object.prototype.hasOwnProperty;e.exports=function(e,t){var n=a(e),u=!n&&o(e),d=!n&&!u&&r(e),h=!n&&!u&&!d&&l(e),f=n||u||d||h,p=f?i(e.length,String):[],m=p.length;for(var g in e)!t&&!c.call(e,g)||f&&("length"==g||d&&("offset"==g||"parent"==g)||h&&("buffer"==g||"byteLength"==g||"byteOffset"==g)||s(g,m))||p.push(g);return p}},function(e,t){e.exports=function(e,t){for(var n=-1,i=Array(e);++n<e;)i[n]=t(n);return i}},function(e,t){e.exports=function(){return!1}},function(e,t,n){var i=n(35),o=n(90),a=n(29),r={};r["[object Float32Array]"]=r["[object Float64Array]"]=r["[object Int8Array]"]=r["[object Int16Array]"]=r["[object Int32Array]"]=r["[object Uint8Array]"]=r["[object Uint8ClampedArray]"]=r["[object Uint16Array]"]=r["[object Uint32Array]"]=!0,r["[object Arguments]"]=r["[object Array]"]=r["[object ArrayBuffer]"]=r["[object Boolean]"]=r["[object DataView]"]=r["[object Date]"]=r["[object Error]"]=r["[object Function]"]=r["[object Map]"]=r["[object Number]"]=r["[object Object]"]=r["[object RegExp]"]=r["[object Set]"]=r["[object String]"]=r["[object WeakMap]"]=!1,e.exports=function(e){return a(e)&&o(e.length)&&!!r[i(e)]}},function(e,t){e.exports=function(e){return function(t){return e(t)}}},function(e,t,n){(function(e){var i=n(148),o=t&&!t.nodeType&&t,a=o&&"object"==typeof e&&e&&!e.nodeType&&e,r=a&&a.exports===o&&i.process,s=function(){try{var e=a&&a.require&&a.require("util").types;return e||r&&r.binding&&r.binding("util")}catch(e){}}();e.exports=s}).call(this,n(110)(e))},function(e,t,n){var i=n(261),o=n(262),a=Object.prototype.hasOwnProperty;e.exports=function(e){if(!i(e))return o(e);var t=[];for(var n in Object(e))a.call(e,n)&&"constructor"!=n&&t.push(n);return t}},function(e,t){var n=Object.prototype;e.exports=function(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||n)}},function(e,t,n){var i=n(263)(Object.keys,Object);e.exports=i},function(e,t){e.exports=function(e,t){return function(n){return e(t(n))}}},function(e,t,n){var i=n(265),o=n(86),a=n(266),r=n(162),s=n(267),l=n(35),c=n(152),u=c(i),d=c(o),h=c(a),f=c(r),p=c(s),m=l;(i&&"[object DataView]"!=m(new i(new ArrayBuffer(1)))||o&&"[object Map]"!=m(new o)||a&&"[object Promise]"!=m(a.resolve())||r&&"[object Set]"!=m(new r)||s&&"[object WeakMap]"!=m(new s))&&(m=function(e){var t=l(e),n="[object Object]"==t?e.constructor:void 0,i=n?c(n):"";if(i)switch(i){case u:return"[object DataView]";case d:return"[object Map]";case h:return"[object Promise]";case f:return"[object Set]";case p:return"[object WeakMap]"}return t}),e.exports=m},function(e,t,n){var i=n(24)(n(17),"DataView");e.exports=i},function(e,t,n){var i=n(24)(n(17),"Promise");e.exports=i},function(e,t,n){var i=n(24)(n(17),"WeakMap");e.exports=i},function(e,t,n){var i=n(163),o=n(157);e.exports=function(e){for(var t=o(e),n=t.length;n--;){var a=t[n],r=e[a];t[n]=[a,r,i(r)]}return t}},function(e,t,n){var i=n(153),o=n(270),a=n(277),r=n(91),s=n(163),l=n(164),c=n(63);e.exports=function(e,t){return r(e)&&s(t)?l(c(e),t):function(n){var r=o(n,e);return void 0===r&&r===t?a(n,e):i(t,r,3)}}},function(e,t,n){var i=n(165);e.exports=function(e,t,n){var o=null==e?void 0:i(e,t);return void 0===o?n:o}},function(e,t,n){var i=n(272),o=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,a=/\\(\\)?/g,r=i((function(e){var t=[];return 46===e.charCodeAt(0)&&t.push(""),e.replace(o,(function(e,n,i,o){t.push(i?o.replace(a,"$1"):n||e)})),t}));e.exports=r},function(e,t,n){var i=n(273);e.exports=function(e){var t=i(e,(function(e){return 500===n.size&&n.clear(),e})),n=t.cache;return t}},function(e,t,n){var i=n(88);function o(e,t){if("function"!=typeof e||null!=t&&"function"!=typeof t)throw new TypeError("Expected a function");var n=function(){var i=arguments,o=t?t.apply(this,i):i[0],a=n.cache;if(a.has(o))return a.get(o);var r=e.apply(this,i);return n.cache=a.set(o,r)||a,r};return n.cache=new(o.Cache||i),n}o.Cache=i,e.exports=o},function(e,t,n){var i=n(275);e.exports=function(e){return null==e?"":i(e)}},function(e,t,n){var i=n(42),o=n(276),a=n(16),r=n(92),s=i?i.prototype:void 0,l=s?s.toString:void 0;e.exports=function e(t){if("string"==typeof t)return t;if(a(t))return o(t,e)+"";if(r(t))return l?l.call(t):"";var n=t+"";return"0"==n&&1/t==-1/0?"-0":n}},function(e,t){e.exports=function(e,t){for(var n=-1,i=null==e?0:e.length,o=Array(i);++n<i;)o[n]=t(e[n],n,e);return o}},function(e,t,n){var i=n(278),o=n(279);e.exports=function(e,t){return null!=e&&o(e,t,i)}},function(e,t){e.exports=function(e,t){return null!=e&&t in Object(e)}},function(e,t,n){var i=n(166),o=n(85),a=n(16),r=n(159),s=n(90),l=n(63);e.exports=function(e,t,n){for(var c=-1,u=(t=i(t,e)).length,d=!1;++c<u;){var h=l(t[c]);if(!(d=null!=e&&n(e,h)))break;e=e[h]}return d||++c!=u?d:!!(u=null==e?0:e.length)&&s(u)&&r(h,u)&&(a(e)||o(e))}},function(e,t,n){var i=n(281),o=n(282),a=n(91),r=n(63);e.exports=function(e){return a(e)?i(r(e)):o(e)}},function(e,t){e.exports=function(e){return function(t){return null==t?void 0:t[e]}}},function(e,t,n){var i=n(165);e.exports=function(e){return function(t){return i(t,e)}}},function(e,t,n){var i=n(93),o=n(284),a=n(286);e.exports=function(e,t){return a(o(e,t,i),e+"")}},function(e,t,n){var i=n(285),o=Math.max;e.exports=function(e,t,n){return t=o(void 0===t?e.length-1:t,0),function(){for(var a=arguments,r=-1,s=o(a.length-t,0),l=Array(s);++r<s;)l[r]=a[t+r];r=-1;for(var c=Array(t+1);++r<t;)c[r]=a[r];return c[t]=n(l),i(e,this,c)}}},function(e,t){e.exports=function(e,t,n){switch(n.length){case 0:return e.call(t);case 1:return e.call(t,n[0]);case 2:return e.call(t,n[0],n[1]);case 3:return e.call(t,n[0],n[1],n[2])}return e.apply(t,n)}},function(e,t,n){var i=n(287),o=n(290)(i);e.exports=o},function(e,t,n){var i=n(288),o=n(289),a=n(93),r=o?function(e,t){return o(e,"toString",{configurable:!0,enumerable:!1,value:i(t),writable:!0})}:a;e.exports=r},function(e,t){e.exports=function(e){return function(){return e}}},function(e,t,n){var i=n(24),o=function(){try{var e=i(Object,"defineProperty");return e({},"",{}),e}catch(e){}}();e.exports=o},function(e,t){var n=Date.now;e.exports=function(e){var t=0,i=0;return function(){var o=n(),a=16-(o-i);if(i=o,a>0){if(++t>=800)return arguments[0]}else t=0;return e.apply(void 0,arguments)}}},function(e,t,n){var i=n(155),o=n(292),a=n(297),r=n(156),s=n(298),l=n(89);e.exports=function(e,t,n){var c=-1,u=o,d=e.length,h=!0,f=[],p=f;if(n)h=!1,u=a;else if(d>=200){var m=t?null:s(e);if(m)return l(m);h=!1,u=r,p=new i}else p=t?[]:f;e:for(;++c<d;){var g=e[c],y=t?t(g):g;if(g=n||0!==g?g:0,h&&y==y){for(var v=p.length;v--;)if(p[v]===y)continue e;t&&p.push(y),f.push(g)}else u(p,y,n)||(p!==f&&p.push(y),f.push(g))}return f}},function(e,t,n){var i=n(293);e.exports=function(e,t){return!!(null==e?0:e.length)&&i(e,t,0)>-1}},function(e,t,n){var i=n(294),o=n(295),a=n(296);e.exports=function(e,t,n){return t==t?a(e,t,n):i(e,o,n)}},function(e,t){e.exports=function(e,t,n,i){for(var o=e.length,a=n+(i?1:-1);i?a--:++a<o;)if(t(e[a],a,e))return a;return-1}},function(e,t){e.exports=function(e){return e!=e}},function(e,t){e.exports=function(e,t,n){for(var i=n-1,o=e.length;++i<o;)if(e[i]===t)return i;return-1}},function(e,t){e.exports=function(e,t,n){for(var i=-1,o=null==e?0:e.length;++i<o;)if(n(t,e[i]))return!0;return!1}},function(e,t,n){var i=n(162),o=n(299),a=n(89),r=i&&1/a(new i([,-0]))[1]==1/0?function(e){return new i(e)}:o;e.exports=r},function(e,t){e.exports=function(){}},function(e,t,n){var i=n(161),o=n(29);e.exports=function(e){return o(e)&&i(e)}},function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){"use strict";n(167)},function(e,t,n){"use strict";var i=n(23),o=n(4),a=[].slice,r={},s=function(e,t,n){if(!(t in r)){for(var i=[],o=0;o<t;o++)i[o]="a["+o+"]";r[t]=Function("C,a","return new C("+i.join(",")+")")}return r[t](e,n)};e.exports=Function.bind||function(e){var t=i(this),n=a.call(arguments,1),r=function(){var i=n.concat(a.call(arguments));return this instanceof r?s(t,i.length,i):t.apply(e,i)};return o(t.prototype)&&(r.prototype=t.prototype),r}},function(e,t,n){"use strict";n(170)},function(e,t,n){"use strict";n.r(t);n(111),n(189),n(196),n(198),n(25),n(66),n(47),n(9),n(30),n(34),n(99);var i=n(56),o=Object.freeze({});function a(e){return null==e}function r(e){return null!=e}function s(e){return!0===e}function l(e){return"string"==typeof e||"number"==typeof e||"symbol"==typeof e||"boolean"==typeof e}function c(e){return null!==e&&"object"==typeof e}var u=Object.prototype.toString;function d(e){return"[object Object]"===u.call(e)}function h(e){return"[object RegExp]"===u.call(e)}function f(e){var t=parseFloat(String(e));return t>=0&&Math.floor(t)===t&&isFinite(e)}function p(e){return r(e)&&"function"==typeof e.then&&"function"==typeof e.catch}function m(e){return null==e?"":Array.isArray(e)||d(e)&&e.toString===u?JSON.stringify(e,null,2):String(e)}function g(e){var t=parseFloat(e);return isNaN(t)?e:t}function y(e,t){for(var n=Object.create(null),i=e.split(","),o=0;o<i.length;o++)n[i[o]]=!0;return t?function(e){return n[e.toLowerCase()]}:function(e){return n[e]}}y("slot,component",!0);var v=y("key,ref,slot,slot-scope,is");function w(e,t){if(e.length){var n=e.indexOf(t);if(n>-1)return e.splice(n,1)}}var b=Object.prototype.hasOwnProperty;function k(e,t){return b.call(e,t)}function x(e){var t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}var A=/-(\w)/g,S=x((function(e){return e.replace(A,(function(e,t){return t?t.toUpperCase():""}))})),j=x((function(e){return e.charAt(0).toUpperCase()+e.slice(1)})),_=/\B([A-Z])/g,I=x((function(e){return e.replace(_,"-$1").toLowerCase()}));var P=Function.prototype.bind?function(e,t){return e.bind(t)}:function(e,t){function n(n){var i=arguments.length;return i?i>1?e.apply(t,arguments):e.call(t,n):e.call(t)}return n._length=e.length,n};function T(e,t){t=t||0;for(var n=e.length-t,i=new Array(n);n--;)i[n]=e[n+t];return i}function z(e,t){for(var n in t)e[n]=t[n];return e}function E(e){for(var t={},n=0;n<e.length;n++)e[n]&&z(t,e[n]);return t}function C(e,t,n){}var L=function(e,t,n){return!1},D=function(e){return e};function O(e,t){if(e===t)return!0;var n=c(e),i=c(t);if(!n||!i)return!n&&!i&&String(e)===String(t);try{var o=Array.isArray(e),a=Array.isArray(t);if(o&&a)return e.length===t.length&&e.every((function(e,n){return O(e,t[n])}));if(e instanceof Date&&t instanceof Date)return e.getTime()===t.getTime();if(o||a)return!1;var r=Object.keys(e),s=Object.keys(t);return r.length===s.length&&r.every((function(n){return O(e[n],t[n])}))}catch(e){return!1}}function W(e,t){for(var n=0;n<e.length;n++)if(O(e[n],t))return n;return-1}function R(e){var t=!1;return function(){t||(t=!0,e.apply(this,arguments))}}var N=["component","directive","filter"],H=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch"],M={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:L,isReservedAttr:L,isUnknownElement:L,getTagNamespace:C,parsePlatformTagName:D,mustUseProp:L,async:!0,_lifecycleHooks:H},U=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function q(e,t,n,i){Object.defineProperty(e,t,{value:n,enumerable:!!i,writable:!0,configurable:!0})}var $=new RegExp("[^"+U.source+".$_\\d]");var F,G="__proto__"in{},B="undefined"!=typeof window,V="undefined"!=typeof WXEnvironment&&!!WXEnvironment.platform,Y=V&&WXEnvironment.platform.toLowerCase(),K=B&&window.navigator.userAgent.toLowerCase(),J=K&&/msie|trident/.test(K),Q=K&&K.indexOf("msie 9.0")>0,Z=K&&K.indexOf("edge/")>0,X=(K&&K.indexOf("android"),K&&/iphone|ipad|ipod|ios/.test(K)||"ios"===Y),ee=(K&&/chrome\/\d+/.test(K),K&&/phantomjs/.test(K),K&&K.match(/firefox\/(\d+)/)),te={}.watch,ne=!1;if(B)try{var ie={};Object.defineProperty(ie,"passive",{get:function(){ne=!0}}),window.addEventListener("test-passive",null,ie)}catch(e){}var oe=function(){return void 0===F&&(F=!B&&!V&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),F},ae=B&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function re(e){return"function"==typeof e&&/native code/.test(e.toString())}var se,le="undefined"!=typeof Symbol&&re(Symbol)&&"undefined"!=typeof Reflect&&re(Reflect.ownKeys);se="undefined"!=typeof Set&&re(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var ce=C,ue=0,de=function(){this.id=ue++,this.subs=[]};de.prototype.addSub=function(e){this.subs.push(e)},de.prototype.removeSub=function(e){w(this.subs,e)},de.prototype.depend=function(){de.target&&de.target.addDep(this)},de.prototype.notify=function(){var e=this.subs.slice();for(var t=0,n=e.length;t<n;t++)e[t].update()},de.target=null;var he=[];function fe(e){he.push(e),de.target=e}function pe(){he.pop(),de.target=he[he.length-1]}var me=function(e,t,n,i,o,a,r,s){this.tag=e,this.data=t,this.children=n,this.text=i,this.elm=o,this.ns=void 0,this.context=a,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=t&&t.key,this.componentOptions=r,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},ge={child:{configurable:!0}};ge.child.get=function(){return this.componentInstance},Object.defineProperties(me.prototype,ge);var ye=function(e){void 0===e&&(e="");var t=new me;return t.text=e,t.isComment=!0,t};function ve(e){return new me(void 0,void 0,void 0,String(e))}function we(e){var t=new me(e.tag,e.data,e.children&&e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);return t.ns=e.ns,t.isStatic=e.isStatic,t.key=e.key,t.isComment=e.isComment,t.fnContext=e.fnContext,t.fnOptions=e.fnOptions,t.fnScopeId=e.fnScopeId,t.asyncMeta=e.asyncMeta,t.isCloned=!0,t}var be=Array.prototype,ke=Object.create(be);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(e){var t=be[e];q(ke,e,(function(){for(var n=[],i=arguments.length;i--;)n[i]=arguments[i];var o,a=t.apply(this,n),r=this.__ob__;switch(e){case"push":case"unshift":o=n;break;case"splice":o=n.slice(2)}return o&&r.observeArray(o),r.dep.notify(),a}))}));var xe=Object.getOwnPropertyNames(ke),Ae=!0;function Se(e){Ae=e}var je=function(e){this.value=e,this.dep=new de,this.vmCount=0,q(e,"__ob__",this),Array.isArray(e)?(G?function(e,t){e.__proto__=t}(e,ke):function(e,t,n){for(var i=0,o=n.length;i<o;i++){var a=n[i];q(e,a,t[a])}}(e,ke,xe),this.observeArray(e)):this.walk(e)};function _e(e,t){var n;if(c(e)&&!(e instanceof me))return k(e,"__ob__")&&e.__ob__ instanceof je?n=e.__ob__:Ae&&!oe()&&(Array.isArray(e)||d(e))&&Object.isExtensible(e)&&!e._isVue&&(n=new je(e)),t&&n&&n.vmCount++,n}function Ie(e,t,n,i,o){var a=new de,r=Object.getOwnPropertyDescriptor(e,t);if(!r||!1!==r.configurable){var s=r&&r.get,l=r&&r.set;s&&!l||2!==arguments.length||(n=e[t]);var c=!o&&_e(n);Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){var t=s?s.call(e):n;return de.target&&(a.depend(),c&&(c.dep.depend(),Array.isArray(t)&&ze(t))),t},set:function(t){var i=s?s.call(e):n;t===i||t!=t&&i!=i||s&&!l||(l?l.call(e,t):n=t,c=!o&&_e(t),a.notify())}})}}function Pe(e,t,n){if(Array.isArray(e)&&f(t))return e.length=Math.max(e.length,t),e.splice(t,1,n),n;if(t in e&&!(t in Object.prototype))return e[t]=n,n;var i=e.__ob__;return e._isVue||i&&i.vmCount?n:i?(Ie(i.value,t,n),i.dep.notify(),n):(e[t]=n,n)}function Te(e,t){if(Array.isArray(e)&&f(t))e.splice(t,1);else{var n=e.__ob__;e._isVue||n&&n.vmCount||k(e,t)&&(delete e[t],n&&n.dep.notify())}}function ze(e){for(var t=void 0,n=0,i=e.length;n<i;n++)(t=e[n])&&t.__ob__&&t.__ob__.dep.depend(),Array.isArray(t)&&ze(t)}je.prototype.walk=function(e){for(var t=Object.keys(e),n=0;n<t.length;n++)Ie(e,t[n])},je.prototype.observeArray=function(e){for(var t=0,n=e.length;t<n;t++)_e(e[t])};var Ee=M.optionMergeStrategies;function Ce(e,t){if(!t)return e;for(var n,i,o,a=le?Reflect.ownKeys(t):Object.keys(t),r=0;r<a.length;r++)"__ob__"!==(n=a[r])&&(i=e[n],o=t[n],k(e,n)?i!==o&&d(i)&&d(o)&&Ce(i,o):Pe(e,n,o));return e}function Le(e,t,n){return n?function(){var i="function"==typeof t?t.call(n,n):t,o="function"==typeof e?e.call(n,n):e;return i?Ce(i,o):o}:t?e?function(){return Ce("function"==typeof t?t.call(this,this):t,"function"==typeof e?e.call(this,this):e)}:t:e}function De(e,t){var n=t?e?e.concat(t):Array.isArray(t)?t:[t]:e;return n?function(e){for(var t=[],n=0;n<e.length;n++)-1===t.indexOf(e[n])&&t.push(e[n]);return t}(n):n}function Oe(e,t,n,i){var o=Object.create(e||null);return t?z(o,t):o}Ee.data=function(e,t,n){return n?Le(e,t,n):t&&"function"!=typeof t?e:Le(e,t)},H.forEach((function(e){Ee[e]=De})),N.forEach((function(e){Ee[e+"s"]=Oe})),Ee.watch=function(e,t,n,i){if(e===te&&(e=void 0),t===te&&(t=void 0),!t)return Object.create(e||null);if(!e)return t;var o={};for(var a in z(o,e),t){var r=o[a],s=t[a];r&&!Array.isArray(r)&&(r=[r]),o[a]=r?r.concat(s):Array.isArray(s)?s:[s]}return o},Ee.props=Ee.methods=Ee.inject=Ee.computed=function(e,t,n,i){if(!e)return t;var o=Object.create(null);return z(o,e),t&&z(o,t),o},Ee.provide=Le;var We=function(e,t){return void 0===t?e:t};function Re(e,t,n){if("function"==typeof t&&(t=t.options),function(e,t){var n=e.props;if(n){var i,o,a={};if(Array.isArray(n))for(i=n.length;i--;)"string"==typeof(o=n[i])&&(a[S(o)]={type:null});else if(d(n))for(var r in n)o=n[r],a[S(r)]=d(o)?o:{type:o};else 0;e.props=a}}(t),function(e,t){var n=e.inject;if(n){var i=e.inject={};if(Array.isArray(n))for(var o=0;o<n.length;o++)i[n[o]]={from:n[o]};else if(d(n))for(var a in n){var r=n[a];i[a]=d(r)?z({from:a},r):{from:r}}else 0}}(t),function(e){var t=e.directives;if(t)for(var n in t){var i=t[n];"function"==typeof i&&(t[n]={bind:i,update:i})}}(t),!t._base&&(t.extends&&(e=Re(e,t.extends,n)),t.mixins))for(var i=0,o=t.mixins.length;i<o;i++)e=Re(e,t.mixins[i],n);var a,r={};for(a in e)s(a);for(a in t)k(e,a)||s(a);function s(i){var o=Ee[i]||We;r[i]=o(e[i],t[i],n,i)}return r}function Ne(e,t,n,i){if("string"==typeof n){var o=e[t];if(k(o,n))return o[n];var a=S(n);if(k(o,a))return o[a];var r=j(a);return k(o,r)?o[r]:o[n]||o[a]||o[r]}}function He(e,t,n,i){var o=t[e],a=!k(n,e),r=n[e],s=qe(Boolean,o.type);if(s>-1)if(a&&!k(o,"default"))r=!1;else if(""===r||r===I(e)){var l=qe(String,o.type);(l<0||s<l)&&(r=!0)}if(void 0===r){r=function(e,t,n){if(!k(t,"default"))return;var i=t.default;0;if(e&&e.$options.propsData&&void 0===e.$options.propsData[n]&&void 0!==e._props[n])return e._props[n];return"function"==typeof i&&"Function"!==Me(t.type)?i.call(e):i}(i,o,e);var c=Ae;Se(!0),_e(r),Se(c)}return r}function Me(e){var t=e&&e.toString().match(/^\s*function (\w+)/);return t?t[1]:""}function Ue(e,t){return Me(e)===Me(t)}function qe(e,t){if(!Array.isArray(t))return Ue(t,e)?0:-1;for(var n=0,i=t.length;n<i;n++)if(Ue(t[n],e))return n;return-1}function $e(e,t,n){fe();try{if(t)for(var i=t;i=i.$parent;){var o=i.$options.errorCaptured;if(o)for(var a=0;a<o.length;a++)try{if(!1===o[a].call(i,e,t,n))return}catch(e){Ge(e,i,"errorCaptured hook")}}Ge(e,t,n)}finally{pe()}}function Fe(e,t,n,i,o){var a;try{(a=n?e.apply(t,n):e.call(t))&&!a._isVue&&p(a)&&!a._handled&&(a.catch((function(e){return $e(e,i,o+" (Promise/async)")})),a._handled=!0)}catch(e){$e(e,i,o)}return a}function Ge(e,t,n){if(M.errorHandler)try{return M.errorHandler.call(null,e,t,n)}catch(t){t!==e&&Be(t,null,"config.errorHandler")}Be(e,t,n)}function Be(e,t,n){if(!B&&!V||"undefined"==typeof console)throw e;console.error(e)}var Ve,Ye=!1,Ke=[],Je=!1;function Qe(){Je=!1;var e=Ke.slice(0);Ke.length=0;for(var t=0;t<e.length;t++)e[t]()}if("undefined"!=typeof Promise&&re(Promise)){var Ze=Promise.resolve();Ve=function(){Ze.then(Qe),X&&setTimeout(C)},Ye=!0}else if(J||"undefined"==typeof MutationObserver||!re(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Ve="undefined"!=typeof setImmediate&&re(setImmediate)?function(){setImmediate(Qe)}:function(){setTimeout(Qe,0)};else{var Xe=1,et=new MutationObserver(Qe),tt=document.createTextNode(String(Xe));et.observe(tt,{characterData:!0}),Ve=function(){Xe=(Xe+1)%2,tt.data=String(Xe)},Ye=!0}function nt(e,t){var n;if(Ke.push((function(){if(e)try{e.call(t)}catch(e){$e(e,t,"nextTick")}else n&&n(t)})),Je||(Je=!0,Ve()),!e&&"undefined"!=typeof Promise)return new Promise((function(e){n=e}))}var it=new se;function ot(e){!function e(t,n){var i,o,a=Array.isArray(t);if(!a&&!c(t)||Object.isFrozen(t)||t instanceof me)return;if(t.__ob__){var r=t.__ob__.dep.id;if(n.has(r))return;n.add(r)}if(a)for(i=t.length;i--;)e(t[i],n);else for(o=Object.keys(t),i=o.length;i--;)e(t[o[i]],n)}(e,it),it.clear()}var at=x((function(e){var t="&"===e.charAt(0),n="~"===(e=t?e.slice(1):e).charAt(0),i="!"===(e=n?e.slice(1):e).charAt(0);return{name:e=i?e.slice(1):e,once:n,capture:i,passive:t}}));function rt(e,t){function n(){var e=arguments,i=n.fns;if(!Array.isArray(i))return Fe(i,null,arguments,t,"v-on handler");for(var o=i.slice(),a=0;a<o.length;a++)Fe(o[a],null,e,t,"v-on handler")}return n.fns=e,n}function st(e,t,n,i,o,r){var l,c,u,d;for(l in e)c=e[l],u=t[l],d=at(l),a(c)||(a(u)?(a(c.fns)&&(c=e[l]=rt(c,r)),s(d.once)&&(c=e[l]=o(d.name,c,d.capture)),n(d.name,c,d.capture,d.passive,d.params)):c!==u&&(u.fns=c,e[l]=u));for(l in t)a(e[l])&&i((d=at(l)).name,t[l],d.capture)}function lt(e,t,n){var i;e instanceof me&&(e=e.data.hook||(e.data.hook={}));var o=e[t];function l(){n.apply(this,arguments),w(i.fns,l)}a(o)?i=rt([l]):r(o.fns)&&s(o.merged)?(i=o).fns.push(l):i=rt([o,l]),i.merged=!0,e[t]=i}function ct(e,t,n,i,o){if(r(t)){if(k(t,n))return e[n]=t[n],o||delete t[n],!0;if(k(t,i))return e[n]=t[i],o||delete t[i],!0}return!1}function ut(e){return l(e)?[ve(e)]:Array.isArray(e)?function e(t,n){var i,o,c,u,d=[];for(i=0;i<t.length;i++)a(o=t[i])||"boolean"==typeof o||(c=d.length-1,u=d[c],Array.isArray(o)?o.length>0&&(dt((o=e(o,(n||"")+"_"+i))[0])&&dt(u)&&(d[c]=ve(u.text+o[0].text),o.shift()),d.push.apply(d,o)):l(o)?dt(u)?d[c]=ve(u.text+o):""!==o&&d.push(ve(o)):dt(o)&&dt(u)?d[c]=ve(u.text+o.text):(s(t._isVList)&&r(o.tag)&&a(o.key)&&r(n)&&(o.key="__vlist"+n+"_"+i+"__"),d.push(o)));return d}(e):void 0}function dt(e){return r(e)&&r(e.text)&&!1===e.isComment}function ht(e,t){if(e){for(var n=Object.create(null),i=le?Reflect.ownKeys(e):Object.keys(e),o=0;o<i.length;o++){var a=i[o];if("__ob__"!==a){for(var r=e[a].from,s=t;s;){if(s._provided&&k(s._provided,r)){n[a]=s._provided[r];break}s=s.$parent}if(!s)if("default"in e[a]){var l=e[a].default;n[a]="function"==typeof l?l.call(t):l}else 0}}return n}}function ft(e,t){if(!e||!e.length)return{};for(var n={},i=0,o=e.length;i<o;i++){var a=e[i],r=a.data;if(r&&r.attrs&&r.attrs.slot&&delete r.attrs.slot,a.context!==t&&a.fnContext!==t||!r||null==r.slot)(n.default||(n.default=[])).push(a);else{var s=r.slot,l=n[s]||(n[s]=[]);"template"===a.tag?l.push.apply(l,a.children||[]):l.push(a)}}for(var c in n)n[c].every(pt)&&delete n[c];return n}function pt(e){return e.isComment&&!e.asyncFactory||" "===e.text}function mt(e,t,n){var i,a=Object.keys(t).length>0,r=e?!!e.$stable:!a,s=e&&e.$key;if(e){if(e._normalized)return e._normalized;if(r&&n&&n!==o&&s===n.$key&&!a&&!n.$hasNormal)return n;for(var l in i={},e)e[l]&&"$"!==l[0]&&(i[l]=gt(t,l,e[l]))}else i={};for(var c in t)c in i||(i[c]=yt(t,c));return e&&Object.isExtensible(e)&&(e._normalized=i),q(i,"$stable",r),q(i,"$key",s),q(i,"$hasNormal",a),i}function gt(e,t,n){var i=function(){var e=arguments.length?n.apply(null,arguments):n({});return(e=e&&"object"==typeof e&&!Array.isArray(e)?[e]:ut(e))&&(0===e.length||1===e.length&&e[0].isComment)?void 0:e};return n.proxy&&Object.defineProperty(e,t,{get:i,enumerable:!0,configurable:!0}),i}function yt(e,t){return function(){return e[t]}}function vt(e,t){var n,i,o,a,s;if(Array.isArray(e)||"string"==typeof e)for(n=new Array(e.length),i=0,o=e.length;i<o;i++)n[i]=t(e[i],i);else if("number"==typeof e)for(n=new Array(e),i=0;i<e;i++)n[i]=t(i+1,i);else if(c(e))if(le&&e[Symbol.iterator]){n=[];for(var l=e[Symbol.iterator](),u=l.next();!u.done;)n.push(t(u.value,n.length)),u=l.next()}else for(a=Object.keys(e),n=new Array(a.length),i=0,o=a.length;i<o;i++)s=a[i],n[i]=t(e[s],s,i);return r(n)||(n=[]),n._isVList=!0,n}function wt(e,t,n,i){var o,a=this.$scopedSlots[e];a?(n=n||{},i&&(n=z(z({},i),n)),o=a(n)||t):o=this.$slots[e]||t;var r=n&&n.slot;return r?this.$createElement("template",{slot:r},o):o}function bt(e){return Ne(this.$options,"filters",e)||D}function kt(e,t){return Array.isArray(e)?-1===e.indexOf(t):e!==t}function xt(e,t,n,i,o){var a=M.keyCodes[t]||n;return o&&i&&!M.keyCodes[t]?kt(o,i):a?kt(a,e):i?I(i)!==t:void 0}function At(e,t,n,i,o){if(n)if(c(n)){var a;Array.isArray(n)&&(n=E(n));var r=function(r){if("class"===r||"style"===r||v(r))a=e;else{var s=e.attrs&&e.attrs.type;a=i||M.mustUseProp(t,s,r)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}var l=S(r),c=I(r);l in a||c in a||(a[r]=n[r],o&&((e.on||(e.on={}))["update:"+r]=function(e){n[r]=e}))};for(var s in n)r(s)}else;return e}function St(e,t){var n=this._staticTrees||(this._staticTrees=[]),i=n[e];return i&&!t||_t(i=n[e]=this.$options.staticRenderFns[e].call(this._renderProxy,null,this),"__static__"+e,!1),i}function jt(e,t,n){return _t(e,"__once__"+t+(n?"_"+n:""),!0),e}function _t(e,t,n){if(Array.isArray(e))for(var i=0;i<e.length;i++)e[i]&&"string"!=typeof e[i]&&It(e[i],t+"_"+i,n);else It(e,t,n)}function It(e,t,n){e.isStatic=!0,e.key=t,e.isOnce=n}function Pt(e,t){if(t)if(d(t)){var n=e.on=e.on?z({},e.on):{};for(var i in t){var o=n[i],a=t[i];n[i]=o?[].concat(o,a):a}}else;return e}function Tt(e,t,n,i){t=t||{$stable:!n};for(var o=0;o<e.length;o++){var a=e[o];Array.isArray(a)?Tt(a,t,n):a&&(a.proxy&&(a.fn.proxy=!0),t[a.key]=a.fn)}return i&&(t.$key=i),t}function zt(e,t){for(var n=0;n<t.length;n+=2){var i=t[n];"string"==typeof i&&i&&(e[t[n]]=t[n+1])}return e}function Et(e,t){return"string"==typeof e?t+e:e}function Ct(e){e._o=jt,e._n=g,e._s=m,e._l=vt,e._t=wt,e._q=O,e._i=W,e._m=St,e._f=bt,e._k=xt,e._b=At,e._v=ve,e._e=ye,e._u=Tt,e._g=Pt,e._d=zt,e._p=Et}function Lt(e,t,n,i,a){var r,l=this,c=a.options;k(i,"_uid")?(r=Object.create(i))._original=i:(r=i,i=i._original);var u=s(c._compiled),d=!u;this.data=e,this.props=t,this.children=n,this.parent=i,this.listeners=e.on||o,this.injections=ht(c.inject,i),this.slots=function(){return l.$slots||mt(e.scopedSlots,l.$slots=ft(n,i)),l.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return mt(e.scopedSlots,this.slots())}}),u&&(this.$options=c,this.$slots=this.slots(),this.$scopedSlots=mt(e.scopedSlots,this.$slots)),c._scopeId?this._c=function(e,t,n,o){var a=Mt(r,e,t,n,o,d);return a&&!Array.isArray(a)&&(a.fnScopeId=c._scopeId,a.fnContext=i),a}:this._c=function(e,t,n,i){return Mt(r,e,t,n,i,d)}}function Dt(e,t,n,i,o){var a=we(e);return a.fnContext=n,a.fnOptions=i,t.slot&&((a.data||(a.data={})).slot=t.slot),a}function Ot(e,t){for(var n in t)e[S(n)]=t[n]}Ct(Lt.prototype);var Wt={init:function(e,t){if(e.componentInstance&&!e.componentInstance._isDestroyed&&e.data.keepAlive){var n=e;Wt.prepatch(n,n)}else{(e.componentInstance=function(e,t){var n={_isComponent:!0,_parentVnode:e,parent:t},i=e.data.inlineTemplate;r(i)&&(n.render=i.render,n.staticRenderFns=i.staticRenderFns);return new e.componentOptions.Ctor(n)}(e,Jt)).$mount(t?e.elm:void 0,t)}},prepatch:function(e,t){var n=t.componentOptions;!function(e,t,n,i,a){0;var r=i.data.scopedSlots,s=e.$scopedSlots,l=!!(r&&!r.$stable||s!==o&&!s.$stable||r&&e.$scopedSlots.$key!==r.$key),c=!!(a||e.$options._renderChildren||l);e.$options._parentVnode=i,e.$vnode=i,e._vnode&&(e._vnode.parent=i);if(e.$options._renderChildren=a,e.$attrs=i.data.attrs||o,e.$listeners=n||o,t&&e.$options.props){Se(!1);for(var u=e._props,d=e.$options._propKeys||[],h=0;h<d.length;h++){var f=d[h],p=e.$options.props;u[f]=He(f,p,t,e)}Se(!0),e.$options.propsData=t}n=n||o;var m=e.$options._parentListeners;e.$options._parentListeners=n,Kt(e,n,m),c&&(e.$slots=ft(a,i.context),e.$forceUpdate());0}(t.componentInstance=e.componentInstance,n.propsData,n.listeners,t,n.children)},insert:function(e){var t,n=e.context,i=e.componentInstance;i._isMounted||(i._isMounted=!0,en(i,"mounted")),e.data.keepAlive&&(n._isMounted?((t=i)._inactive=!1,nn.push(t)):Xt(i,!0))},destroy:function(e){var t=e.componentInstance;t._isDestroyed||(e.data.keepAlive?function e(t,n){if(n&&(t._directInactive=!0,Zt(t)))return;if(!t._inactive){t._inactive=!0;for(var i=0;i<t.$children.length;i++)e(t.$children[i]);en(t,"deactivated")}}(t,!0):t.$destroy())}},Rt=Object.keys(Wt);function Nt(e,t,n,i,l){if(!a(e)){var u=n.$options._base;if(c(e)&&(e=u.extend(e)),"function"==typeof e){var d;if(a(e.cid)&&void 0===(e=function(e,t){if(s(e.error)&&r(e.errorComp))return e.errorComp;if(r(e.resolved))return e.resolved;var n=qt;n&&r(e.owners)&&-1===e.owners.indexOf(n)&&e.owners.push(n);if(s(e.loading)&&r(e.loadingComp))return e.loadingComp;if(n&&!r(e.owners)){var i=e.owners=[n],o=!0,l=null,u=null;n.$on("hook:destroyed",(function(){return w(i,n)}));var d=function(e){for(var t=0,n=i.length;t<n;t++)i[t].$forceUpdate();e&&(i.length=0,null!==l&&(clearTimeout(l),l=null),null!==u&&(clearTimeout(u),u=null))},h=R((function(n){e.resolved=$t(n,t),o?i.length=0:d(!0)})),f=R((function(t){r(e.errorComp)&&(e.error=!0,d(!0))})),m=e(h,f);return c(m)&&(p(m)?a(e.resolved)&&m.then(h,f):p(m.component)&&(m.component.then(h,f),r(m.error)&&(e.errorComp=$t(m.error,t)),r(m.loading)&&(e.loadingComp=$t(m.loading,t),0===m.delay?e.loading=!0:l=setTimeout((function(){l=null,a(e.resolved)&&a(e.error)&&(e.loading=!0,d(!1))}),m.delay||200)),r(m.timeout)&&(u=setTimeout((function(){u=null,a(e.resolved)&&f(null)}),m.timeout)))),o=!1,e.loading?e.loadingComp:e.resolved}}(d=e,u)))return function(e,t,n,i,o){var a=ye();return a.asyncFactory=e,a.asyncMeta={data:t,context:n,children:i,tag:o},a}(d,t,n,i,l);t=t||{},An(e),r(t.model)&&function(e,t){var n=e.model&&e.model.prop||"value",i=e.model&&e.model.event||"input";(t.attrs||(t.attrs={}))[n]=t.model.value;var o=t.on||(t.on={}),a=o[i],s=t.model.callback;r(a)?(Array.isArray(a)?-1===a.indexOf(s):a!==s)&&(o[i]=[s].concat(a)):o[i]=s}(e.options,t);var h=function(e,t,n){var i=t.options.props;if(!a(i)){var o={},s=e.attrs,l=e.props;if(r(s)||r(l))for(var c in i){var u=I(c);ct(o,l,c,u,!0)||ct(o,s,c,u,!1)}return o}}(t,e);if(s(e.options.functional))return function(e,t,n,i,a){var s=e.options,l={},c=s.props;if(r(c))for(var u in c)l[u]=He(u,c,t||o);else r(n.attrs)&&Ot(l,n.attrs),r(n.props)&&Ot(l,n.props);var d=new Lt(n,l,a,i,e),h=s.render.call(null,d._c,d);if(h instanceof me)return Dt(h,n,d.parent,s,d);if(Array.isArray(h)){for(var f=ut(h)||[],p=new Array(f.length),m=0;m<f.length;m++)p[m]=Dt(f[m],n,d.parent,s,d);return p}}(e,h,t,n,i);var f=t.on;if(t.on=t.nativeOn,s(e.options.abstract)){var m=t.slot;t={},m&&(t.slot=m)}!function(e){for(var t=e.hook||(e.hook={}),n=0;n<Rt.length;n++){var i=Rt[n],o=t[i],a=Wt[i];o===a||o&&o._merged||(t[i]=o?Ht(a,o):a)}}(t);var g=e.options.name||l;return new me("vue-component-"+e.cid+(g?"-"+g:""),t,void 0,void 0,void 0,n,{Ctor:e,propsData:h,listeners:f,tag:l,children:i},d)}}}function Ht(e,t){var n=function(n,i){e(n,i),t(n,i)};return n._merged=!0,n}function Mt(e,t,n,i,o,u){return(Array.isArray(n)||l(n))&&(o=i,i=n,n=void 0),s(u)&&(o=2),function(e,t,n,i,o){if(r(n)&&r(n.__ob__))return ye();r(n)&&r(n.is)&&(t=n.is);if(!t)return ye();0;Array.isArray(i)&&"function"==typeof i[0]&&((n=n||{}).scopedSlots={default:i[0]},i.length=0);2===o?i=ut(i):1===o&&(i=function(e){for(var t=0;t<e.length;t++)if(Array.isArray(e[t]))return Array.prototype.concat.apply([],e);return e}(i));var l,u;if("string"==typeof t){var d;u=e.$vnode&&e.$vnode.ns||M.getTagNamespace(t),l=M.isReservedTag(t)?new me(M.parsePlatformTagName(t),n,i,void 0,void 0,e):n&&n.pre||!r(d=Ne(e.$options,"components",t))?new me(t,n,i,void 0,void 0,e):Nt(d,n,e,i,t)}else l=Nt(t,n,e,i);return Array.isArray(l)?l:r(l)?(r(u)&&function e(t,n,i){t.ns=n,"foreignObject"===t.tag&&(n=void 0,i=!0);if(r(t.children))for(var o=0,l=t.children.length;o<l;o++){var c=t.children[o];r(c.tag)&&(a(c.ns)||s(i)&&"svg"!==c.tag)&&e(c,n,i)}}(l,u),r(n)&&function(e){c(e.style)&&ot(e.style);c(e.class)&&ot(e.class)}(n),l):ye()}(e,t,n,i,o)}var Ut,qt=null;function $t(e,t){return(e.__esModule||le&&"Module"===e[Symbol.toStringTag])&&(e=e.default),c(e)?t.extend(e):e}function Ft(e){return e.isComment&&e.asyncFactory}function Gt(e){if(Array.isArray(e))for(var t=0;t<e.length;t++){var n=e[t];if(r(n)&&(r(n.componentOptions)||Ft(n)))return n}}function Bt(e,t){Ut.$on(e,t)}function Vt(e,t){Ut.$off(e,t)}function Yt(e,t){var n=Ut;return function i(){var o=t.apply(null,arguments);null!==o&&n.$off(e,i)}}function Kt(e,t,n){Ut=e,st(t,n||{},Bt,Vt,Yt,e),Ut=void 0}var Jt=null;function Qt(e){var t=Jt;return Jt=e,function(){Jt=t}}function Zt(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function Xt(e,t){if(t){if(e._directInactive=!1,Zt(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var n=0;n<e.$children.length;n++)Xt(e.$children[n]);en(e,"activated")}}function en(e,t){fe();var n=e.$options[t],i=t+" hook";if(n)for(var o=0,a=n.length;o<a;o++)Fe(n[o],e,null,e,i);e._hasHookEvent&&e.$emit("hook:"+t),pe()}var tn=[],nn=[],on={},an=!1,rn=!1,sn=0;var ln=0,cn=Date.now;if(B&&!J){var un=window.performance;un&&"function"==typeof un.now&&cn()>document.createEvent("Event").timeStamp&&(cn=function(){return un.now()})}function dn(){var e,t;for(ln=cn(),rn=!0,tn.sort((function(e,t){return e.id-t.id})),sn=0;sn<tn.length;sn++)(e=tn[sn]).before&&e.before(),t=e.id,on[t]=null,e.run();var n=nn.slice(),i=tn.slice();sn=tn.length=nn.length=0,on={},an=rn=!1,function(e){for(var t=0;t<e.length;t++)e[t]._inactive=!0,Xt(e[t],!0)}(n),function(e){var t=e.length;for(;t--;){var n=e[t],i=n.vm;i._watcher===n&&i._isMounted&&!i._isDestroyed&&en(i,"updated")}}(i),ae&&M.devtools&&ae.emit("flush")}var hn=0,fn=function(e,t,n,i,o){this.vm=e,o&&(e._watcher=this),e._watchers.push(this),i?(this.deep=!!i.deep,this.user=!!i.user,this.lazy=!!i.lazy,this.sync=!!i.sync,this.before=i.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=n,this.id=++hn,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new se,this.newDepIds=new se,this.expression="","function"==typeof t?this.getter=t:(this.getter=function(e){if(!$.test(e)){var t=e.split(".");return function(e){for(var n=0;n<t.length;n++){if(!e)return;e=e[t[n]]}return e}}}(t),this.getter||(this.getter=C)),this.value=this.lazy?void 0:this.get()};fn.prototype.get=function(){var e;fe(this);var t=this.vm;try{e=this.getter.call(t,t)}catch(e){if(!this.user)throw e;$e(e,t,'getter for watcher "'+this.expression+'"')}finally{this.deep&&ot(e),pe(),this.cleanupDeps()}return e},fn.prototype.addDep=function(e){var t=e.id;this.newDepIds.has(t)||(this.newDepIds.add(t),this.newDeps.push(e),this.depIds.has(t)||e.addSub(this))},fn.prototype.cleanupDeps=function(){for(var e=this.deps.length;e--;){var t=this.deps[e];this.newDepIds.has(t.id)||t.removeSub(this)}var n=this.depIds;this.depIds=this.newDepIds,this.newDepIds=n,this.newDepIds.clear(),n=this.deps,this.deps=this.newDeps,this.newDeps=n,this.newDeps.length=0},fn.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(e){var t=e.id;if(null==on[t]){if(on[t]=!0,rn){for(var n=tn.length-1;n>sn&&tn[n].id>e.id;)n--;tn.splice(n+1,0,e)}else tn.push(e);an||(an=!0,nt(dn))}}(this)},fn.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||c(e)||this.deep){var t=this.value;if(this.value=e,this.user)try{this.cb.call(this.vm,e,t)}catch(e){$e(e,this.vm,'callback for watcher "'+this.expression+'"')}else this.cb.call(this.vm,e,t)}}},fn.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},fn.prototype.depend=function(){for(var e=this.deps.length;e--;)this.deps[e].depend()},fn.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||w(this.vm._watchers,this);for(var e=this.deps.length;e--;)this.deps[e].removeSub(this);this.active=!1}};var pn={enumerable:!0,configurable:!0,get:C,set:C};function mn(e,t,n){pn.get=function(){return this[t][n]},pn.set=function(e){this[t][n]=e},Object.defineProperty(e,n,pn)}function gn(e){e._watchers=[];var t=e.$options;t.props&&function(e,t){var n=e.$options.propsData||{},i=e._props={},o=e.$options._propKeys=[];e.$parent&&Se(!1);var a=function(a){o.push(a);var r=He(a,t,n,e);Ie(i,a,r),a in e||mn(e,"_props",a)};for(var r in t)a(r);Se(!0)}(e,t.props),t.methods&&function(e,t){e.$options.props;for(var n in t)e[n]="function"!=typeof t[n]?C:P(t[n],e)}(e,t.methods),t.data?function(e){var t=e.$options.data;d(t=e._data="function"==typeof t?function(e,t){fe();try{return e.call(t,t)}catch(e){return $e(e,t,"data()"),{}}finally{pe()}}(t,e):t||{})||(t={});var n=Object.keys(t),i=e.$options.props,o=(e.$options.methods,n.length);for(;o--;){var a=n[o];0,i&&k(i,a)||(r=void 0,36!==(r=(a+"").charCodeAt(0))&&95!==r&&mn(e,"_data",a))}var r;_e(t,!0)}(e):_e(e._data={},!0),t.computed&&function(e,t){var n=e._computedWatchers=Object.create(null),i=oe();for(var o in t){var a=t[o],r="function"==typeof a?a:a.get;0,i||(n[o]=new fn(e,r||C,C,yn)),o in e||vn(e,o,a)}}(e,t.computed),t.watch&&t.watch!==te&&function(e,t){for(var n in t){var i=t[n];if(Array.isArray(i))for(var o=0;o<i.length;o++)kn(e,n,i[o]);else kn(e,n,i)}}(e,t.watch)}var yn={lazy:!0};function vn(e,t,n){var i=!oe();"function"==typeof n?(pn.get=i?wn(t):bn(n),pn.set=C):(pn.get=n.get?i&&!1!==n.cache?wn(t):bn(n.get):C,pn.set=n.set||C),Object.defineProperty(e,t,pn)}function wn(e){return function(){var t=this._computedWatchers&&this._computedWatchers[e];if(t)return t.dirty&&t.evaluate(),de.target&&t.depend(),t.value}}function bn(e){return function(){return e.call(this,this)}}function kn(e,t,n,i){return d(n)&&(i=n,n=n.handler),"string"==typeof n&&(n=e[n]),e.$watch(t,n,i)}var xn=0;function An(e){var t=e.options;if(e.super){var n=An(e.super);if(n!==e.superOptions){e.superOptions=n;var i=function(e){var t,n=e.options,i=e.sealedOptions;for(var o in n)n[o]!==i[o]&&(t||(t={}),t[o]=n[o]);return t}(e);i&&z(e.extendOptions,i),(t=e.options=Re(n,e.extendOptions)).name&&(t.components[t.name]=e)}}return t}function Sn(e){this._init(e)}function jn(e){e.cid=0;var t=1;e.extend=function(e){e=e||{};var n=this,i=n.cid,o=e._Ctor||(e._Ctor={});if(o[i])return o[i];var a=e.name||n.options.name;var r=function(e){this._init(e)};return(r.prototype=Object.create(n.prototype)).constructor=r,r.cid=t++,r.options=Re(n.options,e),r.super=n,r.options.props&&function(e){var t=e.options.props;for(var n in t)mn(e.prototype,"_props",n)}(r),r.options.computed&&function(e){var t=e.options.computed;for(var n in t)vn(e.prototype,n,t[n])}(r),r.extend=n.extend,r.mixin=n.mixin,r.use=n.use,N.forEach((function(e){r[e]=n[e]})),a&&(r.options.components[a]=r),r.superOptions=n.options,r.extendOptions=e,r.sealedOptions=z({},r.options),o[i]=r,r}}function _n(e){return e&&(e.Ctor.options.name||e.tag)}function In(e,t){return Array.isArray(e)?e.indexOf(t)>-1:"string"==typeof e?e.split(",").indexOf(t)>-1:!!h(e)&&e.test(t)}function Pn(e,t){var n=e.cache,i=e.keys,o=e._vnode;for(var a in n){var r=n[a];if(r){var s=_n(r.componentOptions);s&&!t(s)&&Tn(n,a,i,o)}}}function Tn(e,t,n,i){var o=e[t];!o||i&&o.tag===i.tag||o.componentInstance.$destroy(),e[t]=null,w(n,t)}Sn.prototype._init=function(e){var t=this;t._uid=xn++,t._isVue=!0,e&&e._isComponent?function(e,t){var n=e.$options=Object.create(e.constructor.options),i=t._parentVnode;n.parent=t.parent,n._parentVnode=i;var o=i.componentOptions;n.propsData=o.propsData,n._parentListeners=o.listeners,n._renderChildren=o.children,n._componentTag=o.tag,t.render&&(n.render=t.render,n.staticRenderFns=t.staticRenderFns)}(t,e):t.$options=Re(An(t.constructor),e||{},t),t._renderProxy=t,t._self=t,function(e){var t=e.$options,n=t.parent;if(n&&!t.abstract){for(;n.$options.abstract&&n.$parent;)n=n.$parent;n.$children.push(e)}e.$parent=n,e.$root=n?n.$root:e,e.$children=[],e.$refs={},e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}(t),function(e){e._events=Object.create(null),e._hasHookEvent=!1;var t=e.$options._parentListeners;t&&Kt(e,t)}(t),function(e){e._vnode=null,e._staticTrees=null;var t=e.$options,n=e.$vnode=t._parentVnode,i=n&&n.context;e.$slots=ft(t._renderChildren,i),e.$scopedSlots=o,e._c=function(t,n,i,o){return Mt(e,t,n,i,o,!1)},e.$createElement=function(t,n,i,o){return Mt(e,t,n,i,o,!0)};var a=n&&n.data;Ie(e,"$attrs",a&&a.attrs||o,null,!0),Ie(e,"$listeners",t._parentListeners||o,null,!0)}(t),en(t,"beforeCreate"),function(e){var t=ht(e.$options.inject,e);t&&(Se(!1),Object.keys(t).forEach((function(n){Ie(e,n,t[n])})),Se(!0))}(t),gn(t),function(e){var t=e.$options.provide;t&&(e._provided="function"==typeof t?t.call(e):t)}(t),en(t,"created"),t.$options.el&&t.$mount(t.$options.el)},function(e){var t={get:function(){return this._data}},n={get:function(){return this._props}};Object.defineProperty(e.prototype,"$data",t),Object.defineProperty(e.prototype,"$props",n),e.prototype.$set=Pe,e.prototype.$delete=Te,e.prototype.$watch=function(e,t,n){if(d(t))return kn(this,e,t,n);(n=n||{}).user=!0;var i=new fn(this,e,t,n);if(n.immediate)try{t.call(this,i.value)}catch(e){$e(e,this,'callback for immediate watcher "'+i.expression+'"')}return function(){i.teardown()}}}(Sn),function(e){var t=/^hook:/;e.prototype.$on=function(e,n){var i=this;if(Array.isArray(e))for(var o=0,a=e.length;o<a;o++)i.$on(e[o],n);else(i._events[e]||(i._events[e]=[])).push(n),t.test(e)&&(i._hasHookEvent=!0);return i},e.prototype.$once=function(e,t){var n=this;function i(){n.$off(e,i),t.apply(n,arguments)}return i.fn=t,n.$on(e,i),n},e.prototype.$off=function(e,t){var n=this;if(!arguments.length)return n._events=Object.create(null),n;if(Array.isArray(e)){for(var i=0,o=e.length;i<o;i++)n.$off(e[i],t);return n}var a,r=n._events[e];if(!r)return n;if(!t)return n._events[e]=null,n;for(var s=r.length;s--;)if((a=r[s])===t||a.fn===t){r.splice(s,1);break}return n},e.prototype.$emit=function(e){var t=this,n=t._events[e];if(n){n=n.length>1?T(n):n;for(var i=T(arguments,1),o='event handler for "'+e+'"',a=0,r=n.length;a<r;a++)Fe(n[a],t,i,t,o)}return t}}(Sn),function(e){e.prototype._update=function(e,t){var n=this,i=n.$el,o=n._vnode,a=Qt(n);n._vnode=e,n.$el=o?n.__patch__(o,e):n.__patch__(n.$el,e,t,!1),a(),i&&(i.__vue__=null),n.$el&&(n.$el.__vue__=n),n.$vnode&&n.$parent&&n.$vnode===n.$parent._vnode&&(n.$parent.$el=n.$el)},e.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){en(e,"beforeDestroy"),e._isBeingDestroyed=!0;var t=e.$parent;!t||t._isBeingDestroyed||e.$options.abstract||w(t.$children,e),e._watcher&&e._watcher.teardown();for(var n=e._watchers.length;n--;)e._watchers[n].teardown();e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),en(e,"destroyed"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}(Sn),function(e){Ct(e.prototype),e.prototype.$nextTick=function(e){return nt(e,this)},e.prototype._render=function(){var e,t=this,n=t.$options,i=n.render,o=n._parentVnode;o&&(t.$scopedSlots=mt(o.data.scopedSlots,t.$slots,t.$scopedSlots)),t.$vnode=o;try{qt=t,e=i.call(t._renderProxy,t.$createElement)}catch(n){$e(n,t,"render"),e=t._vnode}finally{qt=null}return Array.isArray(e)&&1===e.length&&(e=e[0]),e instanceof me||(e=ye()),e.parent=o,e}}(Sn);var zn=[String,RegExp,Array],En={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:zn,exclude:zn,max:[String,Number]},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var e in this.cache)Tn(this.cache,e,this.keys)},mounted:function(){var e=this;this.$watch("include",(function(t){Pn(e,(function(e){return In(t,e)}))})),this.$watch("exclude",(function(t){Pn(e,(function(e){return!In(t,e)}))}))},render:function(){var e=this.$slots.default,t=Gt(e),n=t&&t.componentOptions;if(n){var i=_n(n),o=this.include,a=this.exclude;if(o&&(!i||!In(o,i))||a&&i&&In(a,i))return t;var r=this.cache,s=this.keys,l=null==t.key?n.Ctor.cid+(n.tag?"::"+n.tag:""):t.key;r[l]?(t.componentInstance=r[l].componentInstance,w(s,l),s.push(l)):(r[l]=t,s.push(l),this.max&&s.length>parseInt(this.max)&&Tn(r,s[0],s,this._vnode)),t.data.keepAlive=!0}return t||e&&e[0]}}};!function(e){var t={get:function(){return M}};Object.defineProperty(e,"config",t),e.util={warn:ce,extend:z,mergeOptions:Re,defineReactive:Ie},e.set=Pe,e.delete=Te,e.nextTick=nt,e.observable=function(e){return _e(e),e},e.options=Object.create(null),N.forEach((function(t){e.options[t+"s"]=Object.create(null)})),e.options._base=e,z(e.options.components,En),function(e){e.use=function(e){var t=this._installedPlugins||(this._installedPlugins=[]);if(t.indexOf(e)>-1)return this;var n=T(arguments,1);return n.unshift(this),"function"==typeof e.install?e.install.apply(e,n):"function"==typeof e&&e.apply(null,n),t.push(e),this}}(e),function(e){e.mixin=function(e){return this.options=Re(this.options,e),this}}(e),jn(e),function(e){N.forEach((function(t){e[t]=function(e,n){return n?("component"===t&&d(n)&&(n.name=n.name||e,n=this.options._base.extend(n)),"directive"===t&&"function"==typeof n&&(n={bind:n,update:n}),this.options[t+"s"][e]=n,n):this.options[t+"s"][e]}}))}(e)}(Sn),Object.defineProperty(Sn.prototype,"$isServer",{get:oe}),Object.defineProperty(Sn.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Sn,"FunctionalRenderContext",{value:Lt}),Sn.version="2.6.12";var Cn=y("style,class"),Ln=y("input,textarea,option,select,progress"),Dn=y("contenteditable,draggable,spellcheck"),On=y("events,caret,typing,plaintext-only"),Wn=y("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,translate,truespeed,typemustmatch,visible"),Rn="http://www.w3.org/1999/xlink",Nn=function(e){return":"===e.charAt(5)&&"xlink"===e.slice(0,5)},Hn=function(e){return Nn(e)?e.slice(6,e.length):""},Mn=function(e){return null==e||!1===e};function Un(e){for(var t=e.data,n=e,i=e;r(i.componentInstance);)(i=i.componentInstance._vnode)&&i.data&&(t=qn(i.data,t));for(;r(n=n.parent);)n&&n.data&&(t=qn(t,n.data));return function(e,t){if(r(e)||r(t))return $n(e,Fn(t));return""}(t.staticClass,t.class)}function qn(e,t){return{staticClass:$n(e.staticClass,t.staticClass),class:r(e.class)?[e.class,t.class]:t.class}}function $n(e,t){return e?t?e+" "+t:e:t||""}function Fn(e){return Array.isArray(e)?function(e){for(var t,n="",i=0,o=e.length;i<o;i++)r(t=Fn(e[i]))&&""!==t&&(n&&(n+=" "),n+=t);return n}(e):c(e)?function(e){var t="";for(var n in e)e[n]&&(t&&(t+=" "),t+=n);return t}(e):"string"==typeof e?e:""}var Gn={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},Bn=y("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),Vn=y("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),Yn=function(e){return Bn(e)||Vn(e)};var Kn=Object.create(null);var Jn=y("text,number,password,search,email,tel,url");var Qn=Object.freeze({createElement:function(e,t){var n=document.createElement(e);return"select"!==e||t.data&&t.data.attrs&&void 0!==t.data.attrs.multiple&&n.setAttribute("multiple","multiple"),n},createElementNS:function(e,t){return document.createElementNS(Gn[e],t)},createTextNode:function(e){return document.createTextNode(e)},createComment:function(e){return document.createComment(e)},insertBefore:function(e,t,n){e.insertBefore(t,n)},removeChild:function(e,t){e.removeChild(t)},appendChild:function(e,t){e.appendChild(t)},parentNode:function(e){return e.parentNode},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.tagName},setTextContent:function(e,t){e.textContent=t},setStyleScope:function(e,t){e.setAttribute(t,"")}}),Zn={create:function(e,t){Xn(t)},update:function(e,t){e.data.ref!==t.data.ref&&(Xn(e,!0),Xn(t))},destroy:function(e){Xn(e,!0)}};function Xn(e,t){var n=e.data.ref;if(r(n)){var i=e.context,o=e.componentInstance||e.elm,a=i.$refs;t?Array.isArray(a[n])?w(a[n],o):a[n]===o&&(a[n]=void 0):e.data.refInFor?Array.isArray(a[n])?a[n].indexOf(o)<0&&a[n].push(o):a[n]=[o]:a[n]=o}}var ei=new me("",{},[]),ti=["create","activate","update","remove","destroy"];function ni(e,t){return e.key===t.key&&(e.tag===t.tag&&e.isComment===t.isComment&&r(e.data)===r(t.data)&&function(e,t){if("input"!==e.tag)return!0;var n,i=r(n=e.data)&&r(n=n.attrs)&&n.type,o=r(n=t.data)&&r(n=n.attrs)&&n.type;return i===o||Jn(i)&&Jn(o)}(e,t)||s(e.isAsyncPlaceholder)&&e.asyncFactory===t.asyncFactory&&a(t.asyncFactory.error))}function ii(e,t,n){var i,o,a={};for(i=t;i<=n;++i)r(o=e[i].key)&&(a[o]=i);return a}var oi={create:ai,update:ai,destroy:function(e){ai(e,ei)}};function ai(e,t){(e.data.directives||t.data.directives)&&function(e,t){var n,i,o,a=e===ei,r=t===ei,s=si(e.data.directives,e.context),l=si(t.data.directives,t.context),c=[],u=[];for(n in l)i=s[n],o=l[n],i?(o.oldValue=i.value,o.oldArg=i.arg,ci(o,"update",t,e),o.def&&o.def.componentUpdated&&u.push(o)):(ci(o,"bind",t,e),o.def&&o.def.inserted&&c.push(o));if(c.length){var d=function(){for(var n=0;n<c.length;n++)ci(c[n],"inserted",t,e)};a?lt(t,"insert",d):d()}u.length&&lt(t,"postpatch",(function(){for(var n=0;n<u.length;n++)ci(u[n],"componentUpdated",t,e)}));if(!a)for(n in s)l[n]||ci(s[n],"unbind",e,e,r)}(e,t)}var ri=Object.create(null);function si(e,t){var n,i,o=Object.create(null);if(!e)return o;for(n=0;n<e.length;n++)(i=e[n]).modifiers||(i.modifiers=ri),o[li(i)]=i,i.def=Ne(t.$options,"directives",i.name);return o}function li(e){return e.rawName||e.name+"."+Object.keys(e.modifiers||{}).join(".")}function ci(e,t,n,i,o){var a=e.def&&e.def[t];if(a)try{a(n.elm,e,n,i,o)}catch(i){$e(i,n.context,"directive "+e.name+" "+t+" hook")}}var ui=[Zn,oi];function di(e,t){var n=t.componentOptions;if(!(r(n)&&!1===n.Ctor.options.inheritAttrs||a(e.data.attrs)&&a(t.data.attrs))){var i,o,s=t.elm,l=e.data.attrs||{},c=t.data.attrs||{};for(i in r(c.__ob__)&&(c=t.data.attrs=z({},c)),c)o=c[i],l[i]!==o&&hi(s,i,o);for(i in(J||Z)&&c.value!==l.value&&hi(s,"value",c.value),l)a(c[i])&&(Nn(i)?s.removeAttributeNS(Rn,Hn(i)):Dn(i)||s.removeAttribute(i))}}function hi(e,t,n){e.tagName.indexOf("-")>-1?fi(e,t,n):Wn(t)?Mn(n)?e.removeAttribute(t):(n="allowfullscreen"===t&&"EMBED"===e.tagName?"true":t,e.setAttribute(t,n)):Dn(t)?e.setAttribute(t,function(e,t){return Mn(t)||"false"===t?"false":"contenteditable"===e&&On(t)?t:"true"}(t,n)):Nn(t)?Mn(n)?e.removeAttributeNS(Rn,Hn(t)):e.setAttributeNS(Rn,t,n):fi(e,t,n)}function fi(e,t,n){if(Mn(n))e.removeAttribute(t);else{if(J&&!Q&&"TEXTAREA"===e.tagName&&"placeholder"===t&&""!==n&&!e.__ieph){var i=function(t){t.stopImmediatePropagation(),e.removeEventListener("input",i)};e.addEventListener("input",i),e.__ieph=!0}e.setAttribute(t,n)}}var pi={create:di,update:di};function mi(e,t){var n=t.elm,i=t.data,o=e.data;if(!(a(i.staticClass)&&a(i.class)&&(a(o)||a(o.staticClass)&&a(o.class)))){var s=Un(t),l=n._transitionClasses;r(l)&&(s=$n(s,Fn(l))),s!==n._prevClass&&(n.setAttribute("class",s),n._prevClass=s)}}var gi,yi={create:mi,update:mi};function vi(e,t,n){var i=gi;return function o(){var a=t.apply(null,arguments);null!==a&&ki(e,o,n,i)}}var wi=Ye&&!(ee&&Number(ee[1])<=53);function bi(e,t,n,i){if(wi){var o=ln,a=t;t=a._wrapper=function(e){if(e.target===e.currentTarget||e.timeStamp>=o||e.timeStamp<=0||e.target.ownerDocument!==document)return a.apply(this,arguments)}}gi.addEventListener(e,t,ne?{capture:n,passive:i}:n)}function ki(e,t,n,i){(i||gi).removeEventListener(e,t._wrapper||t,n)}function xi(e,t){if(!a(e.data.on)||!a(t.data.on)){var n=t.data.on||{},i=e.data.on||{};gi=t.elm,function(e){if(r(e.__r)){var t=J?"change":"input";e[t]=[].concat(e.__r,e[t]||[]),delete e.__r}r(e.__c)&&(e.change=[].concat(e.__c,e.change||[]),delete e.__c)}(n),st(n,i,bi,ki,vi,t.context),gi=void 0}}var Ai,Si={create:xi,update:xi};function ji(e,t){if(!a(e.data.domProps)||!a(t.data.domProps)){var n,i,o=t.elm,s=e.data.domProps||{},l=t.data.domProps||{};for(n in r(l.__ob__)&&(l=t.data.domProps=z({},l)),s)n in l||(o[n]="");for(n in l){if(i=l[n],"textContent"===n||"innerHTML"===n){if(t.children&&(t.children.length=0),i===s[n])continue;1===o.childNodes.length&&o.removeChild(o.childNodes[0])}if("value"===n&&"PROGRESS"!==o.tagName){o._value=i;var c=a(i)?"":String(i);_i(o,c)&&(o.value=c)}else if("innerHTML"===n&&Vn(o.tagName)&&a(o.innerHTML)){(Ai=Ai||document.createElement("div")).innerHTML="<svg>"+i+"</svg>";for(var u=Ai.firstChild;o.firstChild;)o.removeChild(o.firstChild);for(;u.firstChild;)o.appendChild(u.firstChild)}else if(i!==s[n])try{o[n]=i}catch(e){}}}}function _i(e,t){return!e.composing&&("OPTION"===e.tagName||function(e,t){var n=!0;try{n=document.activeElement!==e}catch(e){}return n&&e.value!==t}(e,t)||function(e,t){var n=e.value,i=e._vModifiers;if(r(i)){if(i.number)return g(n)!==g(t);if(i.trim)return n.trim()!==t.trim()}return n!==t}(e,t))}var Ii={create:ji,update:ji},Pi=x((function(e){var t={},n=/:(.+)/;return e.split(/;(?![^(]*\))/g).forEach((function(e){if(e){var i=e.split(n);i.length>1&&(t[i[0].trim()]=i[1].trim())}})),t}));function Ti(e){var t=zi(e.style);return e.staticStyle?z(e.staticStyle,t):t}function zi(e){return Array.isArray(e)?E(e):"string"==typeof e?Pi(e):e}var Ei,Ci=/^--/,Li=/\s*!important$/,Di=function(e,t,n){if(Ci.test(t))e.style.setProperty(t,n);else if(Li.test(n))e.style.setProperty(I(t),n.replace(Li,""),"important");else{var i=Wi(t);if(Array.isArray(n))for(var o=0,a=n.length;o<a;o++)e.style[i]=n[o];else e.style[i]=n}},Oi=["Webkit","Moz","ms"],Wi=x((function(e){if(Ei=Ei||document.createElement("div").style,"filter"!==(e=S(e))&&e in Ei)return e;for(var t=e.charAt(0).toUpperCase()+e.slice(1),n=0;n<Oi.length;n++){var i=Oi[n]+t;if(i in Ei)return i}}));function Ri(e,t){var n=t.data,i=e.data;if(!(a(n.staticStyle)&&a(n.style)&&a(i.staticStyle)&&a(i.style))){var o,s,l=t.elm,c=i.staticStyle,u=i.normalizedStyle||i.style||{},d=c||u,h=zi(t.data.style)||{};t.data.normalizedStyle=r(h.__ob__)?z({},h):h;var f=function(e,t){var n,i={};if(t)for(var o=e;o.componentInstance;)(o=o.componentInstance._vnode)&&o.data&&(n=Ti(o.data))&&z(i,n);(n=Ti(e.data))&&z(i,n);for(var a=e;a=a.parent;)a.data&&(n=Ti(a.data))&&z(i,n);return i}(t,!0);for(s in d)a(f[s])&&Di(l,s,"");for(s in f)(o=f[s])!==d[s]&&Di(l,s,null==o?"":o)}}var Ni={create:Ri,update:Ri},Hi=/\s+/;function Mi(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(Hi).forEach((function(t){return e.classList.add(t)})):e.classList.add(t);else{var n=" "+(e.getAttribute("class")||"")+" ";n.indexOf(" "+t+" ")<0&&e.setAttribute("class",(n+t).trim())}}function Ui(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(Hi).forEach((function(t){return e.classList.remove(t)})):e.classList.remove(t),e.classList.length||e.removeAttribute("class");else{for(var n=" "+(e.getAttribute("class")||"")+" ",i=" "+t+" ";n.indexOf(i)>=0;)n=n.replace(i," ");(n=n.trim())?e.setAttribute("class",n):e.removeAttribute("class")}}function qi(e){if(e){if("object"==typeof e){var t={};return!1!==e.css&&z(t,$i(e.name||"v")),z(t,e),t}return"string"==typeof e?$i(e):void 0}}var $i=x((function(e){return{enterClass:e+"-enter",enterToClass:e+"-enter-to",enterActiveClass:e+"-enter-active",leaveClass:e+"-leave",leaveToClass:e+"-leave-to",leaveActiveClass:e+"-leave-active"}})),Fi=B&&!Q,Gi="transition",Bi="transitionend",Vi="animation",Yi="animationend";Fi&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(Gi="WebkitTransition",Bi="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Vi="WebkitAnimation",Yi="webkitAnimationEnd"));var Ki=B?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(e){return e()};function Ji(e){Ki((function(){Ki(e)}))}function Qi(e,t){var n=e._transitionClasses||(e._transitionClasses=[]);n.indexOf(t)<0&&(n.push(t),Mi(e,t))}function Zi(e,t){e._transitionClasses&&w(e._transitionClasses,t),Ui(e,t)}function Xi(e,t,n){var i=to(e,t),o=i.type,a=i.timeout,r=i.propCount;if(!o)return n();var s="transition"===o?Bi:Yi,l=0,c=function(){e.removeEventListener(s,u),n()},u=function(t){t.target===e&&++l>=r&&c()};setTimeout((function(){l<r&&c()}),a+1),e.addEventListener(s,u)}var eo=/\b(transform|all)(,|$)/;function to(e,t){var n,i=window.getComputedStyle(e),o=(i[Gi+"Delay"]||"").split(", "),a=(i[Gi+"Duration"]||"").split(", "),r=no(o,a),s=(i[Vi+"Delay"]||"").split(", "),l=(i[Vi+"Duration"]||"").split(", "),c=no(s,l),u=0,d=0;return"transition"===t?r>0&&(n="transition",u=r,d=a.length):"animation"===t?c>0&&(n="animation",u=c,d=l.length):d=(n=(u=Math.max(r,c))>0?r>c?"transition":"animation":null)?"transition"===n?a.length:l.length:0,{type:n,timeout:u,propCount:d,hasTransform:"transition"===n&&eo.test(i[Gi+"Property"])}}function no(e,t){for(;e.length<t.length;)e=e.concat(e);return Math.max.apply(null,t.map((function(t,n){return io(t)+io(e[n])})))}function io(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function oo(e,t){var n=e.elm;r(n._leaveCb)&&(n._leaveCb.cancelled=!0,n._leaveCb());var i=qi(e.data.transition);if(!a(i)&&!r(n._enterCb)&&1===n.nodeType){for(var o=i.css,s=i.type,l=i.enterClass,u=i.enterToClass,d=i.enterActiveClass,h=i.appearClass,f=i.appearToClass,p=i.appearActiveClass,m=i.beforeEnter,y=i.enter,v=i.afterEnter,w=i.enterCancelled,b=i.beforeAppear,k=i.appear,x=i.afterAppear,A=i.appearCancelled,S=i.duration,j=Jt,_=Jt.$vnode;_&&_.parent;)j=_.context,_=_.parent;var I=!j._isMounted||!e.isRootInsert;if(!I||k||""===k){var P=I&&h?h:l,T=I&&p?p:d,z=I&&f?f:u,E=I&&b||m,C=I&&"function"==typeof k?k:y,L=I&&x||v,D=I&&A||w,O=g(c(S)?S.enter:S);0;var W=!1!==o&&!Q,N=so(C),H=n._enterCb=R((function(){W&&(Zi(n,z),Zi(n,T)),H.cancelled?(W&&Zi(n,P),D&&D(n)):L&&L(n),n._enterCb=null}));e.data.show||lt(e,"insert",(function(){var t=n.parentNode,i=t&&t._pending&&t._pending[e.key];i&&i.tag===e.tag&&i.elm._leaveCb&&i.elm._leaveCb(),C&&C(n,H)})),E&&E(n),W&&(Qi(n,P),Qi(n,T),Ji((function(){Zi(n,P),H.cancelled||(Qi(n,z),N||(ro(O)?setTimeout(H,O):Xi(n,s,H)))}))),e.data.show&&(t&&t(),C&&C(n,H)),W||N||H()}}}function ao(e,t){var n=e.elm;r(n._enterCb)&&(n._enterCb.cancelled=!0,n._enterCb());var i=qi(e.data.transition);if(a(i)||1!==n.nodeType)return t();if(!r(n._leaveCb)){var o=i.css,s=i.type,l=i.leaveClass,u=i.leaveToClass,d=i.leaveActiveClass,h=i.beforeLeave,f=i.leave,p=i.afterLeave,m=i.leaveCancelled,y=i.delayLeave,v=i.duration,w=!1!==o&&!Q,b=so(f),k=g(c(v)?v.leave:v);0;var x=n._leaveCb=R((function(){n.parentNode&&n.parentNode._pending&&(n.parentNode._pending[e.key]=null),w&&(Zi(n,u),Zi(n,d)),x.cancelled?(w&&Zi(n,l),m&&m(n)):(t(),p&&p(n)),n._leaveCb=null}));y?y(A):A()}function A(){x.cancelled||(!e.data.show&&n.parentNode&&((n.parentNode._pending||(n.parentNode._pending={}))[e.key]=e),h&&h(n),w&&(Qi(n,l),Qi(n,d),Ji((function(){Zi(n,l),x.cancelled||(Qi(n,u),b||(ro(k)?setTimeout(x,k):Xi(n,s,x)))}))),f&&f(n,x),w||b||x())}}function ro(e){return"number"==typeof e&&!isNaN(e)}function so(e){if(a(e))return!1;var t=e.fns;return r(t)?so(Array.isArray(t)?t[0]:t):(e._length||e.length)>1}function lo(e,t){!0!==t.data.show&&oo(t)}var co=function(e){var t,n,i={},o=e.modules,c=e.nodeOps;for(t=0;t<ti.length;++t)for(i[ti[t]]=[],n=0;n<o.length;++n)r(o[n][ti[t]])&&i[ti[t]].push(o[n][ti[t]]);function u(e){var t=c.parentNode(e);r(t)&&c.removeChild(t,e)}function d(e,t,n,o,a,l,u){if(r(e.elm)&&r(l)&&(e=l[u]=we(e)),e.isRootInsert=!a,!function(e,t,n,o){var a=e.data;if(r(a)){var l=r(e.componentInstance)&&a.keepAlive;if(r(a=a.hook)&&r(a=a.init)&&a(e,!1),r(e.componentInstance))return h(e,t),f(n,e.elm,o),s(l)&&function(e,t,n,o){var a,s=e;for(;s.componentInstance;)if(s=s.componentInstance._vnode,r(a=s.data)&&r(a=a.transition)){for(a=0;a<i.activate.length;++a)i.activate[a](ei,s);t.push(s);break}f(n,e.elm,o)}(e,t,n,o),!0}}(e,t,n,o)){var d=e.data,m=e.children,y=e.tag;r(y)?(e.elm=e.ns?c.createElementNS(e.ns,y):c.createElement(y,e),v(e),p(e,m,t),r(d)&&g(e,t),f(n,e.elm,o)):s(e.isComment)?(e.elm=c.createComment(e.text),f(n,e.elm,o)):(e.elm=c.createTextNode(e.text),f(n,e.elm,o))}}function h(e,t){r(e.data.pendingInsert)&&(t.push.apply(t,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,m(e)?(g(e,t),v(e)):(Xn(e),t.push(e))}function f(e,t,n){r(e)&&(r(n)?c.parentNode(n)===e&&c.insertBefore(e,t,n):c.appendChild(e,t))}function p(e,t,n){if(Array.isArray(t)){0;for(var i=0;i<t.length;++i)d(t[i],n,e.elm,null,!0,t,i)}else l(e.text)&&c.appendChild(e.elm,c.createTextNode(String(e.text)))}function m(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return r(e.tag)}function g(e,n){for(var o=0;o<i.create.length;++o)i.create[o](ei,e);r(t=e.data.hook)&&(r(t.create)&&t.create(ei,e),r(t.insert)&&n.push(e))}function v(e){var t;if(r(t=e.fnScopeId))c.setStyleScope(e.elm,t);else for(var n=e;n;)r(t=n.context)&&r(t=t.$options._scopeId)&&c.setStyleScope(e.elm,t),n=n.parent;r(t=Jt)&&t!==e.context&&t!==e.fnContext&&r(t=t.$options._scopeId)&&c.setStyleScope(e.elm,t)}function w(e,t,n,i,o,a){for(;i<=o;++i)d(n[i],a,e,t,!1,n,i)}function b(e){var t,n,o=e.data;if(r(o))for(r(t=o.hook)&&r(t=t.destroy)&&t(e),t=0;t<i.destroy.length;++t)i.destroy[t](e);if(r(t=e.children))for(n=0;n<e.children.length;++n)b(e.children[n])}function k(e,t,n){for(;t<=n;++t){var i=e[t];r(i)&&(r(i.tag)?(x(i),b(i)):u(i.elm))}}function x(e,t){if(r(t)||r(e.data)){var n,o=i.remove.length+1;for(r(t)?t.listeners+=o:t=function(e,t){function n(){0==--n.listeners&&u(e)}return n.listeners=t,n}(e.elm,o),r(n=e.componentInstance)&&r(n=n._vnode)&&r(n.data)&&x(n,t),n=0;n<i.remove.length;++n)i.remove[n](e,t);r(n=e.data.hook)&&r(n=n.remove)?n(e,t):t()}else u(e.elm)}function A(e,t,n,i){for(var o=n;o<i;o++){var a=t[o];if(r(a)&&ni(e,a))return o}}function S(e,t,n,o,l,u){if(e!==t){r(t.elm)&&r(o)&&(t=o[l]=we(t));var h=t.elm=e.elm;if(s(e.isAsyncPlaceholder))r(t.asyncFactory.resolved)?I(e.elm,t,n):t.isAsyncPlaceholder=!0;else if(s(t.isStatic)&&s(e.isStatic)&&t.key===e.key&&(s(t.isCloned)||s(t.isOnce)))t.componentInstance=e.componentInstance;else{var f,p=t.data;r(p)&&r(f=p.hook)&&r(f=f.prepatch)&&f(e,t);var g=e.children,y=t.children;if(r(p)&&m(t)){for(f=0;f<i.update.length;++f)i.update[f](e,t);r(f=p.hook)&&r(f=f.update)&&f(e,t)}a(t.text)?r(g)&&r(y)?g!==y&&function(e,t,n,i,o){var s,l,u,h=0,f=0,p=t.length-1,m=t[0],g=t[p],y=n.length-1,v=n[0],b=n[y],x=!o;for(0;h<=p&&f<=y;)a(m)?m=t[++h]:a(g)?g=t[--p]:ni(m,v)?(S(m,v,i,n,f),m=t[++h],v=n[++f]):ni(g,b)?(S(g,b,i,n,y),g=t[--p],b=n[--y]):ni(m,b)?(S(m,b,i,n,y),x&&c.insertBefore(e,m.elm,c.nextSibling(g.elm)),m=t[++h],b=n[--y]):ni(g,v)?(S(g,v,i,n,f),x&&c.insertBefore(e,g.elm,m.elm),g=t[--p],v=n[++f]):(a(s)&&(s=ii(t,h,p)),a(l=r(v.key)?s[v.key]:A(v,t,h,p))?d(v,i,e,m.elm,!1,n,f):ni(u=t[l],v)?(S(u,v,i,n,f),t[l]=void 0,x&&c.insertBefore(e,u.elm,m.elm)):d(v,i,e,m.elm,!1,n,f),v=n[++f]);h>p?w(e,a(n[y+1])?null:n[y+1].elm,n,f,y,i):f>y&&k(t,h,p)}(h,g,y,n,u):r(y)?(r(e.text)&&c.setTextContent(h,""),w(h,null,y,0,y.length-1,n)):r(g)?k(g,0,g.length-1):r(e.text)&&c.setTextContent(h,""):e.text!==t.text&&c.setTextContent(h,t.text),r(p)&&r(f=p.hook)&&r(f=f.postpatch)&&f(e,t)}}}function j(e,t,n){if(s(n)&&r(e.parent))e.parent.data.pendingInsert=t;else for(var i=0;i<t.length;++i)t[i].data.hook.insert(t[i])}var _=y("attrs,class,staticClass,staticStyle,key");function I(e,t,n,i){var o,a=t.tag,l=t.data,c=t.children;if(i=i||l&&l.pre,t.elm=e,s(t.isComment)&&r(t.asyncFactory))return t.isAsyncPlaceholder=!0,!0;if(r(l)&&(r(o=l.hook)&&r(o=o.init)&&o(t,!0),r(o=t.componentInstance)))return h(t,n),!0;if(r(a)){if(r(c))if(e.hasChildNodes())if(r(o=l)&&r(o=o.domProps)&&r(o=o.innerHTML)){if(o!==e.innerHTML)return!1}else{for(var u=!0,d=e.firstChild,f=0;f<c.length;f++){if(!d||!I(d,c[f],n,i)){u=!1;break}d=d.nextSibling}if(!u||d)return!1}else p(t,c,n);if(r(l)){var m=!1;for(var y in l)if(!_(y)){m=!0,g(t,n);break}!m&&l.class&&ot(l.class)}}else e.data!==t.text&&(e.data=t.text);return!0}return function(e,t,n,o){if(!a(t)){var l,u=!1,h=[];if(a(e))u=!0,d(t,h);else{var f=r(e.nodeType);if(!f&&ni(e,t))S(e,t,h,null,null,o);else{if(f){if(1===e.nodeType&&e.hasAttribute("data-server-rendered")&&(e.removeAttribute("data-server-rendered"),n=!0),s(n)&&I(e,t,h))return j(t,h,!0),e;l=e,e=new me(c.tagName(l).toLowerCase(),{},[],void 0,l)}var p=e.elm,g=c.parentNode(p);if(d(t,h,p._leaveCb?null:g,c.nextSibling(p)),r(t.parent))for(var y=t.parent,v=m(t);y;){for(var w=0;w<i.destroy.length;++w)i.destroy[w](y);if(y.elm=t.elm,v){for(var x=0;x<i.create.length;++x)i.create[x](ei,y);var A=y.data.hook.insert;if(A.merged)for(var _=1;_<A.fns.length;_++)A.fns[_]()}else Xn(y);y=y.parent}r(g)?k([e],0,0):r(e.tag)&&b(e)}}return j(t,h,u),t.elm}r(e)&&b(e)}}({nodeOps:Qn,modules:[pi,yi,Si,Ii,Ni,B?{create:lo,activate:lo,remove:function(e,t){!0!==e.data.show?ao(e,t):t()}}:{}].concat(ui)});Q&&document.addEventListener("selectionchange",(function(){var e=document.activeElement;e&&e.vmodel&&vo(e,"input")}));var uo={inserted:function(e,t,n,i){"select"===n.tag?(i.elm&&!i.elm._vOptions?lt(n,"postpatch",(function(){uo.componentUpdated(e,t,n)})):ho(e,t,n.context),e._vOptions=[].map.call(e.options,mo)):("textarea"===n.tag||Jn(e.type))&&(e._vModifiers=t.modifiers,t.modifiers.lazy||(e.addEventListener("compositionstart",go),e.addEventListener("compositionend",yo),e.addEventListener("change",yo),Q&&(e.vmodel=!0)))},componentUpdated:function(e,t,n){if("select"===n.tag){ho(e,t,n.context);var i=e._vOptions,o=e._vOptions=[].map.call(e.options,mo);if(o.some((function(e,t){return!O(e,i[t])})))(e.multiple?t.value.some((function(e){return po(e,o)})):t.value!==t.oldValue&&po(t.value,o))&&vo(e,"change")}}};function ho(e,t,n){fo(e,t,n),(J||Z)&&setTimeout((function(){fo(e,t,n)}),0)}function fo(e,t,n){var i=t.value,o=e.multiple;if(!o||Array.isArray(i)){for(var a,r,s=0,l=e.options.length;s<l;s++)if(r=e.options[s],o)a=W(i,mo(r))>-1,r.selected!==a&&(r.selected=a);else if(O(mo(r),i))return void(e.selectedIndex!==s&&(e.selectedIndex=s));o||(e.selectedIndex=-1)}}function po(e,t){return t.every((function(t){return!O(t,e)}))}function mo(e){return"_value"in e?e._value:e.value}function go(e){e.target.composing=!0}function yo(e){e.target.composing&&(e.target.composing=!1,vo(e.target,"input"))}function vo(e,t){var n=document.createEvent("HTMLEvents");n.initEvent(t,!0,!0),e.dispatchEvent(n)}function wo(e){return!e.componentInstance||e.data&&e.data.transition?e:wo(e.componentInstance._vnode)}var bo={model:uo,show:{bind:function(e,t,n){var i=t.value,o=(n=wo(n)).data&&n.data.transition,a=e.__vOriginalDisplay="none"===e.style.display?"":e.style.display;i&&o?(n.data.show=!0,oo(n,(function(){e.style.display=a}))):e.style.display=i?a:"none"},update:function(e,t,n){var i=t.value;!i!=!t.oldValue&&((n=wo(n)).data&&n.data.transition?(n.data.show=!0,i?oo(n,(function(){e.style.display=e.__vOriginalDisplay})):ao(n,(function(){e.style.display="none"}))):e.style.display=i?e.__vOriginalDisplay:"none")},unbind:function(e,t,n,i,o){o||(e.style.display=e.__vOriginalDisplay)}}},ko={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function xo(e){var t=e&&e.componentOptions;return t&&t.Ctor.options.abstract?xo(Gt(t.children)):e}function Ao(e){var t={},n=e.$options;for(var i in n.propsData)t[i]=e[i];var o=n._parentListeners;for(var a in o)t[S(a)]=o[a];return t}function So(e,t){if(/\d-keep-alive$/.test(t.tag))return e("keep-alive",{props:t.componentOptions.propsData})}var jo=function(e){return e.tag||Ft(e)},_o=function(e){return"show"===e.name},Io={name:"transition",props:ko,abstract:!0,render:function(e){var t=this,n=this.$slots.default;if(n&&(n=n.filter(jo)).length){0;var i=this.mode;0;var o=n[0];if(function(e){for(;e=e.parent;)if(e.data.transition)return!0}(this.$vnode))return o;var a=xo(o);if(!a)return o;if(this._leaving)return So(e,o);var r="__transition-"+this._uid+"-";a.key=null==a.key?a.isComment?r+"comment":r+a.tag:l(a.key)?0===String(a.key).indexOf(r)?a.key:r+a.key:a.key;var s=(a.data||(a.data={})).transition=Ao(this),c=this._vnode,u=xo(c);if(a.data.directives&&a.data.directives.some(_o)&&(a.data.show=!0),u&&u.data&&!function(e,t){return t.key===e.key&&t.tag===e.tag}(a,u)&&!Ft(u)&&(!u.componentInstance||!u.componentInstance._vnode.isComment)){var d=u.data.transition=z({},s);if("out-in"===i)return this._leaving=!0,lt(d,"afterLeave",(function(){t._leaving=!1,t.$forceUpdate()})),So(e,o);if("in-out"===i){if(Ft(a))return c;var h,f=function(){h()};lt(s,"afterEnter",f),lt(s,"enterCancelled",f),lt(d,"delayLeave",(function(e){h=e}))}}return o}}},Po=z({tag:String,moveClass:String},ko);function To(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function zo(e){e.data.newPos=e.elm.getBoundingClientRect()}function Eo(e){var t=e.data.pos,n=e.data.newPos,i=t.left-n.left,o=t.top-n.top;if(i||o){e.data.moved=!0;var a=e.elm.style;a.transform=a.WebkitTransform="translate("+i+"px,"+o+"px)",a.transitionDuration="0s"}}delete Po.mode;var Co={Transition:Io,TransitionGroup:{props:Po,beforeMount:function(){var e=this,t=this._update;this._update=function(n,i){var o=Qt(e);e.__patch__(e._vnode,e.kept,!1,!0),e._vnode=e.kept,o(),t.call(e,n,i)}},render:function(e){for(var t=this.tag||this.$vnode.data.tag||"span",n=Object.create(null),i=this.prevChildren=this.children,o=this.$slots.default||[],a=this.children=[],r=Ao(this),s=0;s<o.length;s++){var l=o[s];if(l.tag)if(null!=l.key&&0!==String(l.key).indexOf("__vlist"))a.push(l),n[l.key]=l,(l.data||(l.data={})).transition=r;else;}if(i){for(var c=[],u=[],d=0;d<i.length;d++){var h=i[d];h.data.transition=r,h.data.pos=h.elm.getBoundingClientRect(),n[h.key]?c.push(h):u.push(h)}this.kept=e(t,null,c),this.removed=u}return e(t,null,a)},updated:function(){var e=this.prevChildren,t=this.moveClass||(this.name||"v")+"-move";e.length&&this.hasMove(e[0].elm,t)&&(e.forEach(To),e.forEach(zo),e.forEach(Eo),this._reflow=document.body.offsetHeight,e.forEach((function(e){if(e.data.moved){var n=e.elm,i=n.style;Qi(n,t),i.transform=i.WebkitTransform=i.transitionDuration="",n.addEventListener(Bi,n._moveCb=function e(i){i&&i.target!==n||i&&!/transform$/.test(i.propertyName)||(n.removeEventListener(Bi,e),n._moveCb=null,Zi(n,t))})}})))},methods:{hasMove:function(e,t){if(!Fi)return!1;if(this._hasMove)return this._hasMove;var n=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach((function(e){Ui(n,e)})),Mi(n,t),n.style.display="none",this.$el.appendChild(n);var i=to(n);return this.$el.removeChild(n),this._hasMove=i.hasTransform}}}};Sn.config.mustUseProp=function(e,t,n){return"value"===n&&Ln(e)&&"button"!==t||"selected"===n&&"option"===e||"checked"===n&&"input"===e||"muted"===n&&"video"===e},Sn.config.isReservedTag=Yn,Sn.config.isReservedAttr=Cn,Sn.config.getTagNamespace=function(e){return Vn(e)?"svg":"math"===e?"math":void 0},Sn.config.isUnknownElement=function(e){if(!B)return!0;if(Yn(e))return!1;if(e=e.toLowerCase(),null!=Kn[e])return Kn[e];var t=document.createElement(e);return e.indexOf("-")>-1?Kn[e]=t.constructor===window.HTMLUnknownElement||t.constructor===window.HTMLElement:Kn[e]=/HTMLUnknownElement/.test(t.toString())},z(Sn.options.directives,bo),z(Sn.options.components,Co),Sn.prototype.__patch__=B?co:C,Sn.prototype.$mount=function(e,t){return function(e,t,n){var i;return e.$el=t,e.$options.render||(e.$options.render=ye),en(e,"beforeMount"),i=function(){e._update(e._render(),n)},new fn(e,i,C,{before:function(){e._isMounted&&!e._isDestroyed&&en(e,"beforeUpdate")}},!0),n=!1,null==e.$vnode&&(e._isMounted=!0,en(e,"mounted")),e}(this,e=e&&B?function(e){if("string"==typeof e){var t=document.querySelector(e);return t||document.createElement("div")}return e}(e):void 0,t)},B&&setTimeout((function(){M.devtools&&ae&&ae.emit("init",Sn)}),0);var Lo=Sn;
/*!
  * vue-router v3.4.8
  * (c) 2020 Evan You
  * @license MIT
  */function Do(e,t){for(var n in t)e[n]=t[n];return e}var Oo=/[!'()*]/g,Wo=function(e){return"%"+e.charCodeAt(0).toString(16)},Ro=/%2C/g,No=function(e){return encodeURIComponent(e).replace(Oo,Wo).replace(Ro,",")};function Ho(e){try{return decodeURIComponent(e)}catch(e){0}return e}var Mo=function(e){return null==e||"object"==typeof e?e:String(e)};function Uo(e){var t={};return(e=e.trim().replace(/^(\?|#|&)/,""))?(e.split("&").forEach((function(e){var n=e.replace(/\+/g," ").split("="),i=Ho(n.shift()),o=n.length>0?Ho(n.join("=")):null;void 0===t[i]?t[i]=o:Array.isArray(t[i])?t[i].push(o):t[i]=[t[i],o]})),t):t}function qo(e){var t=e?Object.keys(e).map((function(t){var n=e[t];if(void 0===n)return"";if(null===n)return No(t);if(Array.isArray(n)){var i=[];return n.forEach((function(e){void 0!==e&&(null===e?i.push(No(t)):i.push(No(t)+"="+No(e)))})),i.join("&")}return No(t)+"="+No(n)})).filter((function(e){return e.length>0})).join("&"):null;return t?"?"+t:""}var $o=/\/?$/;function Fo(e,t,n,i){var o=i&&i.options.stringifyQuery,a=t.query||{};try{a=Go(a)}catch(e){}var r={name:t.name||e&&e.name,meta:e&&e.meta||{},path:t.path||"/",hash:t.hash||"",query:a,params:t.params||{},fullPath:Yo(t,o),matched:e?Vo(e):[]};return n&&(r.redirectedFrom=Yo(n,o)),Object.freeze(r)}function Go(e){if(Array.isArray(e))return e.map(Go);if(e&&"object"==typeof e){var t={};for(var n in e)t[n]=Go(e[n]);return t}return e}var Bo=Fo(null,{path:"/"});function Vo(e){for(var t=[];e;)t.unshift(e),e=e.parent;return t}function Yo(e,t){var n=e.path,i=e.query;void 0===i&&(i={});var o=e.hash;return void 0===o&&(o=""),(n||"/")+(t||qo)(i)+o}function Ko(e,t){return t===Bo?e===t:!!t&&(e.path&&t.path?e.path.replace($o,"")===t.path.replace($o,"")&&e.hash===t.hash&&Jo(e.query,t.query):!(!e.name||!t.name)&&(e.name===t.name&&e.hash===t.hash&&Jo(e.query,t.query)&&Jo(e.params,t.params)))}function Jo(e,t){if(void 0===e&&(e={}),void 0===t&&(t={}),!e||!t)return e===t;var n=Object.keys(e).sort(),i=Object.keys(t).sort();return n.length===i.length&&n.every((function(n,o){var a=e[n];if(i[o]!==n)return!1;var r=t[n];return null==a||null==r?a===r:"object"==typeof a&&"object"==typeof r?Jo(a,r):String(a)===String(r)}))}function Qo(e){for(var t=0;t<e.matched.length;t++){var n=e.matched[t];for(var i in n.instances){var o=n.instances[i],a=n.enteredCbs[i];if(o&&a){delete n.enteredCbs[i];for(var r=0;r<a.length;r++)o._isBeingDestroyed||a[r](o)}}}}var Zo={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(e,t){var n=t.props,i=t.children,o=t.parent,a=t.data;a.routerView=!0;for(var r=o.$createElement,s=n.name,l=o.$route,c=o._routerViewCache||(o._routerViewCache={}),u=0,d=!1;o&&o._routerRoot!==o;){var h=o.$vnode?o.$vnode.data:{};h.routerView&&u++,h.keepAlive&&o._directInactive&&o._inactive&&(d=!0),o=o.$parent}if(a.routerViewDepth=u,d){var f=c[s],p=f&&f.component;return p?(f.configProps&&Xo(p,a,f.route,f.configProps),r(p,a,i)):r()}var m=l.matched[u],g=m&&m.components[s];if(!m||!g)return c[s]=null,r();c[s]={component:g},a.registerRouteInstance=function(e,t){var n=m.instances[s];(t&&n!==e||!t&&n===e)&&(m.instances[s]=t)},(a.hook||(a.hook={})).prepatch=function(e,t){m.instances[s]=t.componentInstance},a.hook.init=function(e){e.data.keepAlive&&e.componentInstance&&e.componentInstance!==m.instances[s]&&(m.instances[s]=e.componentInstance),Qo(l)};var y=m.props&&m.props[s];return y&&(Do(c[s],{route:l,configProps:y}),Xo(g,a,l,y)),r(g,a,i)}};function Xo(e,t,n,i){var o=t.props=function(e,t){switch(typeof t){case"undefined":return;case"object":return t;case"function":return t(e);case"boolean":return t?e.params:void 0;default:0}}(n,i);if(o){o=t.props=Do({},o);var a=t.attrs=t.attrs||{};for(var r in o)e.props&&r in e.props||(a[r]=o[r],delete o[r])}}function ea(e,t,n){var i=e.charAt(0);if("/"===i)return e;if("?"===i||"#"===i)return t+e;var o=t.split("/");n&&o[o.length-1]||o.pop();for(var a=e.replace(/^\//,"").split("/"),r=0;r<a.length;r++){var s=a[r];".."===s?o.pop():"."!==s&&o.push(s)}return""!==o[0]&&o.unshift(""),o.join("/")}function ta(e){return e.replace(/\/\//g,"/")}var na=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)},ia=ya,oa=ca,aa=function(e,t){return da(ca(e,t),t)},ra=da,sa=ga,la=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function ca(e,t){for(var n,i=[],o=0,a=0,r="",s=t&&t.delimiter||"/";null!=(n=la.exec(e));){var l=n[0],c=n[1],u=n.index;if(r+=e.slice(a,u),a=u+l.length,c)r+=c[1];else{var d=e[a],h=n[2],f=n[3],p=n[4],m=n[5],g=n[6],y=n[7];r&&(i.push(r),r="");var v=null!=h&&null!=d&&d!==h,w="+"===g||"*"===g,b="?"===g||"*"===g,k=n[2]||s,x=p||m;i.push({name:f||o++,prefix:h||"",delimiter:k,optional:b,repeat:w,partial:v,asterisk:!!y,pattern:x?fa(x):y?".*":"[^"+ha(k)+"]+?"})}}return a<e.length&&(r+=e.substr(a)),r&&i.push(r),i}function ua(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function da(e,t){for(var n=new Array(e.length),i=0;i<e.length;i++)"object"==typeof e[i]&&(n[i]=new RegExp("^(?:"+e[i].pattern+")$",ma(t)));return function(t,i){for(var o="",a=t||{},r=(i||{}).pretty?ua:encodeURIComponent,s=0;s<e.length;s++){var l=e[s];if("string"!=typeof l){var c,u=a[l.name];if(null==u){if(l.optional){l.partial&&(o+=l.prefix);continue}throw new TypeError('Expected "'+l.name+'" to be defined')}if(na(u)){if(!l.repeat)throw new TypeError('Expected "'+l.name+'" to not repeat, but received `'+JSON.stringify(u)+"`");if(0===u.length){if(l.optional)continue;throw new TypeError('Expected "'+l.name+'" to not be empty')}for(var d=0;d<u.length;d++){if(c=r(u[d]),!n[s].test(c))throw new TypeError('Expected all "'+l.name+'" to match "'+l.pattern+'", but received `'+JSON.stringify(c)+"`");o+=(0===d?l.prefix:l.delimiter)+c}}else{if(c=l.asterisk?encodeURI(u).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):r(u),!n[s].test(c))throw new TypeError('Expected "'+l.name+'" to match "'+l.pattern+'", but received "'+c+'"');o+=l.prefix+c}}else o+=l}return o}}function ha(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function fa(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function pa(e,t){return e.keys=t,e}function ma(e){return e&&e.sensitive?"":"i"}function ga(e,t,n){na(t)||(n=t||n,t=[]);for(var i=(n=n||{}).strict,o=!1!==n.end,a="",r=0;r<e.length;r++){var s=e[r];if("string"==typeof s)a+=ha(s);else{var l=ha(s.prefix),c="(?:"+s.pattern+")";t.push(s),s.repeat&&(c+="(?:"+l+c+")*"),a+=c=s.optional?s.partial?l+"("+c+")?":"(?:"+l+"("+c+"))?":l+"("+c+")"}}var u=ha(n.delimiter||"/"),d=a.slice(-u.length)===u;return i||(a=(d?a.slice(0,-u.length):a)+"(?:"+u+"(?=$))?"),a+=o?"$":i&&d?"":"(?="+u+"|$)",pa(new RegExp("^"+a,ma(n)),t)}function ya(e,t,n){return na(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var i=0;i<n.length;i++)t.push({name:i,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return pa(e,t)}(e,t):na(e)?function(e,t,n){for(var i=[],o=0;o<e.length;o++)i.push(ya(e[o],t,n).source);return pa(new RegExp("(?:"+i.join("|")+")",ma(n)),t)}(e,t,n):function(e,t,n){return ga(ca(e,n),t,n)}(e,t,n)}ia.parse=oa,ia.compile=aa,ia.tokensToFunction=ra,ia.tokensToRegExp=sa;var va=Object.create(null);function wa(e,t,n){t=t||{};try{var i=va[e]||(va[e]=ia.compile(e));return"string"==typeof t.pathMatch&&(t[0]=t.pathMatch),i(t,{pretty:!0})}catch(e){return""}finally{delete t[0]}}function ba(e,t,n,i){var o="string"==typeof e?{path:e}:e;if(o._normalized)return o;if(o.name){var a=(o=Do({},e)).params;return a&&"object"==typeof a&&(o.params=Do({},a)),o}if(!o.path&&o.params&&t){(o=Do({},o))._normalized=!0;var r=Do(Do({},t.params),o.params);if(t.name)o.name=t.name,o.params=r;else if(t.matched.length){var s=t.matched[t.matched.length-1].path;o.path=wa(s,r,t.path)}else 0;return o}var l=function(e){var t="",n="",i=e.indexOf("#");i>=0&&(t=e.slice(i),e=e.slice(0,i));var o=e.indexOf("?");return o>=0&&(n=e.slice(o+1),e=e.slice(0,o)),{path:e,query:n,hash:t}}(o.path||""),c=t&&t.path||"/",u=l.path?ea(l.path,c,n||o.append):c,d=function(e,t,n){void 0===t&&(t={});var i,o=n||Uo;try{i=o(e||"")}catch(e){i={}}for(var a in t){var r=t[a];i[a]=Array.isArray(r)?r.map(Mo):Mo(r)}return i}(l.query,o.query,i&&i.options.parseQuery),h=o.hash||l.hash;return h&&"#"!==h.charAt(0)&&(h="#"+h),{_normalized:!0,path:u,query:d,hash:h}}var ka,xa=function(){},Aa={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},exact:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(e){var t=this,n=this.$router,i=this.$route,o=n.resolve(this.to,i,this.append),a=o.location,r=o.route,s=o.href,l={},c=n.options.linkActiveClass,u=n.options.linkExactActiveClass,d=null==c?"router-link-active":c,h=null==u?"router-link-exact-active":u,f=null==this.activeClass?d:this.activeClass,p=null==this.exactActiveClass?h:this.exactActiveClass,m=r.redirectedFrom?Fo(null,ba(r.redirectedFrom),null,n):r;l[p]=Ko(i,m),l[f]=this.exact?l[p]:function(e,t){return 0===e.path.replace($o,"/").indexOf(t.path.replace($o,"/"))&&(!t.hash||e.hash===t.hash)&&function(e,t){for(var n in t)if(!(n in e))return!1;return!0}(e.query,t.query)}(i,m);var g=l[p]?this.ariaCurrentValue:null,y=function(e){Sa(e)&&(t.replace?n.replace(a,xa):n.push(a,xa))},v={click:Sa};Array.isArray(this.event)?this.event.forEach((function(e){v[e]=y})):v[this.event]=y;var w={class:l},b=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:s,route:r,navigate:y,isActive:l[f],isExactActive:l[p]});if(b){if(1===b.length)return b[0];if(b.length>1||!b.length)return 0===b.length?e():e("span",{},b)}if("a"===this.tag)w.on=v,w.attrs={href:s,"aria-current":g};else{var k=function e(t){var n;if(t)for(var i=0;i<t.length;i++){if("a"===(n=t[i]).tag)return n;if(n.children&&(n=e(n.children)))return n}}(this.$slots.default);if(k){k.isStatic=!1;var x=k.data=Do({},k.data);for(var A in x.on=x.on||{},x.on){var S=x.on[A];A in v&&(x.on[A]=Array.isArray(S)?S:[S])}for(var j in v)j in x.on?x.on[j].push(v[j]):x.on[j]=y;var _=k.data.attrs=Do({},k.data.attrs);_.href=s,_["aria-current"]=g}else w.on=v}return e(this.tag,w,this.$slots.default)}};function Sa(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey||e.defaultPrevented||void 0!==e.button&&0!==e.button)){if(e.currentTarget&&e.currentTarget.getAttribute){var t=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(t))return}return e.preventDefault&&e.preventDefault(),!0}}var ja="undefined"!=typeof window;function _a(e,t,n,i){var o=t||[],a=n||Object.create(null),r=i||Object.create(null);e.forEach((function(e){!function e(t,n,i,o,a,r){var s=o.path,l=o.name;0;var c=o.pathToRegexpOptions||{},u=function(e,t,n){n||(e=e.replace(/\/$/,""));if("/"===e[0])return e;if(null==t)return e;return ta(t.path+"/"+e)}(s,a,c.strict);"boolean"==typeof o.caseSensitive&&(c.sensitive=o.caseSensitive);var d={path:u,regex:Ia(u,c),components:o.components||{default:o.component},instances:{},enteredCbs:{},name:l,parent:a,matchAs:r,redirect:o.redirect,beforeEnter:o.beforeEnter,meta:o.meta||{},props:null==o.props?{}:o.components?o.props:{default:o.props}};o.children&&o.children.forEach((function(o){var a=r?ta(r+"/"+o.path):void 0;e(t,n,i,o,d,a)}));n[d.path]||(t.push(d.path),n[d.path]=d);if(void 0!==o.alias)for(var h=Array.isArray(o.alias)?o.alias:[o.alias],f=0;f<h.length;++f){0;var p={path:h[f],children:o.children};e(t,n,i,p,a,d.path||"/")}l&&(i[l]||(i[l]=d))}(o,a,r,e)}));for(var s=0,l=o.length;s<l;s++)"*"===o[s]&&(o.push(o.splice(s,1)[0]),l--,s--);return{pathList:o,pathMap:a,nameMap:r}}function Ia(e,t){return ia(e,[],t)}function Pa(e,t){var n=_a(e),i=n.pathList,o=n.pathMap,a=n.nameMap;function r(e,n,r){var s=ba(e,n,!1,t),c=s.name;if(c){var u=a[c];if(!u)return l(null,s);var d=u.regex.keys.filter((function(e){return!e.optional})).map((function(e){return e.name}));if("object"!=typeof s.params&&(s.params={}),n&&"object"==typeof n.params)for(var h in n.params)!(h in s.params)&&d.indexOf(h)>-1&&(s.params[h]=n.params[h]);return s.path=wa(u.path,s.params),l(u,s,r)}if(s.path){s.params={};for(var f=0;f<i.length;f++){var p=i[f],m=o[p];if(Ta(m.regex,s.path,s.params))return l(m,s,r)}}return l(null,s)}function s(e,n){var i=e.redirect,o="function"==typeof i?i(Fo(e,n,null,t)):i;if("string"==typeof o&&(o={path:o}),!o||"object"!=typeof o)return l(null,n);var s=o,c=s.name,u=s.path,d=n.query,h=n.hash,f=n.params;if(d=s.hasOwnProperty("query")?s.query:d,h=s.hasOwnProperty("hash")?s.hash:h,f=s.hasOwnProperty("params")?s.params:f,c){a[c];return r({_normalized:!0,name:c,query:d,hash:h,params:f},void 0,n)}if(u){var p=function(e,t){return ea(e,t.parent?t.parent.path:"/",!0)}(u,e);return r({_normalized:!0,path:wa(p,f),query:d,hash:h},void 0,n)}return l(null,n)}function l(e,n,i){return e&&e.redirect?s(e,i||n):e&&e.matchAs?function(e,t,n){var i=r({_normalized:!0,path:wa(n,t.params)});if(i){var o=i.matched,a=o[o.length-1];return t.params=i.params,l(a,t)}return l(null,t)}(0,n,e.matchAs):Fo(e,n,i,t)}return{match:r,addRoutes:function(e){_a(e,i,o,a)}}}function Ta(e,t,n){try{t=decodeURI(t)}catch(e){0}var i=t.match(e);if(!i)return!1;if(!n)return!0;for(var o=1,a=i.length;o<a;++o){var r=e.keys[o-1];r&&(n[r.name||"pathMatch"]=i[o])}return!0}var za=ja&&window.performance&&window.performance.now?window.performance:Date;function Ea(){return za.now().toFixed(3)}var Ca=Ea();function La(){return Ca}function Da(e){return Ca=e}var Oa=Object.create(null);function Wa(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var e=window.location.protocol+"//"+window.location.host,t=window.location.href.replace(e,""),n=Do({},window.history.state);return n.key=La(),window.history.replaceState(n,"",t),window.addEventListener("popstate",Ha),function(){window.removeEventListener("popstate",Ha)}}function Ra(e,t,n,i){if(e.app){var o=e.options.scrollBehavior;o&&e.app.$nextTick((function(){var a=function(){var e=La();if(e)return Oa[e]}(),r=o.call(e,t,n,i?a:null);r&&("function"==typeof r.then?r.then((function(e){Fa(e,a)})).catch((function(e){0})):Fa(r,a))}))}}function Na(){var e=La();e&&(Oa[e]={x:window.pageXOffset,y:window.pageYOffset})}function Ha(e){Na(),e.state&&e.state.key&&Da(e.state.key)}function Ma(e){return qa(e.x)||qa(e.y)}function Ua(e){return{x:qa(e.x)?e.x:window.pageXOffset,y:qa(e.y)?e.y:window.pageYOffset}}function qa(e){return"number"==typeof e}var $a=/^#\d/;function Fa(e,t){var n,i="object"==typeof e;if(i&&"string"==typeof e.selector){var o=$a.test(e.selector)?document.getElementById(e.selector.slice(1)):document.querySelector(e.selector);if(o){var a=e.offset&&"object"==typeof e.offset?e.offset:{};t=function(e,t){var n=document.documentElement.getBoundingClientRect(),i=e.getBoundingClientRect();return{x:i.left-n.left-t.x,y:i.top-n.top-t.y}}(o,a={x:qa((n=a).x)?n.x:0,y:qa(n.y)?n.y:0})}else Ma(e)&&(t=Ua(e))}else i&&Ma(e)&&(t=Ua(e));t&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:t.x,top:t.y,behavior:e.behavior}):window.scrollTo(t.x,t.y))}var Ga,Ba=ja&&((-1===(Ga=window.navigator.userAgent).indexOf("Android 2.")&&-1===Ga.indexOf("Android 4.0")||-1===Ga.indexOf("Mobile Safari")||-1!==Ga.indexOf("Chrome")||-1!==Ga.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function Va(e,t){Na();var n=window.history;try{if(t){var i=Do({},n.state);i.key=La(),n.replaceState(i,"",e)}else n.pushState({key:Da(Ea())},"",e)}catch(n){window.location[t?"replace":"assign"](e)}}function Ya(e){Va(e,!0)}function Ka(e,t,n){var i=function(o){o>=e.length?n():e[o]?t(e[o],(function(){i(o+1)})):i(o+1)};i(0)}var Ja={redirected:2,aborted:4,cancelled:8,duplicated:16};function Qa(e,t){return Xa(e,t,Ja.redirected,'Redirected when going from "'+e.fullPath+'" to "'+function(e){if("string"==typeof e)return e;if("path"in e)return e.path;var t={};return er.forEach((function(n){n in e&&(t[n]=e[n])})),JSON.stringify(t,null,2)}(t)+'" via a navigation guard.')}function Za(e,t){return Xa(e,t,Ja.cancelled,'Navigation cancelled from "'+e.fullPath+'" to "'+t.fullPath+'" with a new navigation.')}function Xa(e,t,n,i){var o=new Error(i);return o._isRouter=!0,o.from=e,o.to=t,o.type=n,o}var er=["params","query","hash"];function tr(e){return Object.prototype.toString.call(e).indexOf("Error")>-1}function nr(e,t){return tr(e)&&e._isRouter&&(null==t||e.type===t)}function ir(e){return function(t,n,i){var o=!1,a=0,r=null;or(e,(function(e,t,n,s){if("function"==typeof e&&void 0===e.cid){o=!0,a++;var l,c=sr((function(t){var o;((o=t).__esModule||rr&&"Module"===o[Symbol.toStringTag])&&(t=t.default),e.resolved="function"==typeof t?t:ka.extend(t),n.components[s]=t,--a<=0&&i()})),u=sr((function(e){var t="Failed to resolve async component "+s+": "+e;r||(r=tr(e)?e:new Error(t),i(r))}));try{l=e(c,u)}catch(e){u(e)}if(l)if("function"==typeof l.then)l.then(c,u);else{var d=l.component;d&&"function"==typeof d.then&&d.then(c,u)}}})),o||i()}}function or(e,t){return ar(e.map((function(e){return Object.keys(e.components).map((function(n){return t(e.components[n],e.instances[n],e,n)}))})))}function ar(e){return Array.prototype.concat.apply([],e)}var rr="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function sr(e){var t=!1;return function(){for(var n=[],i=arguments.length;i--;)n[i]=arguments[i];if(!t)return t=!0,e.apply(this,n)}}var lr=function(e,t){this.router=e,this.base=function(e){if(!e)if(ja){var t=document.querySelector("base");e=(e=t&&t.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else e="/";"/"!==e.charAt(0)&&(e="/"+e);return e.replace(/\/$/,"")}(t),this.current=Bo,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function cr(e,t,n,i){var o=or(e,(function(e,i,o,a){var r=function(e,t){"function"!=typeof e&&(e=ka.extend(e));return e.options[t]}(e,t);if(r)return Array.isArray(r)?r.map((function(e){return n(e,i,o,a)})):n(r,i,o,a)}));return ar(i?o.reverse():o)}function ur(e,t){if(t)return function(){return e.apply(t,arguments)}}lr.prototype.listen=function(e){this.cb=e},lr.prototype.onReady=function(e,t){this.ready?e():(this.readyCbs.push(e),t&&this.readyErrorCbs.push(t))},lr.prototype.onError=function(e){this.errorCbs.push(e)},lr.prototype.transitionTo=function(e,t,n){var i,o=this;try{i=this.router.match(e,this.current)}catch(e){throw this.errorCbs.forEach((function(t){t(e)})),e}var a=this.current;this.confirmTransition(i,(function(){o.updateRoute(i),t&&t(i),o.ensureURL(),o.router.afterHooks.forEach((function(e){e&&e(i,a)})),o.ready||(o.ready=!0,o.readyCbs.forEach((function(e){e(i)})))}),(function(e){n&&n(e),e&&!o.ready&&(nr(e,Ja.redirected)&&a===Bo||(o.ready=!0,o.readyErrorCbs.forEach((function(t){t(e)}))))}))},lr.prototype.confirmTransition=function(e,t,n){var i=this,o=this.current;this.pending=e;var a,r,s=function(e){!nr(e)&&tr(e)&&(i.errorCbs.length?i.errorCbs.forEach((function(t){t(e)})):console.error(e)),n&&n(e)},l=e.matched.length-1,c=o.matched.length-1;if(Ko(e,o)&&l===c&&e.matched[l]===o.matched[c])return this.ensureURL(),s(((r=Xa(a=o,e,Ja.duplicated,'Avoided redundant navigation to current location: "'+a.fullPath+'".')).name="NavigationDuplicated",r));var u=function(e,t){var n,i=Math.max(e.length,t.length);for(n=0;n<i&&e[n]===t[n];n++);return{updated:t.slice(0,n),activated:t.slice(n),deactivated:e.slice(n)}}(this.current.matched,e.matched),d=u.updated,h=u.deactivated,f=u.activated,p=[].concat(function(e){return cr(e,"beforeRouteLeave",ur,!0)}(h),this.router.beforeHooks,function(e){return cr(e,"beforeRouteUpdate",ur)}(d),f.map((function(e){return e.beforeEnter})),ir(f)),m=function(t,n){if(i.pending!==e)return s(Za(o,e));try{t(e,o,(function(t){!1===t?(i.ensureURL(!0),s(function(e,t){return Xa(e,t,Ja.aborted,'Navigation aborted from "'+e.fullPath+'" to "'+t.fullPath+'" via a navigation guard.')}(o,e))):tr(t)?(i.ensureURL(!0),s(t)):"string"==typeof t||"object"==typeof t&&("string"==typeof t.path||"string"==typeof t.name)?(s(Qa(o,e)),"object"==typeof t&&t.replace?i.replace(t):i.push(t)):n(t)}))}catch(e){s(e)}};Ka(p,m,(function(){Ka(function(e){return cr(e,"beforeRouteEnter",(function(e,t,n,i){return function(e,t,n){return function(i,o,a){return e(i,o,(function(e){"function"==typeof e&&(t.enteredCbs[n]||(t.enteredCbs[n]=[]),t.enteredCbs[n].push(e)),a(e)}))}}(e,n,i)}))}(f).concat(i.router.resolveHooks),m,(function(){if(i.pending!==e)return s(Za(o,e));i.pending=null,t(e),i.router.app&&i.router.app.$nextTick((function(){Qo(e)}))}))}))},lr.prototype.updateRoute=function(e){this.current=e,this.cb&&this.cb(e)},lr.prototype.setupListeners=function(){},lr.prototype.teardown=function(){this.listeners.forEach((function(e){e()})),this.listeners=[],this.current=Bo,this.pending=null};var dr=function(e){function t(t,n){e.call(this,t,n),this._startLocation=hr(this.base)}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router,n=t.options.scrollBehavior,i=Ba&&n;i&&this.listeners.push(Wa());var o=function(){var n=e.current,o=hr(e.base);e.current===Bo&&o===e._startLocation||e.transitionTo(o,(function(e){i&&Ra(t,e,n,!0)}))};window.addEventListener("popstate",o),this.listeners.push((function(){window.removeEventListener("popstate",o)}))}},t.prototype.go=function(e){window.history.go(e)},t.prototype.push=function(e,t,n){var i=this,o=this.current;this.transitionTo(e,(function(e){Va(ta(i.base+e.fullPath)),Ra(i.router,e,o,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var i=this,o=this.current;this.transitionTo(e,(function(e){Ya(ta(i.base+e.fullPath)),Ra(i.router,e,o,!1),t&&t(e)}),n)},t.prototype.ensureURL=function(e){if(hr(this.base)!==this.current.fullPath){var t=ta(this.base+this.current.fullPath);e?Va(t):Ya(t)}},t.prototype.getCurrentLocation=function(){return hr(this.base)},t}(lr);function hr(e){var t=window.location.pathname;return e&&0===t.toLowerCase().indexOf(e.toLowerCase())&&(t=t.slice(e.length)),(t||"/")+window.location.search+window.location.hash}var fr=function(e){function t(t,n,i){e.call(this,t,n),i&&function(e){var t=hr(e);if(!/^\/#/.test(t))return window.location.replace(ta(e+"/#"+t)),!0}(this.base)||pr()}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router.options.scrollBehavior,n=Ba&&t;n&&this.listeners.push(Wa());var i=function(){var t=e.current;pr()&&e.transitionTo(mr(),(function(i){n&&Ra(e.router,i,t,!0),Ba||vr(i.fullPath)}))},o=Ba?"popstate":"hashchange";window.addEventListener(o,i),this.listeners.push((function(){window.removeEventListener(o,i)}))}},t.prototype.push=function(e,t,n){var i=this,o=this.current;this.transitionTo(e,(function(e){yr(e.fullPath),Ra(i.router,e,o,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var i=this,o=this.current;this.transitionTo(e,(function(e){vr(e.fullPath),Ra(i.router,e,o,!1),t&&t(e)}),n)},t.prototype.go=function(e){window.history.go(e)},t.prototype.ensureURL=function(e){var t=this.current.fullPath;mr()!==t&&(e?yr(t):vr(t))},t.prototype.getCurrentLocation=function(){return mr()},t}(lr);function pr(){var e=mr();return"/"===e.charAt(0)||(vr("/"+e),!1)}function mr(){var e=window.location.href,t=e.indexOf("#");return t<0?"":e=e.slice(t+1)}function gr(e){var t=window.location.href,n=t.indexOf("#");return(n>=0?t.slice(0,n):t)+"#"+e}function yr(e){Ba?Va(gr(e)):window.location.hash=e}function vr(e){Ba?Ya(gr(e)):window.location.replace(gr(e))}var wr=function(e){function t(t,n){e.call(this,t,n),this.stack=[],this.index=-1}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.push=function(e,t,n){var i=this;this.transitionTo(e,(function(e){i.stack=i.stack.slice(0,i.index+1).concat(e),i.index++,t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var i=this;this.transitionTo(e,(function(e){i.stack=i.stack.slice(0,i.index).concat(e),t&&t(e)}),n)},t.prototype.go=function(e){var t=this,n=this.index+e;if(!(n<0||n>=this.stack.length)){var i=this.stack[n];this.confirmTransition(i,(function(){var e=t.current;t.index=n,t.updateRoute(i),t.router.afterHooks.forEach((function(t){t&&t(i,e)}))}),(function(e){nr(e,Ja.duplicated)&&(t.index=n)}))}},t.prototype.getCurrentLocation=function(){var e=this.stack[this.stack.length-1];return e?e.fullPath:"/"},t.prototype.ensureURL=function(){},t}(lr),br=function(e){void 0===e&&(e={}),this.app=null,this.apps=[],this.options=e,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=Pa(e.routes||[],this);var t=e.mode||"hash";switch(this.fallback="history"===t&&!Ba&&!1!==e.fallback,this.fallback&&(t="hash"),ja||(t="abstract"),this.mode=t,t){case"history":this.history=new dr(this,e.base);break;case"hash":this.history=new fr(this,e.base,this.fallback);break;case"abstract":this.history=new wr(this,e.base);break;default:0}},kr={currentRoute:{configurable:!0}};function xr(e,t){return e.push(t),function(){var n=e.indexOf(t);n>-1&&e.splice(n,1)}}br.prototype.match=function(e,t,n){return this.matcher.match(e,t,n)},kr.currentRoute.get=function(){return this.history&&this.history.current},br.prototype.init=function(e){var t=this;if(this.apps.push(e),e.$once("hook:destroyed",(function(){var n=t.apps.indexOf(e);n>-1&&t.apps.splice(n,1),t.app===e&&(t.app=t.apps[0]||null),t.app||t.history.teardown()})),!this.app){this.app=e;var n=this.history;if(n instanceof dr||n instanceof fr){var i=function(e){n.setupListeners(),function(e){var i=n.current,o=t.options.scrollBehavior;Ba&&o&&"fullPath"in e&&Ra(t,e,i,!1)}(e)};n.transitionTo(n.getCurrentLocation(),i,i)}n.listen((function(e){t.apps.forEach((function(t){t._route=e}))}))}},br.prototype.beforeEach=function(e){return xr(this.beforeHooks,e)},br.prototype.beforeResolve=function(e){return xr(this.resolveHooks,e)},br.prototype.afterEach=function(e){return xr(this.afterHooks,e)},br.prototype.onReady=function(e,t){this.history.onReady(e,t)},br.prototype.onError=function(e){this.history.onError(e)},br.prototype.push=function(e,t,n){var i=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){i.history.push(e,t,n)}));this.history.push(e,t,n)},br.prototype.replace=function(e,t,n){var i=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){i.history.replace(e,t,n)}));this.history.replace(e,t,n)},br.prototype.go=function(e){this.history.go(e)},br.prototype.back=function(){this.go(-1)},br.prototype.forward=function(){this.go(1)},br.prototype.getMatchedComponents=function(e){var t=e?e.matched?e:this.resolve(e).route:this.currentRoute;return t?[].concat.apply([],t.matched.map((function(e){return Object.keys(e.components).map((function(t){return e.components[t]}))}))):[]},br.prototype.resolve=function(e,t,n){var i=ba(e,t=t||this.history.current,n,this),o=this.match(i,t),a=o.redirectedFrom||o.fullPath;return{location:i,route:o,href:function(e,t,n){var i="hash"===n?"#"+t:t;return e?ta(e+"/"+i):i}(this.history.base,a,this.mode),normalizedTo:i,resolved:o}},br.prototype.addRoutes=function(e){this.matcher.addRoutes(e),this.history.current!==Bo&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(br.prototype,kr),br.install=function e(t){if(!e.installed||ka!==t){e.installed=!0,ka=t;var n=function(e){return void 0!==e},i=function(e,t){var i=e.$options._parentVnode;n(i)&&n(i=i.data)&&n(i=i.registerRouteInstance)&&i(e,t)};t.mixin({beforeCreate:function(){n(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),t.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,i(this,this)},destroyed:function(){i(this)}}),Object.defineProperty(t.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(t.prototype,"$route",{get:function(){return this._routerRoot._route}}),t.component("RouterView",Zo),t.component("RouterLink",Aa);var o=t.config.optionMergeStrategies;o.beforeRouteEnter=o.beforeRouteLeave=o.beforeRouteUpdate=o.created}},br.version="3.4.8",br.isNavigationFailure=nr,br.NavigationFailureType=Ja,ja&&window.Vue&&window.Vue.use(br);var Ar=br;n(95),n(200),n(202),n(182),n(139),n(96),n(204),n(97);function Sr(e){e.locales&&Object.keys(e.locales).forEach((function(t){e.locales[t].path=t})),Object.freeze(e)}n(175),n(142),n(26),n(176),n(44),n(48),n(58),n(83);function jr(e){return(jr="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var _r=n(36),Ir={NotFound:function(){return Promise.all([n.e(0),n.e(3)]).then(n.bind(null,390))},Layout:function(){return Promise.all([n.e(0),n.e(2)]).then(n.bind(null,389))}},Pr={"v-0681b175":function(){return n.e(7).then(n.bind(null,393))},"v-4c727654":function(){return n.e(8).then(n.bind(null,394))},"v-e0c0a552":function(){return n.e(9).then(n.bind(null,395))},"v-5a17b974":function(){return n.e(10).then(n.bind(null,396))},"v-58ced0b4":function(){return n.e(11).then(n.bind(null,397))},"v-76fb2d2b":function(){return n.e(12).then(n.bind(null,398))},"v-4c3563b4":function(){return n.e(13).then(n.bind(null,399))},"v-1991b62f":function(){return n.e(14).then(n.bind(null,400))},"v-bab27eb4":function(){return n.e(15).then(n.bind(null,401))},"v-f12c40b4":function(){return n.e(16).then(n.bind(null,402))},"v-70285a65":function(){return n.e(17).then(n.bind(null,403))},"v-f32f0cf4":function(){return n.e(18).then(n.bind(null,404))},"v-1c15c334":function(){return n.e(19).then(n.bind(null,405))},"v-08421b36":function(){return n.e(20).then(n.bind(null,406))},"v-7599ab7e":function(){return n.e(21).then(n.bind(null,407))},"v-3ca6ddb6":function(){return n.e(22).then(n.bind(null,408))},"v-bc7e3184":function(){return n.e(23).then(n.bind(null,409))},"v-1dd60934":function(){return n.e(24).then(n.bind(null,410))},"v-03cf46ac":function(){return n.e(25).then(n.bind(null,411))},"v-3ef16335":function(){return n.e(26).then(n.bind(null,412))},"v-599b782f":function(){return n.e(27).then(n.bind(null,413))},"v-4f62e6f6":function(){return n.e(28).then(n.bind(null,414))},"v-7171271a":function(){return n.e(29).then(n.bind(null,415))},"v-fa956c34":function(){return n.e(30).then(n.bind(null,416))},"v-2a00bb85":function(){return n.e(31).then(n.bind(null,417))},"v-798f791f":function(){return n.e(32).then(n.bind(null,418))},"v-46952605":function(){return n.e(33).then(n.bind(null,419))},"v-03bb25b6":function(){return n.e(34).then(n.bind(null,420))},"v-21d949f6":function(){return n.e(35).then(n.bind(null,421))},"v-41edb305":function(){return n.e(36).then(n.bind(null,422))},"v-09f1f986":function(){return n.e(37).then(n.bind(null,423))},"v-585f6345":function(){return n.e(38).then(n.bind(null,424))},"v-7e6cd7b4":function(){return n.e(39).then(n.bind(null,425))},"v-2e5d5b53":function(){return n.e(40).then(n.bind(null,426))},"v-5756d057":function(){return n.e(41).then(n.bind(null,427))},"v-910389fe":function(){return n.e(42).then(n.bind(null,428))},"v-464ee06f":function(){return n.e(43).then(n.bind(null,429))},"v-35f71965":function(){return n.e(44).then(n.bind(null,430))},"v-10d31522":function(){return n.e(45).then(n.bind(null,431))},"v-3cfb3881":function(){return n.e(46).then(n.bind(null,432))},"v-75c9dde5":function(){return n.e(47).then(n.bind(null,433))},"v-2eab9c93":function(){return n.e(48).then(n.bind(null,434))},"v-532802c5":function(){return n.e(49).then(n.bind(null,435))},"v-d63d2936":function(){return n.e(50).then(n.bind(null,436))},"v-59baa413":function(){return n.e(51).then(n.bind(null,437))},"v-08842bf3":function(){return n.e(52).then(n.bind(null,438))},"v-783892cf":function(){return n.e(53).then(n.bind(null,439))},"v-5c61de05":function(){return n.e(54).then(n.bind(null,440))},"v-0c231626":function(){return n.e(55).then(n.bind(null,441))},"v-207e9734":function(){return n.e(56).then(n.bind(null,442))},"v-592be0a9":function(){return n.e(57).then(n.bind(null,443))},"v-a7323dfc":function(){return n.e(58).then(n.bind(null,444))},"v-e860ba34":function(){return n.e(59).then(n.bind(null,445))},"v-11789505":function(){return n.e(60).then(n.bind(null,446))},"v-041f4225":function(){return n.e(61).then(n.bind(null,447))},"v-68d9036d":function(){return n.e(62).then(n.bind(null,448))},"v-8afd79b6":function(){return n.e(63).then(n.bind(null,449))},"v-5c24c47a":function(){return n.e(64).then(n.bind(null,450))},"v-6fa52ccd":function(){return n.e(65).then(n.bind(null,451))},"v-d9d86b36":function(){return n.e(66).then(n.bind(null,452))},"v-61d60636":function(){return n.e(67).then(n.bind(null,453))},"v-7851e59f":function(){return n.e(68).then(n.bind(null,454))},"v-2a8104ed":function(){return n.e(69).then(n.bind(null,455))},"v-02cf5705":function(){return n.e(70).then(n.bind(null,456))},"v-5d648005":function(){return n.e(71).then(n.bind(null,457))},"v-190fa89e":function(){return n.e(72).then(n.bind(null,458))},"v-20fa3876":function(){return n.e(73).then(n.bind(null,459))},"v-12c6cc36":function(){return n.e(74).then(n.bind(null,460))},"v-7b7aed65":function(){return n.e(75).then(n.bind(null,461))},"v-66107445":function(){return n.e(76).then(n.bind(null,462))},"v-2e109aa5":function(){return n.e(77).then(n.bind(null,463))},"v-0889ef1f":function(){return n.e(78).then(n.bind(null,464))},"v-721cf0b6":function(){return n.e(79).then(n.bind(null,465))},"v-1477b745":function(){return n.e(80).then(n.bind(null,466))},"v-a71cd67a":function(){return n.e(81).then(n.bind(null,467))},"v-88c0dfb6":function(){return n.e(82).then(n.bind(null,468))},"v-e13174ee":function(){return n.e(83).then(n.bind(null,469))},"v-00da6733":function(){return n.e(84).then(n.bind(null,470))},"v-5c179825":function(){return n.e(85).then(n.bind(null,471))},"v-e5811fb6":function(){return n.e(86).then(n.bind(null,472))},"v-55e645a5":function(){return n.e(87).then(n.bind(null,473))},"v-2aedfd5d":function(){return n.e(88).then(n.bind(null,474))},"v-36a43626":function(){return n.e(89).then(n.bind(null,475))},"v-3b1acf32":function(){return n.e(90).then(n.bind(null,476))},"v-8f2e0e76":function(){return n.e(91).then(n.bind(null,477))}};function Tr(e){var t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}var zr=/-(\w)/g,Er=Tr((function(e){return e.replace(zr,(function(e,t){return t?t.toUpperCase():""}))})),Cr=/\B([A-Z])/g,Lr=Tr((function(e){return e.replace(Cr,"-$1").toLowerCase()})),Dr=Tr((function(e){return e.charAt(0).toUpperCase()+e.slice(1)}));function Or(e,t){if(t)return e(t)?e(t):t.includes("-")?e(Dr(Er(t))):e(Dr(t))||e(Lr(t))}var Wr=Object.assign({},Ir,Pr),Rr=function(e){return Wr[e]},Nr=function(e){return Pr[e]},Hr=function(e){return Ir[e]},Mr=function(e){return Lo.component(e)};function Ur(e){return Or(Nr,e)}function qr(e){return Or(Hr,e)}function $r(e){return Or(Rr,e)}function Fr(e){return Or(Mr,e)}function Gr(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Promise.all(t.filter((function(e){return e})).map(function(){var e=Object(i.a)(regeneratorRuntime.mark((function e(t){var n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(Fr(t)||!$r(t)){e.next=5;break}return e.next=3,$r(t)();case 3:n=e.sent,Lo.component(t,n.default);case 5:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()))}function Br(e,t){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[e]=t)}n(102),n(67),n(94);var Vr=n(64);function Yr(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],i=!0,o=!1,a=void 0;try{for(var r,s=e[Symbol.iterator]();!(i=(r=s.next()).done)&&(n.push(r.value),!t||n.length!==t);i=!0);}catch(e){o=!0,a=e}finally{try{i||null==s.return||s.return()}finally{if(o)throw a}}return n}}(e,t)||Object(Vr.a)(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}var Kr=n(171),Jr=n.n(Kr),Qr={created:function(){if(this.siteMeta=this.$site.headTags.filter((function(e){return"meta"===Yr(e,1)[0]})).map((function(e){var t=Yr(e,2);t[0];return t[1]})),this.$ssrContext){var e=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(t=e)?t.map((function(e){var t="<meta";return Object.keys(e).forEach((function(n){t+=" ".concat(n,'="').concat(e[n],'"')})),t+">"})).join("\n    "):""}var t},mounted:function(){this.currentMetaTags=Object(_r.a)(document.querySelectorAll("meta")),this.updateMeta()},methods:{updateMeta:function(){document.title=this.$title,document.documentElement.lang=this.$lang;var e=this.getMergedMetaTags();this.currentMetaTags=Zr(e,this.currentMetaTags)},getMergedMetaTags:function(){var e=this.$page.frontmatter.meta||[];return Jr()([{name:"description",content:this.$description}],e,this.siteMeta,Xr)}},watch:{$page:function(){this.updateMeta()}},beforeDestroy:function(){Zr(null,this.currentMetaTags)}};function Zr(e,t){if(t&&Object(_r.a)(t).filter((function(e){return e.parentNode===document.head})).forEach((function(e){return document.head.removeChild(e)})),e)return e.map((function(e){var t=document.createElement("meta");return Object.keys(e).forEach((function(n){t.setAttribute(n,e[n])})),document.head.appendChild(t),t}))}function Xr(e){for(var t=0,n=["name","property","itemprop"];t<n.length;t++){var i=n[t];if(e.hasOwnProperty(i))return e[i]+i}return JSON.stringify(e)}n(174);var es=n(172),ts={mounted:function(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:n.n(es)()((function(){this.setActiveHash()}),300),setActiveHash:function(){for(var e=this,t=[].slice.call(document.querySelectorAll(".sidebar-link")),n=[].slice.call(document.querySelectorAll(".header-anchor")).filter((function(e){return t.some((function(t){return t.hash===e.hash}))})),i=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),o=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),a=window.innerHeight+i,r=0;r<n.length;r++){var s=n[r],l=n[r+1],c=0===r&&0===i||i>=s.parentElement.offsetTop+10&&(!l||i<l.parentElement.offsetTop-10),u=decodeURIComponent(this.$route.hash);if(c&&u!==decodeURIComponent(s.hash)){var d=s;if(a===o)for(var h=r+1;h<n.length;h++)if(u===decodeURIComponent(n[h].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(d.hash),(function(){e.$nextTick((function(){e.$vuepress.$set("disableScrollBehavior",!1)}))}))}}}},beforeDestroy:function(){window.removeEventListener("scroll",this.onScroll)}},ns=(n(84),n(65)),is=n.n(ns),os={mounted:function(){var e=this;is.a.configure({showSpinner:!1}),this.$router.beforeEach((function(e,t,n){e.path===t.path||Lo.component(e.name)||is.a.start(),n()})),this.$router.afterEach((function(){is.a.done(),e.isSidebarOpen=!1}))}},as=n(173),rs=n.n(as),ss=[Qr,ts,os,{mounted:function(){rs.a.polyfill()}}],ls={name:"GlobalLayout",computed:{layout:function(){var e=this.getLayout();return Br("layout",e),Lo.component(e)}},methods:{getLayout:function(){if(this.$page.path){var e=this.$page.frontmatter.layout;return e&&(this.$vuepress.getLayoutAsyncComponent(e)||this.$vuepress.getVueComponent(e))?e:"Layout"}return"NotFound"}}},cs=n(18),us=Object(cs.a)(ls,(function(){var e=this.$createElement;return(this._self._c||e)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(e,t,n){var i;switch(t){case"components":e[t]||(e[t]={}),Object.assign(e[t],n);break;case"mixins":e[t]||(e[t]=[]),(i=e[t]).push.apply(i,Object(_r.a)(n));break;default:throw new Error("Unknown option name.")}}(us,"mixins",ss);var ds=[{name:"v-0681b175",path:"/GLOSSARY.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-0681b175").then(n)}},{name:"v-4c727654",path:"/",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-4c727654").then(n)}},{path:"/index.html",redirect:"/"},{name:"v-e0c0a552",path:"/about-alice/GLOSSARY.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-e0c0a552").then(n)}},{name:"v-5a17b974",path:"/about-alice/",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-5a17b974").then(n)}},{path:"/about-alice/index.html",redirect:"/about-alice/"},{name:"v-58ced0b4",path:"/community-made/",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-58ced0b4").then(n)}},{path:"/community-made/index.html",redirect:"/community-made/"},{name:"v-76fb2d2b",path:"/community-made/getting-started-pycharm.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-76fb2d2b").then(n)}},{name:"v-4c3563b4",path:"/contribute/",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-4c3563b4").then(n)}},{path:"/contribute/index.html",redirect:"/contribute/"},{name:"v-1991b62f",path:"/contribute/code-guidelines.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-1991b62f").then(n)}},{name:"v-bab27eb4",path:"/core-development/",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-bab27eb4").then(n)}},{path:"/core-development/index.html",redirect:"/core-development/"},{name:"v-f12c40b4",path:"/de/",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-f12c40b4").then(n)}},{path:"/de/index.html",redirect:"/de/"},{name:"v-70285a65",path:"/de/about-alice/GLOSSARY.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-70285a65").then(n)}},{name:"v-f32f0cf4",path:"/de/about-alice/",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-f32f0cf4").then(n)}},{path:"/de/about-alice/index.html",redirect:"/de/about-alice/"},{name:"v-1c15c334",path:"/de/community-made/",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-1c15c334").then(n)}},{path:"/de/community-made/index.html",redirect:"/de/community-made/"},{name:"v-08421b36",path:"/de/community-made/getting-started-pycharm.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-08421b36").then(n)}},{name:"v-7599ab7e",path:"/de/contribute/",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-7599ab7e").then(n)}},{path:"/de/contribute/index.html",redirect:"/de/contribute/"},{name:"v-3ca6ddb6",path:"/de/contribute/code-guidelines.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-3ca6ddb6").then(n)}},{name:"v-bc7e3184",path:"/de/core-development/",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-bc7e3184").then(n)}},{path:"/de/core-development/index.html",redirect:"/de/core-development/"},{name:"v-1dd60934",path:"/de/links/",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-1dd60934").then(n)}},{path:"/de/links/index.html",redirect:"/de/links/"},{name:"v-03cf46ac",path:"/de/satsetup/",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-03cf46ac").then(n)}},{path:"/de/satsetup/index.html",redirect:"/de/satsetup/"},{name:"v-3ef16335",path:"/de/satsetup/manual-install.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-3ef16335").then(n)}},{name:"v-599b782f",path:"/de/satsetup/preinstalled.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-599b782f").then(n)}},{name:"v-4f62e6f6",path:"/de/satsetup/troubleshooting.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-4f62e6f6").then(n)}},{name:"v-7171271a",path:"/de/satsetup/updateToA2.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-7171271a").then(n)}},{name:"v-fa956c34",path:"/de/setup/",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-fa956c34").then(n)}},{path:"/de/setup/index.html",redirect:"/de/setup/"},{name:"v-2a00bb85",path:"/de/setup/docker.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-2a00bb85").then(n)}},{name:"v-798f791f",path:"/de/setup/image-install.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-798f791f").then(n)}},{name:"v-46952605",path:"/de/setup/manual-install.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-46952605").then(n)}},{name:"v-03bb25b6",path:"/de/setup/preinstalled.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-03bb25b6").then(n)}},{name:"v-21d949f6",path:"/de/setup/requirements.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-21d949f6").then(n)}},{name:"v-41edb305",path:"/de/setup/room-configuration.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-41edb305").then(n)}},{name:"v-09f1f986",path:"/de/setup/troubleshooting.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-09f1f986").then(n)}},{name:"v-585f6345",path:"/de/setup/wakeword.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-585f6345").then(n)}},{name:"v-7e6cd7b4",path:"/de/skill-development/",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-7e6cd7b4").then(n)}},{path:"/de/skill-development/index.html",redirect:"/de/skill-development/"},{name:"v-2e5d5b53",path:"/de/skill-development/builtin-intents.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-2e5d5b53").then(n)}},{name:"v-5756d057",path:"/de/skill-development/builtin-slots.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-5756d057").then(n)}},{name:"v-910389fe",path:"/de/skill-development/database-access.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-910389fe").then(n)}},{name:"v-464ee06f",path:"/de/skill-development/dialog-template.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-464ee06f").then(n)}},{name:"v-35f71965",path:"/de/skill-development/events.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-35f71965").then(n)}},{name:"v-10d31522",path:"/de/skill-development/logging.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-10d31522").then(n)}},{name:"v-3cfb3881",path:"/de/skill-development/missing-slot-info.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-3cfb3881").then(n)}},{name:"v-75c9dde5",path:"/de/skill-development/new-language-support.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-75c9dde5").then(n)}},{name:"v-2eab9c93",path:"/de/skill-development/publishing-to-skill-store.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-2eab9c93").then(n)}},{name:"v-532802c5",path:"/de/skill-development/room-configuration.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-532802c5").then(n)}},{name:"v-d63d2936",path:"/de/skill-development/skill-configuration-file.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-d63d2936").then(n)}},{name:"v-59baa413",path:"/de/skill-development/skill-download-suggestion.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-59baa413").then(n)}},{name:"v-08842bf3",path:"/de/skill-development/talk-file.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-08842bf3").then(n)}},{name:"v-783892cf",path:"/de/skill-development/widgets.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-783892cf").then(n)}},{name:"v-5c61de05",path:"/de/skill-development/your-first-skill.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-5c61de05").then(n)}},{name:"v-0c231626",path:"/de/sponsors/",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-0c231626").then(n)}},{path:"/de/sponsors/index.html",redirect:"/de/sponsors/"},{name:"v-207e9734",path:"/de/usage/",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-207e9734").then(n)}},{path:"/de/usage/index.html",redirect:"/de/usage/"},{name:"v-592be0a9",path:"/de/usage/web-interface.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-592be0a9").then(n)}},{name:"v-a7323dfc",path:"/links/",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-a7323dfc").then(n)}},{path:"/links/index.html",redirect:"/links/"},{name:"v-e860ba34",path:"/satsetup/",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-e860ba34").then(n)}},{path:"/satsetup/index.html",redirect:"/satsetup/"},{name:"v-11789505",path:"/satsetup/manual-install.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-11789505").then(n)}},{name:"v-041f4225",path:"/satsetup/preinstalled.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-041f4225").then(n)}},{name:"v-68d9036d",path:"/satsetup/troubleshooting.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-68d9036d").then(n)}},{name:"v-8afd79b6",path:"/satsetup/updateToA2.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-8afd79b6").then(n)}},{name:"v-5c24c47a",path:"/setup/",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-5c24c47a").then(n)}},{path:"/setup/index.html",redirect:"/setup/"},{name:"v-6fa52ccd",path:"/setup/docker.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-6fa52ccd").then(n)}},{name:"v-d9d86b36",path:"/setup/image-install.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-d9d86b36").then(n)}},{name:"v-61d60636",path:"/setup/manual-install.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-61d60636").then(n)}},{name:"v-7851e59f",path:"/setup/preinstalled.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-7851e59f").then(n)}},{name:"v-2a8104ed",path:"/setup/requirements.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-2a8104ed").then(n)}},{name:"v-02cf5705",path:"/setup/room-configuration.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-02cf5705").then(n)}},{name:"v-5d648005",path:"/setup/troubleshooting.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-5d648005").then(n)}},{name:"v-190fa89e",path:"/setup/wakeword.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-190fa89e").then(n)}},{name:"v-20fa3876",path:"/skill-development/",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-20fa3876").then(n)}},{path:"/skill-development/index.html",redirect:"/skill-development/"},{name:"v-12c6cc36",path:"/skill-development/builtin-intents.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-12c6cc36").then(n)}},{name:"v-7b7aed65",path:"/skill-development/builtin-slots.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-7b7aed65").then(n)}},{name:"v-66107445",path:"/skill-development/database-access.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-66107445").then(n)}},{name:"v-2e109aa5",path:"/skill-development/dialog-template.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-2e109aa5").then(n)}},{name:"v-0889ef1f",path:"/skill-development/events.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-0889ef1f").then(n)}},{name:"v-721cf0b6",path:"/skill-development/logging.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-721cf0b6").then(n)}},{name:"v-1477b745",path:"/skill-development/missing-slot-info.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-1477b745").then(n)}},{name:"v-a71cd67a",path:"/skill-development/new-language-support.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-a71cd67a").then(n)}},{name:"v-88c0dfb6",path:"/skill-development/publishing-to-skill-store.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-88c0dfb6").then(n)}},{name:"v-e13174ee",path:"/skill-development/room-configuration.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-e13174ee").then(n)}},{name:"v-00da6733",path:"/skill-development/skill-configuration-file.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-00da6733").then(n)}},{name:"v-5c179825",path:"/skill-development/skill-download-suggestion.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-5c179825").then(n)}},{name:"v-e5811fb6",path:"/skill-development/talk-file.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-e5811fb6").then(n)}},{name:"v-55e645a5",path:"/skill-development/widgets.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-55e645a5").then(n)}},{name:"v-2aedfd5d",path:"/skill-development/your-first-skill.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-2aedfd5d").then(n)}},{name:"v-36a43626",path:"/sponsors/",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-36a43626").then(n)}},{path:"/sponsors/index.html",redirect:"/sponsors/"},{name:"v-3b1acf32",path:"/usage/",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-3b1acf32").then(n)}},{path:"/usage/index.html",redirect:"/usage/"},{name:"v-8f2e0e76",path:"/usage/web-interface.html",component:us,beforeEnter:function(e,t,n){Gr("Layout","v-8f2e0e76").then(n)}},{path:"*",component:us}],hs={title:"",description:"",base:"/",headTags:[["meta",{"http-equiv":"Content-Security-Policy",content:"default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self'; base-uri 'none'; form-action 'none';"}],["link",{rel:"apple-touch-icon",sizes:"144x144",href:"/icons/favicon-152x152.png"}],["link",{rel:"icon",type:"image/png",sizes:"144x144",href:"/icons/favicon-144x144.png"}],["link",{rel:"mask-icon",href:"/icons/maskable_icon.png",color:"#000"}],["link",{rel:"manifest",href:"/manifest.json"}],["meta",{name:"referrer",content:"no-referrer"}],["meta",{name:"apple-mobile-web-app-title",content:"ProjectAlice"}],["meta",{name:"application-name",content:"ProjectAlice Docs"}],["meta",{name:"apple-mobile-web-app-capable",content:"yes"}],["meta",{name:"apple-mobile-web-app-status-bar-style",content:"black"}],["meta",{name:"msapplication-TileImage",content:"/icons/favicon-144x144.png"}],["meta",{name:"msapplication-TileColor",content:"#000"}],["meta",{name:"theme-color",content:"#000"}],["meta",{name:"viewport",content:"width=device-width, initial-scale=1"}]],pages:[{title:"Not in use",frontmatter:{title:"Not in use",terms:{hotword:"the phrase you speak to wake Alice, to make her listen to you.",wakeword:"the phrase you speak to wake Alice, to make her listen to you. Same as :hotword: but in Alice's world, the wakeword is linked to a specific user she knows and can identify.",skill:"an aptitude for Alice to do something with what you asked her, the :utterance: she captured/heard. Alice comes with 5 basic skills but more can be installed.",utterance:"a phrase spoken by the user, after saying the :hotword: or a :wakeword:.",intent:"after catching an :utterance: Alice's :NLU: turns it into an intent which represents the action the user asked her to do.",slot:"a variable in an :intent:. An :intent: can have as many slots as needed.",ASR:"Automatic Speech Recognition is a component used to capture human speech and turn it into text.",NLU:"Natural Language Understanding is a component used to extract :intent:intents: and :slot:slots: for the text detected by the :ASR:.",TTS:"Text To Speech is a component used to turn text into an audio file, a voice.",event:'An event is something that happened and Alice broadcasts to all of her managers and :skill:skills:. An event name always starts with "on". examples of events would be "onUserDetected", "onWakeup" or "onRaining".',"main-unit":"the main unit runs the heavy stuff, it's the machine on which Alice is installed.",satellite:"satellites need less resources than the :main-unit:, making them less expensive, they provide at least a microphone and speaker in your other :location:locations: to interact with Alice.",location:"is a place in space, can be a room in your house, but your house can also be a location, or your garden.",manager:"they are the core engines for Alice and all have specific tasks, from loading and managing :skill:skills: to store telemetry data.",session:"could be a synonym of 'dialog'. A session starts by a :hotword: or a :wakeword: and Alice starting to listen. The session ends by itself at the end of the dialog exchange, after as many :utterance:utterances: capture and :intent:intents: treatment as needed, or by timing out.",interface:"Alice's interface is a web server she is running internally, on device, that allows you to access many function on a graphical environment. The interface can be deactivated. By defaults, the interface runs on 'http://ALICE_IP:5000'."}},regularPath:"/GLOSSARY.html",relativePath:"GLOSSARY.md",key:"v-0681b175",path:"/GLOSSARY.html",lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:null,content:".",contentLowercase:".",charsets:{}},{title:"Home",frontmatter:{home:!0,heroImage:"/images/umbrella.png",heroText:"Project Alice",tagline:"A smart voice assistant privacy centered",actionText:"Get started →",actionLink:"/about-alice/",features:[{title:"Privacy first",details:"You keep control of your data! Nothing goes out without your consent. You can configure Alice to use internet services, but those are all off by default."},{title:"Extensible",details:"Alice comes with a minimum, but you can make her more powerful thanks to an everyday growing skill library made by the community. Even you can become a skill developer!"},{title:"Lightweight",details:"Alice runs easily on a raspberry pi 3, but if you want more power, Alice runs on other hardware thanks to the work of our community!"}],footer:"Copyright © 2014-present Laurent Chervet"},regularPath:"/",relativePath:"README.md",key:"v-4c727654",path:"/",lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:null,content:"",contentLowercase:"",charsets:{}},{title:"Glossary",frontmatter:{title:"Glossary",sidebarDepth:3,terms:{hotword:"the phrase you speak to wake Alice, to make her listen to you.",wakeword:"the phrase you speak to wake Alice, to make her listen to you. Same as :hotword: but in Alice's world, the wakeword is linked to a specific user she knows and can identify.",skill:"an aptitude for Alice to do something with what you asked her, the :utterance: she captured/heard. Alice comes with 5 basic skills but more can be installed.",utterance:"a phrase spoken by the user, after saying the :hotword: or a :wakeword:.",intent:"after catching an :utterance: Alice's :NLU: turns it into an intent which represents the action the user asked her to do.",slot:"a variable in an :intent:. An :intent: can have as many slots as needed.",ASR:"Automatic Speech Recognition is a component used to capture human speech and turn it into text.",NLU:"Natural Language Understanding is a component used to extract :intent:intents: and :slot:slots: for the text detected by the :ASR:.",TTS:"Text To Speech is a component used to turn text into an audio file, a voice.",event:'An event is something that happened and Alice broadcasts to all of her managers and :skill:skills:. An event name always starts with "on". examples of events would be "onUserDetected", "onWakeup" or "onRaining".',"main-unit":"the main unit runs the heavy stuff, it's the machine on which Alice is installed.",satellite:"satellites need less resources than the :main-unit:, making them less expensive, they provide at least a microphone and speaker in your other :location:locations: to interact with Alice.",location:"is a place in space, can be a room in your house, but your house can also be a location, or your garden.",manager:"they are the core engines for Alice and all have specific tasks, from loading and managing :skill:skills: to store telemetry data.",session:"could be a synonym of 'dialog'. A session starts by a :hotword: or a :wakeword: and Alice starting to listen. The session ends by itself at the end of the dialog exchange, after as many :utterance:utterances: capture and :intent:intents: treatment as needed, or by timing out.",interface:"Alice's interface is a web server she is running internally, on device, that allows you to access many function on a graphical environment. The interface can be deactivated. By defaults, the interface runs on 'http://ALICE_IP:5000'."}},regularPath:"/about-alice/GLOSSARY.html",relativePath:"about-alice/GLOSSARY.md",key:"v-e0c0a552",path:"/about-alice/GLOSSARY.html",headers:[{level:2,title:"Examples",slug:"examples",charIndex:13},{level:3,title:"Skills",slug:"skills",charIndex:24},{level:3,title:"Events",slug:"events",charIndex:114},{level:3,title:"Hotword example",slug:"hotword-example",charIndex:169},{level:3,title:"Wakeword example",slug:"wakeword-example",charIndex:199},{level:3,title:"Intent example",slug:"intent-example",charIndex:230},{level:3,title:"Slot example (slots are highlighted)",slug:"slot-example-slots-are-highlighted",charIndex:274},{level:3,title:"Session example",slug:"session-example",charIndex:348}],lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:"Examples Skills Events Hotword example Wakeword example Intent example Slot example (slots are highlighted) Session example",content:"# Glossary\n# Examples\n# Skills\nA complete list of skills can be found directly on your Alice's or online here.\n\n# Events\nA complete list of events can be found here.\n\n# Hotword example\nHey Snips!\n\n# Wakeword example\nHey Alice?\n\n# Intent example\nTurn the lights on please\n\n# Slot example (slots are highlighted)\nTurn on the lights in the kitchen\n\n# Session example\nHey Alice?Yes?What's the temperature outside?It's currently 19°C outside",contentLowercase:"# glossary\n# examples\n# skills\na complete list of skills can be found directly on your alice's or online here.\n\n# events\na complete list of events can be found here.\n\n# hotword example\nhey snips!\n\n# wakeword example\nhey alice?\n\n# intent example\nturn the lights on please\n\n# slot example (slots are highlighted)\nturn on the lights in the kitchen\n\n# session example\nhey alice?yes?what's the temperature outside?it's currently 19°c outside",charsets:{}},{title:"What is Project Alice",frontmatter:{title:"What is Project Alice",sidebarDepth:3},regularPath:"/about-alice/",relativePath:"about-alice/README.md",key:"v-5a17b974",path:"/about-alice/",headers:[{level:2,title:"Intro",slug:"intro",charIndex:2},{level:2,title:"Why this assistant",slug:"why-this-assistant",charIndex:641},{level:2,title:"What is needed",slug:"what-is-needed",charIndex:1889},{level:2,title:"What can Alice do?",slug:"what-can-alice-do",charIndex:2165}],lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:"Intro Why this assistant What is needed What can Alice do?",content:"# Intro\nHey Alice?Yeah?What are you?Mmmmh, well, let's see what Psycho has to say about this!Project Alice is an open source virtual assistant that can run entirely offline, respecting your privacy. You can talk to her or ask her stuff, and she'll answer you if she understood. In case she didn't understand, you can evolve her by adding new skills developed by our community. She can automate your home or give you news, wake you at morning or help you cook, you shape her the way you want!\n\nHelp Alice grow\n\nAlice is young, although in development since quite a while now. You can also be part of the adventure and help by contributing\n\n# Why this assistant\n 1. I started around 2014 to create my own assistant. It really became something when I found out about (now dead) Snip. I built Alice on top of it and decided to share it with the rest of the community. Snips died, Alice survived and Snips closed source components have been removed and coded anew for a total transparency.\n 2. I love coding. I might not be a developer, but I have this running in my blood. I started very early, at the age of 6, on Dos back then. I love challenges, that's what make me go deeper and wanting more.\n 3. The name comes from Resident Evil, so does the logo. I love the Red Queen and always wanted to have my own Red Queen at home.\n 4. This assistant is free to use for anyone and is modular enough to allow anyone to use it, with something as simple as a Raspberry Pi 3.\n 5. The concept of community made (and Alice team curated) skills allows anyone with some basic python knowledge to teach Alice about their incredible ideas and make them a reality for the community\n 6. After spending over 2 years with Snips, one thing is clear: Privacy matters. Alice can work entirely offline but can also use online services, if allowed by your settings, such as Google ASR, Amazon TTS and many others.\n\n# What is needed\n * A Raspberry Pi 3* or newer(Raspberry 4, 4GB*) and a SD card*\n * A microphone and some speaker. I recommend a Respeaker 2* (original, but more bit more expensive by Seeed Studio*) to start with.\n * A way to flash your SD card with our prefabricated image!\n\n# What can Alice do?\nMany things! But she cannot cook yet... Have a look at our ever growing community made skill collection: https://store.projectalice.io\n\n*Project Alice is a participant in the Amazon Associates Program, we earn commissions for qualified purchases over the supplied links to Amazon. By buying over these links you support Project Alice - all recommendations are real and not influenced by this! Any earnings will be used to keep running costs for Alice covered and push her to new heights!",contentLowercase:"# intro\nhey alice?yeah?what are you?mmmmh, well, let's see what psycho has to say about this!project alice is an open source virtual assistant that can run entirely offline, respecting your privacy. you can talk to her or ask her stuff, and she'll answer you if she understood. in case she didn't understand, you can evolve her by adding new skills developed by our community. she can automate your home or give you news, wake you at morning or help you cook, you shape her the way you want!\n\nhelp alice grow\n\nalice is young, although in development since quite a while now. you can also be part of the adventure and help by contributing\n\n# why this assistant\n 1. i started around 2014 to create my own assistant. it really became something when i found out about (now dead) snip. i built alice on top of it and decided to share it with the rest of the community. snips died, alice survived and snips closed source components have been removed and coded anew for a total transparency.\n 2. i love coding. i might not be a developer, but i have this running in my blood. i started very early, at the age of 6, on dos back then. i love challenges, that's what make me go deeper and wanting more.\n 3. the name comes from resident evil, so does the logo. i love the red queen and always wanted to have my own red queen at home.\n 4. this assistant is free to use for anyone and is modular enough to allow anyone to use it, with something as simple as a raspberry pi 3.\n 5. the concept of community made (and alice team curated) skills allows anyone with some basic python knowledge to teach alice about their incredible ideas and make them a reality for the community\n 6. after spending over 2 years with snips, one thing is clear: privacy matters. alice can work entirely offline but can also use online services, if allowed by your settings, such as google asr, amazon tts and many others.\n\n# what is needed\n * a raspberry pi 3* or newer(raspberry 4, 4gb*) and a sd card*\n * a microphone and some speaker. i recommend a respeaker 2* (original, but more bit more expensive by seeed studio*) to start with.\n * a way to flash your sd card with our prefabricated image!\n\n# what can alice do?\nmany things! but she cannot cook yet... have a look at our ever growing community made skill collection: https://store.projectalice.io\n\n*project alice is a participant in the amazon associates program, we earn commissions for qualified purchases over the supplied links to amazon. by buying over these links you support project alice - all recommendations are real and not influenced by this! any earnings will be used to keep running costs for alice covered and push her to new heights!",charsets:{}},{title:"Community made documentation",frontmatter:{title:"Community made documentation",sidebarDepth:3,tags:["community"]},regularPath:"/community-made/",relativePath:"community-made/README.md",key:"v-58ced0b4",path:"/community-made/",lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:null,content:"Yes, you can make documentation and ask us to merge it with the official documentation! Please refer to our documentation repository",contentLowercase:"yes, you can make documentation and ask us to merge it with the official documentation! please refer to our documentation repository",charsets:{}},{title:"Getting started with Pycharm",frontmatter:{sidebarDepth:3,title:"Getting started with Pycharm",tags:["getting started","pycharm","jetbrains","ide","ide settings","install pycharm","skill dev"]},regularPath:"/community-made/getting-started-pycharm.html",relativePath:"community-made/getting-started-pycharm.md",key:"v-76fb2d2b",path:"/community-made/getting-started-pycharm.html",headers:[{level:2,title:"Download and install Pycharm",slug:"download-and-install-pycharm",charIndex:1059},{level:2,title:"A bit about GitHub.",slug:"a-bit-about-github",charIndex:1248},{level:2,title:"Setup Pycharm directories",slug:"setup-pycharm-directories",charIndex:3383},{level:3,title:"Option 1",slug:"option-1",charIndex:3411},{level:3,title:"Option 2",slug:"option-2",charIndex:5077},{level:2,title:"Pycharm dependencies",slug:"pycharm-dependencies",charIndex:6403},{level:2,title:"Changing branches",slug:"changing-branches",charIndex:659},{level:2,title:"Quality control settings",slug:"quality-control-settings",charIndex:680},{level:2,title:"Updating your repository",slug:"updating-your-repository",charIndex:11204},{level:2,title:"Handy Alice commands when testing a :skill:",slug:"handy-alice-commands-when-testing-a",charIndex:null}],lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:"Download and install Pycharm A bit about GitHub. Setup Pycharm directories Option 1 Option 2 Pycharm dependencies Changing branches Quality control settings Updating your repository Handy Alice commands when testing a :skill:",content:'# Pycharm from Jetbrains\nHave you just started with Alice and all excited with the possibilities you could unlock by creating your own ? But uncertain where to start? Well you\'ve come to the right place. Alice is written in the Python language. The team behind Alice do most of their Python magic and more using an IDE called Pycharm. For that reason and because it\'s a great program we will focus on getting Pycharm setup for you. That way getting help in the discord will also be easier. So let\'s get started.\n\nWhat we will cover in the below!!\n\n * Where to get Pycharm\n * Basics of GitHub\n * Setting up Pycharm directories\n * Check dependencies are set\n * Changing branches\n * Quality control settings\n * Updating your repositories\n * Some handy Alice commands when skill making\n\nYes I understand there are a quite a few steps in this process but for the most of it you\'ll only have to do it once. Then you\'ll have the re assurance that you\'ve done all you can to meet the Alice code guidelines. Which by the way is something you should read as well...\n\n# Download and install Pycharm\nFirst of all lets download Pycharm, The community version is free and a great starting point. Get that from here: https://www.jetbrains.com/Pycharm/download\n\n# A bit about GitHub.\nGreat, so now Pycharm is downloaded and installed lets setup a few things to make it easier in the long run. If you haven\'t already get yourself a GitHub account. You can read about it here https://git-scm.com/book/en/v2/GitHub-Account-Setup-and-Configuration or jump straight to the signup page here: https://GitHub.com/.\n\nThe below steps aren\'t vital to code in Pycharm, but it certainly worth doing to have the version control ability and in the future push and pull to your repository.\n\nGitHub if you don\'t know, is on a basic level a storage spot for developers with a tonne of features but mainly "version control" is what you\'re going to want from it for now. GitHub once setup allows you to push and pull files between repositories without missing latest updates and writing conflicting code with other developers. That way code sharing and file changes are controlled across repositories (repo\'s for short).\n\nSo when you create a new via the Alice dev-mode and upload it to GitHub, it will initially create the required framework for the . It will then place the new in your ProjectAlice/skills/ directory on your PI and store it on GitHub as a repository. Now when you edit/modify the and ctrl + s to save it, it will save the changes ONLY to your PI and the GitHub copy will stay the same. When you feel you have the code at a point that you want to save it on GitHub as well, then in Pycharm you can click the green check mark (top right of the Pycharm screen) and "commit" the changes.\n\nCommiting the changes in simple terms, is geek talk for saving. 😃 It tells GitHub you\'ve modified code, and you want to store it on GitHub. Once commited, you then click the blue "update project" arrow (or ctrl + shift + k also called push which does similar). Pycharm will then "push" your commit (modified files) to your GitHub repo. By pushing to origin, you will now have a backup of your files on GitHub which at a later stage you can share with who ever or create a "pull request" (PR) to the ProjectAlice team, so the can be reviewed for merging/adding in the Alice store so everyone can enjoy using it.\n\n# Setup Pycharm directories\n# Option 1\nThis option is a safe way to start out with Pycharm it also gets you familiar with GitHub version control.\n\n Warning Unless you use Pycharm professional, going with this option will mean you either have to copy your folder to Alice each time you want to test something. Alternatively push the updates to your repository, and then on your Pi.\n\ncd ProjectAlice/skills/<your skill name>\n\ngit pull\n\nsudo systemctl restart ProjectAlice\n\n * Sign in to GitHub. Go to ProjectAlice.\n * In the top right of that page, click on "fork" to basically clone a copy of ProjectAlice to your own GitHub account.\n * Now create a folder on your Desktop somewhere. Let\'s say for now it\'s going to be Documents/GitHubProjectAlice for example.\n * Now open Pycharm\n * In the menu along the top of Pycharm click on "VCS" then "get from version control"\n\n * In the window that opens click on "GitHub" from the menu on the left. You should see in the list that appears your ProjectAlice fork you just forked.\n * Click that and direct it to the "Documents/GitHubProjectAlice" folder you just created.\n * Make the path -> Documents/GitHubProjectAlice/ProjectAlice so that it clones into a folder called ProjectAlice.\n * When Pycharm pops up a window choose "this window".\n\nThen once done click VCS again and then "get from version control" then "GitHub " again and select your . Make the path now go to Documents/GitHubProjectAlice/skills/ .... when asked by Pycharm choose "attach".\n\nNow you should have Pycharm displaying ProjectAlice and all her files and your showing up in the ProjectAlice/skills directory. (note this is all local files and nothing to do with your Pi for now)\n\n# Option 2\nAuto login to your pi and setup a sshfs connection to trick Pycharm\n\nThis below optional method will allow you to load your PI\'s ProjectAlice files directly into Pycharm. Therefore, allowing you to modify the files on your PI directly. However, this raises the chances of you breaking Alice so only recommended once you feel a little more comfortable with how things work.\n\n 1. Follow these steps https://www.tecmint.com/ssh-passwordless-login-using-ssh-keygen-in-5-easy-steps/ to set up auto login to your pi ( no need to keep typing password)\n    \n    \n 2. Create a folder on your desktop computer in the home directory called something like "Development"\n    \n    \n 3. Then type this command on your desktop terminal >>\n    \n     * sshfs -o reconnect -o nonempty pi@192.168.1.4:/home/pi/ProjectAlice /home/bob/Development/Alice\n    \n    \n\n(obviously change the IP to your pi\'s IP and the second path to your new development folders path)\n\nWhat this will do is gain access to your PI via your windows/linux desktop by creating a folder in the Development folder and show the contents of your PI\'s\'s ProjectAlice folder. In doing so Pycharm will think the Development/Alice folder is an actual folder on your desktop and therefore in Pycharm you can now view and modify ProjectAlice files via Pycharm directly 😃\n\n# Pycharm dependencies\nNow you have the directories loaded in Pycharm. Go to Pycharm settings ( ctrl + shift + s )\n\n * Then in the menu on the left. Click "project-alice-assistant/ProjectAlice".\n * Then click "project dependencies"\n * Now click your to highlight it\n * Then put a tick in "ProjectAlice" tick box to tell Pycharm your depends on the files from the ProjectAlice files\n\n# Changing branches\nThe latest branch in Alice as of writing this is b3. You may want to set your Pycharm to B3 branch, so you stay up to date with the latest changes.\n\nIn Pycharm click your way through this\n\nVCS -> Git -> branches-> repositories ->ProjectAlice -> local branches -> 1.0.0-b3 -> checkout.\n\nThat should cause Pycharm to move to the b3 branch. You\'ll only need to do this once also unless you start playing with branches, but I don\'t advise that for now until your use to that side of things.\n\nThat should be enough for the moment to get Pycharm setup as far as main directories go. Next we need to set up SonarCloud, sk-package, and Pycharm settings so that your code is as compatible as possible with Alice.\n\n# Quality control settings\nFirst let\'s now setup the ProjectAlice-Sk package\n\n * Fork the sk repo from SkillKit\n * In Pycharm click into "VCS" menu then "GitHub" (just like earlier)\n * Select your sk fork and download it to GitHubProjectAlice/ProjectAlice/SkPackage ( or similar)\n * Choose "attach" when prompted.\n * Now go to "run " menu in Pycharm (along top of screen)\n * Then choose "debug configuration"\n * click the + sign to make a new script.\n * Call it something like "Alice Validation "\n * Then to the right of that screen ... for the field "script path " enter the local path to the ProjectAliceSkillKit.py file\n * In the field "parameters" add\n\nvalidate --paths /home/bob/Documents/GitHubProjectAlice/ProjectAlice/skills\n\n(Change the path to suit your path to the directory.)\n\n * Put a tick in the box , "run with python console"\n * Click apply.\n\nNow when in Pycharm and you click the run icon (top right of screen) with the Alice Validation script selected, Pycharm will loop through every you have listed in the folder and do a validation on it. It will print the results out in the console of Pycharm.\n\nAs an added bonus let\'s also add the sk schema files to Pycharm so that you get instant feedback on quality of your install file and json files etc. Note that this does NOT check everything that the Sk package does, so you still need to do the above. This will just tell you if you\'ve got a syntax wrong as you modify the file.\n\n * Go to this page Schema Files\n   \n   \n * Take a look at that list. You will see different schema files for different file types. We will now go through installing just one of those types into Pycharm, and you can do all the rest on your own.\n   \n   \n * Let\'s pick on the install-schema.json file. click it to open that code then click the "Raw" button to the right.\n   \n   \n * Copy the URL\n   \n   \n * Come back to Pycharm and go to your .\n   \n   \n * Double click the install file for your to open it in the editor\n   \n   \n * Now at the very bottom right of your Pycharm do you see a "no schema" button ? click that to open the schema configuration screen.\n   \n   \n\nNote this image shows JSON ProjectAlice talks.... you\'ll likely have JSON No schema\n\n * Then click "new schema mapping"\n * For name field type in something like "Alice install"\n * For URL field paste the URL of the Raw file you just copied\n * On the right-hand side of that screen click the + to add new mapping\n * Type *.install that should now apply that schema to any of the blah.install files in the future.\n * Click Apply\n * Do the same with the other schema\'s but obviously change the mappings to something that will capture that file type like *talks/en.json should capture all talk json files of en language\n\nSecondly set up SonarCloud\n\nSonarLint (SonarCloud, sonarQube) is a great tool for making sure your code complies with Alice. It will warn you in Pycharm when you call a variable Thisis_myVariable instead of the Alice way which is thisIsMyVariable and of course many many other checks. It\'s a must have plugin so let\'s go add that now.\n\nPycharm has a Sonarcloud plugin that can check your code to make sure it is following our guidelines!\n\n * Create an account on SonarCloud\n * Contact us to add you as a dev, in order for you to generate your access token\n * Once you\'ve been added in our dev group, go to your SonarCloud profile, under security, and generate a new access token.\n * In Pycharm open your settings\n * Go to Plugins\n * Search and install SonarLint\n\n * Under Tools select SonarLint and click on the + to add a new connection\n\n * Name it ProjectAlice and choose SonarCloud, then click on next\n\n * Enter your SonarCloud token, and you\'re good to go!\n\n# Updating your repository\nLet\'s touch a little more on GitHub repos and keeping them up to date\n\nAlice is always evolving. As such the files in Alice are always changing. So that you have the latest files we want to get into the habit of pushing and pulling the Upstream repo.\n\n"Wooah back up buddy" I hear you saying.... that\'s a new word. what\'s upstream ?\n\nWell your repository as far as GitHub is concerned is called "origin". Whereas the repository you forked from is called "upstream" so in this case the upstream for your ProjectAlice files will be. https://GitHub.com/project-alice-assistant/ProjectAlice\n\nKnowing that, let\'s add that url to your Pycharm, so we can receive updates.\n\n * Click "VCS" then "Git" then "remotes"\n * You should see in the list ProjectAlice "origin"\n * Click your remote repo in this screen to highlight it\n * Now click the + sign\n * In the window that opens. For the "name" field, add "upstream" <<- has to be that nothing else will work.\n * In the url field add " https://GitHub.com/project-alice-assistant/ProjectAlice "\n * Click save\n * Now click "VCS" again and then "git" then "fetch" this will update head and branches etc\n * Next click "VCS" again then "pull"\n * In the window that opens starting from the left drop down box ....\n\n * Choose ProjectAlice\n * Choose "pull"\n * Choose "upstream"\n * Choose "b3 branch"\n * Click pull\n\nit will now "pull" all the latest changes that the Alice team have pushed recently into your local files on your computer. Pycharm is now up to date. However, your "origin" (your repo) isn\'t up to date with your Pycharms local files now. So now do a ctl+shift+k to "push" updated files to your origin repo. This process of pull and push will become second nature to you eventually. 😃\n\n# Handy Alice commands when testing a \nWhen making a you\'ll often not get it right the first time and frequently use print statements. These don\'t show in syslog. So to be able to view these statements along with being able to see clearly what\'s happening when you run Alice you may want to start her manually.\n\nTo do that:\n\nsudo systemctl stop ProjectAlice\n\ncd ProjectAlice\n\n./venv/bin/python main.py\n\nYou\'ll then get to see in the terminal any print statements you put in your code.... along with easy to read console messages and comes with colour\n\nHope that has helped. Enjoy your coding adventures.\n\nBy LazzaAU',contentLowercase:'# pycharm from jetbrains\nhave you just started with alice and all excited with the possibilities you could unlock by creating your own ? but uncertain where to start? well you\'ve come to the right place. alice is written in the python language. the team behind alice do most of their python magic and more using an ide called pycharm. for that reason and because it\'s a great program we will focus on getting pycharm setup for you. that way getting help in the discord will also be easier. so let\'s get started.\n\nwhat we will cover in the below!!\n\n * where to get pycharm\n * basics of github\n * setting up pycharm directories\n * check dependencies are set\n * changing branches\n * quality control settings\n * updating your repositories\n * some handy alice commands when skill making\n\nyes i understand there are a quite a few steps in this process but for the most of it you\'ll only have to do it once. then you\'ll have the re assurance that you\'ve done all you can to meet the alice code guidelines. which by the way is something you should read as well...\n\n# download and install pycharm\nfirst of all lets download pycharm, the community version is free and a great starting point. get that from here: https://www.jetbrains.com/pycharm/download\n\n# a bit about github.\ngreat, so now pycharm is downloaded and installed lets setup a few things to make it easier in the long run. if you haven\'t already get yourself a github account. you can read about it here https://git-scm.com/book/en/v2/github-account-setup-and-configuration or jump straight to the signup page here: https://github.com/.\n\nthe below steps aren\'t vital to code in pycharm, but it certainly worth doing to have the version control ability and in the future push and pull to your repository.\n\ngithub if you don\'t know, is on a basic level a storage spot for developers with a tonne of features but mainly "version control" is what you\'re going to want from it for now. github once setup allows you to push and pull files between repositories without missing latest updates and writing conflicting code with other developers. that way code sharing and file changes are controlled across repositories (repo\'s for short).\n\nso when you create a new via the alice dev-mode and upload it to github, it will initially create the required framework for the . it will then place the new in your projectalice/skills/ directory on your pi and store it on github as a repository. now when you edit/modify the and ctrl + s to save it, it will save the changes only to your pi and the github copy will stay the same. when you feel you have the code at a point that you want to save it on github as well, then in pycharm you can click the green check mark (top right of the pycharm screen) and "commit" the changes.\n\ncommiting the changes in simple terms, is geek talk for saving. 😃 it tells github you\'ve modified code, and you want to store it on github. once commited, you then click the blue "update project" arrow (or ctrl + shift + k also called push which does similar). pycharm will then "push" your commit (modified files) to your github repo. by pushing to origin, you will now have a backup of your files on github which at a later stage you can share with who ever or create a "pull request" (pr) to the projectalice team, so the can be reviewed for merging/adding in the alice store so everyone can enjoy using it.\n\n# setup pycharm directories\n# option 1\nthis option is a safe way to start out with pycharm it also gets you familiar with github version control.\n\n warning unless you use pycharm professional, going with this option will mean you either have to copy your folder to alice each time you want to test something. alternatively push the updates to your repository, and then on your pi.\n\ncd projectalice/skills/<your skill name>\n\ngit pull\n\nsudo systemctl restart projectalice\n\n * sign in to github. go to projectalice.\n * in the top right of that page, click on "fork" to basically clone a copy of projectalice to your own github account.\n * now create a folder on your desktop somewhere. let\'s say for now it\'s going to be documents/githubprojectalice for example.\n * now open pycharm\n * in the menu along the top of pycharm click on "vcs" then "get from version control"\n\n * in the window that opens click on "github" from the menu on the left. you should see in the list that appears your projectalice fork you just forked.\n * click that and direct it to the "documents/githubprojectalice" folder you just created.\n * make the path -> documents/githubprojectalice/projectalice so that it clones into a folder called projectalice.\n * when pycharm pops up a window choose "this window".\n\nthen once done click vcs again and then "get from version control" then "github " again and select your . make the path now go to documents/githubprojectalice/skills/ .... when asked by pycharm choose "attach".\n\nnow you should have pycharm displaying projectalice and all her files and your showing up in the projectalice/skills directory. (note this is all local files and nothing to do with your pi for now)\n\n# option 2\nauto login to your pi and setup a sshfs connection to trick pycharm\n\nthis below optional method will allow you to load your pi\'s projectalice files directly into pycharm. therefore, allowing you to modify the files on your pi directly. however, this raises the chances of you breaking alice so only recommended once you feel a little more comfortable with how things work.\n\n 1. follow these steps https://www.tecmint.com/ssh-passwordless-login-using-ssh-keygen-in-5-easy-steps/ to set up auto login to your pi ( no need to keep typing password)\n    \n    \n 2. create a folder on your desktop computer in the home directory called something like "development"\n    \n    \n 3. then type this command on your desktop terminal >>\n    \n     * sshfs -o reconnect -o nonempty pi@192.168.1.4:/home/pi/projectalice /home/bob/development/alice\n    \n    \n\n(obviously change the ip to your pi\'s ip and the second path to your new development folders path)\n\nwhat this will do is gain access to your pi via your windows/linux desktop by creating a folder in the development folder and show the contents of your pi\'s\'s projectalice folder. in doing so pycharm will think the development/alice folder is an actual folder on your desktop and therefore in pycharm you can now view and modify projectalice files via pycharm directly 😃\n\n# pycharm dependencies\nnow you have the directories loaded in pycharm. go to pycharm settings ( ctrl + shift + s )\n\n * then in the menu on the left. click "project-alice-assistant/projectalice".\n * then click "project dependencies"\n * now click your to highlight it\n * then put a tick in "projectalice" tick box to tell pycharm your depends on the files from the projectalice files\n\n# changing branches\nthe latest branch in alice as of writing this is b3. you may want to set your pycharm to b3 branch, so you stay up to date with the latest changes.\n\nin pycharm click your way through this\n\nvcs -> git -> branches-> repositories ->projectalice -> local branches -> 1.0.0-b3 -> checkout.\n\nthat should cause pycharm to move to the b3 branch. you\'ll only need to do this once also unless you start playing with branches, but i don\'t advise that for now until your use to that side of things.\n\nthat should be enough for the moment to get pycharm setup as far as main directories go. next we need to set up sonarcloud, sk-package, and pycharm settings so that your code is as compatible as possible with alice.\n\n# quality control settings\nfirst let\'s now setup the projectalice-sk package\n\n * fork the sk repo from skillkit\n * in pycharm click into "vcs" menu then "github" (just like earlier)\n * select your sk fork and download it to githubprojectalice/projectalice/skpackage ( or similar)\n * choose "attach" when prompted.\n * now go to "run " menu in pycharm (along top of screen)\n * then choose "debug configuration"\n * click the + sign to make a new script.\n * call it something like "alice validation "\n * then to the right of that screen ... for the field "script path " enter the local path to the projectaliceskillkit.py file\n * in the field "parameters" add\n\nvalidate --paths /home/bob/documents/githubprojectalice/projectalice/skills\n\n(change the path to suit your path to the directory.)\n\n * put a tick in the box , "run with python console"\n * click apply.\n\nnow when in pycharm and you click the run icon (top right of screen) with the alice validation script selected, pycharm will loop through every you have listed in the folder and do a validation on it. it will print the results out in the console of pycharm.\n\nas an added bonus let\'s also add the sk schema files to pycharm so that you get instant feedback on quality of your install file and json files etc. note that this does not check everything that the sk package does, so you still need to do the above. this will just tell you if you\'ve got a syntax wrong as you modify the file.\n\n * go to this page schema files\n   \n   \n * take a look at that list. you will see different schema files for different file types. we will now go through installing just one of those types into pycharm, and you can do all the rest on your own.\n   \n   \n * let\'s pick on the install-schema.json file. click it to open that code then click the "raw" button to the right.\n   \n   \n * copy the url\n   \n   \n * come back to pycharm and go to your .\n   \n   \n * double click the install file for your to open it in the editor\n   \n   \n * now at the very bottom right of your pycharm do you see a "no schema" button ? click that to open the schema configuration screen.\n   \n   \n\nnote this image shows json projectalice talks.... you\'ll likely have json no schema\n\n * then click "new schema mapping"\n * for name field type in something like "alice install"\n * for url field paste the url of the raw file you just copied\n * on the right-hand side of that screen click the + to add new mapping\n * type *.install that should now apply that schema to any of the blah.install files in the future.\n * click apply\n * do the same with the other schema\'s but obviously change the mappings to something that will capture that file type like *talks/en.json should capture all talk json files of en language\n\nsecondly set up sonarcloud\n\nsonarlint (sonarcloud, sonarqube) is a great tool for making sure your code complies with alice. it will warn you in pycharm when you call a variable thisis_myvariable instead of the alice way which is thisismyvariable and of course many many other checks. it\'s a must have plugin so let\'s go add that now.\n\npycharm has a sonarcloud plugin that can check your code to make sure it is following our guidelines!\n\n * create an account on sonarcloud\n * contact us to add you as a dev, in order for you to generate your access token\n * once you\'ve been added in our dev group, go to your sonarcloud profile, under security, and generate a new access token.\n * in pycharm open your settings\n * go to plugins\n * search and install sonarlint\n\n * under tools select sonarlint and click on the + to add a new connection\n\n * name it projectalice and choose sonarcloud, then click on next\n\n * enter your sonarcloud token, and you\'re good to go!\n\n# updating your repository\nlet\'s touch a little more on github repos and keeping them up to date\n\nalice is always evolving. as such the files in alice are always changing. so that you have the latest files we want to get into the habit of pushing and pulling the upstream repo.\n\n"wooah back up buddy" i hear you saying.... that\'s a new word. what\'s upstream ?\n\nwell your repository as far as github is concerned is called "origin". whereas the repository you forked from is called "upstream" so in this case the upstream for your projectalice files will be. https://github.com/project-alice-assistant/projectalice\n\nknowing that, let\'s add that url to your pycharm, so we can receive updates.\n\n * click "vcs" then "git" then "remotes"\n * you should see in the list projectalice "origin"\n * click your remote repo in this screen to highlight it\n * now click the + sign\n * in the window that opens. for the "name" field, add "upstream" <<- has to be that nothing else will work.\n * in the url field add " https://github.com/project-alice-assistant/projectalice "\n * click save\n * now click "vcs" again and then "git" then "fetch" this will update head and branches etc\n * next click "vcs" again then "pull"\n * in the window that opens starting from the left drop down box ....\n\n * choose projectalice\n * choose "pull"\n * choose "upstream"\n * choose "b3 branch"\n * click pull\n\nit will now "pull" all the latest changes that the alice team have pushed recently into your local files on your computer. pycharm is now up to date. however, your "origin" (your repo) isn\'t up to date with your pycharms local files now. so now do a ctl+shift+k to "push" updated files to your origin repo. this process of pull and push will become second nature to you eventually. 😃\n\n# handy alice commands when testing a \nwhen making a you\'ll often not get it right the first time and frequently use print statements. these don\'t show in syslog. so to be able to view these statements along with being able to see clearly what\'s happening when you run alice you may want to start her manually.\n\nto do that:\n\nsudo systemctl stop projectalice\n\ncd projectalice\n\n./venv/bin/python main.py\n\nyou\'ll then get to see in the terminal any print statements you put in your code.... along with easy to read console messages and comes with colour\n\nhope that has helped. enjoy your coding adventures.\n\nby lazzaau',charsets:{}},{title:"Contributing",frontmatter:{title:"Contributing",sidebarDepth:3},regularPath:"/contribute/",relativePath:"contribute/README.md",key:"v-4c3563b4",path:"/contribute/",headers:[{level:2,title:"Documentation",slug:"documentation",charIndex:280},{level:2,title:"Core",slug:"core",charIndex:499},{level:3,title:"Inform an Issue",slug:"inform-an-issue",charIndex:563},{level:3,title:"Core pull request Guidelines",slug:"core-pull-request-guidelines",charIndex:943},{level:2,title:"Skills",slug:"skills",charIndex:1162},{level:3,title:"New skills",slug:"new-skills",charIndex:1171},{level:3,title:"Translations",slug:"translations",charIndex:1312},{level:3,title:"Skills pull request Guidelines",slug:"skills-pull-request-guidelines",charIndex:1469},{level:2,title:"Do you like ProjectAlice?",slug:"do-you-like-projectalice",charIndex:1790},{level:3,title:"Spread the word",slug:"spread-the-word",charIndex:1818},{level:3,title:"Become a stargazer",slug:"become-a-stargazer",charIndex:1916},{level:3,title:"Stay in touch",slug:"stay-in-touch",charIndex:2028}],lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:"Documentation Core Inform an Issue Core pull request Guidelines Skills New skills Translations Skills pull request Guidelines Do you like ProjectAlice? Spread the word Become a stargazer Stay in touch",content:"# Thank you\nFirst of all, thank you for being interested in contributing to ProjectAlice. 🙏\n\nA lot of things could be improved and enriched with your collaboration no matter if you are an experienced developer or not. Below you will find just some guidelines for inspiration.\n\n# Documentation\nYou can write, translate and improve ProjectAlice's documentation. Each page has a link to its source code, so you can easily edit and send a PR if you find a typo or something that's not clear enough.\n\n# Core\nFind an open issue to tackle. New features are welcome!\n\n# Inform an Issue\n * What issues can I report?\n\nBesides reporting a bug, you can propose features, ideas, etc.\n\nYou can also open an issue if something in the documentation is not clear enough.\n\n * How to report?\n\nJust try to explain what happens and what is expected to happen . Also, it would be very useful to provide a way to reproduce the issue and logs that show the issue\n\n# Core pull request Guidelines\nReference your PR to a related issue (if one exists) and provide a description of the changes proposed. Make sure you follow the code guidelines described in the section code guidelines.\n\n# Skills\n# New skills\nNew skills are always welcome. A guide on how to create skills for Project Alice can be found in the section skill-development\n\n# Translations\nSkills need new language support, and the system can be translated to support new languages! Check our dedicated page to learn how to do it!\n\n# Skills pull request Guidelines\nReference your PR to a related issue (if one exists) and provide a description of the changes proposed. Make sure you follow the code guidelines described in the section code guidelines. To validate your skill you can use the Alice Skill Kit as described in the section alice skill kit.\n\n# Do you like ProjectAlice?\n# Spread the word\nHelp to promote the project with you friends, colleagues and the social media.\n\n# Become a stargazer\nMaybe you don't have the habit to star projects on Github, we kindly ask you to do so. 😃\n\n# Stay in touch\n * Join ProjectAlice on Discord",contentLowercase:"# thank you\nfirst of all, thank you for being interested in contributing to projectalice. 🙏\n\na lot of things could be improved and enriched with your collaboration no matter if you are an experienced developer or not. below you will find just some guidelines for inspiration.\n\n# documentation\nyou can write, translate and improve projectalice's documentation. each page has a link to its source code, so you can easily edit and send a pr if you find a typo or something that's not clear enough.\n\n# core\nfind an open issue to tackle. new features are welcome!\n\n# inform an issue\n * what issues can i report?\n\nbesides reporting a bug, you can propose features, ideas, etc.\n\nyou can also open an issue if something in the documentation is not clear enough.\n\n * how to report?\n\njust try to explain what happens and what is expected to happen . also, it would be very useful to provide a way to reproduce the issue and logs that show the issue\n\n# core pull request guidelines\nreference your pr to a related issue (if one exists) and provide a description of the changes proposed. make sure you follow the code guidelines described in the section code guidelines.\n\n# skills\n# new skills\nnew skills are always welcome. a guide on how to create skills for project alice can be found in the section skill-development\n\n# translations\nskills need new language support, and the system can be translated to support new languages! check our dedicated page to learn how to do it!\n\n# skills pull request guidelines\nreference your pr to a related issue (if one exists) and provide a description of the changes proposed. make sure you follow the code guidelines described in the section code guidelines. to validate your skill you can use the alice skill kit as described in the section alice skill kit.\n\n# do you like projectalice?\n# spread the word\nhelp to promote the project with you friends, colleagues and the social media.\n\n# become a stargazer\nmaybe you don't have the habit to star projects on github, we kindly ask you to do so. 😃\n\n# stay in touch\n * join projectalice on discord",charsets:{}},{title:"Code guidelines",frontmatter:{title:"Code guidelines",sidebarDepth:4},regularPath:"/contribute/code-guidelines.html",relativePath:"contribute/code-guidelines.md",key:"v-1991b62f",path:"/contribute/code-guidelines.html",headers:[{level:2,title:"Pycharm settings",slug:"pycharm-settings",charIndex:1139},{level:2,title:"Reformat your code",slug:"reformat-your-code",charIndex:1687},{level:2,title:"Check your code",slug:"check-your-code",charIndex:2116},{level:2,title:"Automatic code check",slug:"automatic-code-check",charIndex:2345}],lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:"Pycharm settings Reformat your code Check your code Automatic code check",content:"# Intro\n * We use tabs and not spaces for indentation\n * We prefix private class variables with an underscore\n * We prefix private methods with an underscore\n * We use camelCase for variables, not snake_case: * self._myVariableName\n   \n   \n * We use UPPER_CASE for class static vars or final vars: * LIGHT_SPEED = 299792458\n   \n   \n * We use PascalCase for class names\n * We use 2 empty lines around met is ods\n * We strong type method variables\n * We strong type method returns: * Return '-> None' is not mandatory\n   \n   \n * We speak English\n * We use properties getters and setters, not getters and setters\n * We really care for anti patterns: https://docs.quantifiedcode.com/python-anti-patterns/\n * We use fstrings and dropped the usage of .format() when possible: * print(f'Hi! my name is {name}')instead of print('My name is {}'.format(name)\n   \n   \n * Python 2 is dead\n * Init dictionaries and lists with dict() and list() and not with {} or []\n * Do never shadow a builtin var or method\n * We don't copyright the files themselves. We believe in sharing, and the main file contains authors. The project is licensed under GPLv3.\n\n# Pycharm settings\nTo make things easier, I have shared my pycharm settings under a Github repository. Simply open pycharm, click File in the top left corner and choose Settings repository and choose Overwrite local\n\nNOTE: You may have to also CTRL+ALT+s to open the settings' editor manually. Then go to the menu Version control >> GitHub and if you had a previous github account stored in here then it may get overwritten with ours. If so click that name then remove it by clicking the \" - \" then click the \" + \" and re add your Github account.\n\n# Reformat your code\nPycharm comes with a powerful inbuilt code formatter which you can use to adapt your code to our guidelines once you have linked your pycharm to our settings repository. Right click on your project and choose Reformat code. You'll be presented with a popup to choose some options:\n\nIf you don't see that reformat option on a right click then it can also be found under the menu heading code on the toolbar.\n\n# Check your code\nPycharm comes with an inbuilt code checker. Beside the \"per file\" instant check (top right corner, green tick if ok) you can run an analysis on your code by right clicking your project and choose Inspect code:\n\n# Automatic code check\nPycharm has a Sonarcloud plugin that can check your code to make sure it is following our guidelines!\n\n * Create an account on SonarCloud\n * Contact us to add you as a skill dev, in order for you to generate your access token\n * Once you've been added in our skill dev group, go to your SonarCloud profile, under security, and generate a new access token.\n * In Pycharm open your settings\n * Go to Plugins\n * Search and install SonarLint\n\n * Under Tools select SonarLint and click on the + to add a new connection\n\n * Name it ProjectAlice and choose SonarCloud, then click on next\n\n * Enter your SonarCloud token and you are good to go!",contentLowercase:"# intro\n * we use tabs and not spaces for indentation\n * we prefix private class variables with an underscore\n * we prefix private methods with an underscore\n * we use camelcase for variables, not snake_case: * self._myvariablename\n   \n   \n * we use upper_case for class static vars or final vars: * light_speed = 299792458\n   \n   \n * we use pascalcase for class names\n * we use 2 empty lines around met is ods\n * we strong type method variables\n * we strong type method returns: * return '-> none' is not mandatory\n   \n   \n * we speak english\n * we use properties getters and setters, not getters and setters\n * we really care for anti patterns: https://docs.quantifiedcode.com/python-anti-patterns/\n * we use fstrings and dropped the usage of .format() when possible: * print(f'hi! my name is {name}')instead of print('my name is {}'.format(name)\n   \n   \n * python 2 is dead\n * init dictionaries and lists with dict() and list() and not with {} or []\n * do never shadow a builtin var or method\n * we don't copyright the files themselves. we believe in sharing, and the main file contains authors. the project is licensed under gplv3.\n\n# pycharm settings\nto make things easier, i have shared my pycharm settings under a github repository. simply open pycharm, click file in the top left corner and choose settings repository and choose overwrite local\n\nnote: you may have to also ctrl+alt+s to open the settings' editor manually. then go to the menu version control >> github and if you had a previous github account stored in here then it may get overwritten with ours. if so click that name then remove it by clicking the \" - \" then click the \" + \" and re add your github account.\n\n# reformat your code\npycharm comes with a powerful inbuilt code formatter which you can use to adapt your code to our guidelines once you have linked your pycharm to our settings repository. right click on your project and choose reformat code. you'll be presented with a popup to choose some options:\n\nif you don't see that reformat option on a right click then it can also be found under the menu heading code on the toolbar.\n\n# check your code\npycharm comes with an inbuilt code checker. beside the \"per file\" instant check (top right corner, green tick if ok) you can run an analysis on your code by right clicking your project and choose inspect code:\n\n# automatic code check\npycharm has a sonarcloud plugin that can check your code to make sure it is following our guidelines!\n\n * create an account on sonarcloud\n * contact us to add you as a skill dev, in order for you to generate your access token\n * once you've been added in our skill dev group, go to your sonarcloud profile, under security, and generate a new access token.\n * in pycharm open your settings\n * go to plugins\n * search and install sonarlint\n\n * under tools select sonarlint and click on the + to add a new connection\n\n * name it projectalice and choose sonarcloud, then click on next\n\n * enter your sonarcloud token and you are good to go!",charsets:{}},{title:"Core development",frontmatter:{title:"Core development",sidebarDepth:3},regularPath:"/core-development/",relativePath:"core-development/README.md",key:"v-bab27eb4",path:"/core-development/",lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:null,content:"Getting started with PycharmCode guidelines",contentLowercase:"getting started with pycharmcode guidelines",charsets:{}},{title:"Home",frontmatter:{home:"true,",heroImage:"/images/umbrella.png",heroText:"Project Alice",tagline:"Dein smarter, auf Privatsphäre fokussierter Sprachassistent",actionText:"Los geht's →",actionLink:"/de/about-alice/",features:[{title:"Privacy first",details:"Behalte die Kontrolle über deine Daten! Nichts geht raus ohne deine Zustimmung. Du kannst Alice erlauben auch online Services zu verwenden, aber erstmal sind nur die Offline Services aktiv!"},{title:"Extensible",details:"Alice kommt nur mit dem Notwendigsten, aber du kannst sie dank der stetig wachsenden, Community basierten Skill Library zu etwas großartigen machen. Und auch du kannst selbst Skill Entwickler werden!"},{title:"Lightweight",details:"Alice läuft ohne Probleme auf einem Raspberry Pi 3, willst du ihr aber mehr Power geben, läuft sie, dank unserer Community, auch auf stärkeren Maschinen!"}],footer:"Copyright © 2014-present Laurent Chervet"},regularPath:"/de/",relativePath:"de/README.md",key:"v-f12c40b4",path:"/de/",lastUpdated:"28.10.2020, 22:37:14",headersStr:null,content:"",contentLowercase:"",charsets:{}},{title:"Glossar",frontmatter:{title:"Glossar",sidebarDepth:3,terms:{Hotword:'Das Kommando, das du verwendest um Alice aufzuwecken, damit sie dir zuhört. Zum Beispiel "Hey Snips"',Wakeword:'Das Kommando, das du verwendest um Alice aufzuwecken, damit sie dir zuhört. Eigentlich das gleiche wie :Hotword: aber in der Welt von Alice ist das Wakeword mit einem speziellen Nutzer verbunden, den sie daran identifiziert. Zum Beispiel "Hey Alice"',Skill:"Ein Programm für Alice, damit sie weiß was sie tun soll, wenn sie eine :Utterance: hört. Alice hat 5 vorinstallierte Skills, aber du kannst viele weitere herunterladen oder erstellen.",Utterance:"Ein Kommando des Nutzers das nach dem :Hotword: oder :Wakeword: folgt. Es sagt Alice welcher :Skill: mit welchen Informationen ausgeführt werden soll.",Intent:"Nachdem Alice eine :Utterance: erfasst hat, wandelt das :NLU: Modul diese in einen Intent um. Dieser repräsentiert die genaue Anfrage mit allen notwendigen Informationen",Slot:"Eine Variable in einem :Intent:. Ein :Intent: kann so viele Slots haben wir notwendig.",ASR:'"Automatic Speech Recognition", die automatische Spracherkennung ist eine Komponente zum interpretieren der Mikrofonaufnahme um diese in Text umzuwandeln.',NLU:'"Natural Language Understanding", das Verstehen natürlicher Sprache, ist die Komponente, die aus einem vom :ASR: erzeugten Fließtext :Intent:Intents: und :Slot:Slots: extrahiert.',TTS:'"Text To Speech", Text zu Sprache, ist die Komponente, welche aus dem Rückgabetext eine Audiodatei zur Sprachausgabe erstellt.',Event:'Ein Event wird ausgelöst und von Alice an alle :Manager: und :Skill:Skills: weitergeleitet. Der Name eines Events fängt immer mit "on" an. Zum Beispiel "onUserDetected", "onWakeup" oder "onRaining".',Haupteinheit:"Die Haupteinheit(main unit) verarbeitet die schweren Aufgaben, sie ist die Maschine, auf der Alice installiert wird.",Satellite:"Satelliten benötigen weniger Leistung als die :Haupteinheit:, da sie alle rechenintensiven Aufgaben zur :Haupteinheit: weiterleiten. Dadurch können sie kostengünstiger sein. Sie benötigen mindestens ein Mikrofon und einen Lautsprecher und machen damit Alice in anderen :Location:Locations: verfügbar.",Location:"Eine Location/Lokation ist ein Ort. Dabei kann es sich um einen Raum in deinem Haus handeln, das komplette Haus, den Garten, oder sogar einen virtuellen Ort ohne physisches Gegenstück.",Manager:"Sie sind das Kernstück von Alice. Jeder Manager hat eine spezifische Aufgabe, vom Laden der Konfiguration, über die Verwaltung der :Skill:Skills: bis hin zum Speichern von Telemetriedaten",Session:'Die Session kann als Synonym for einen "Dialog" verwendet werden. Eine Session startet mit dem :Hotword: oder :Wakeword: ab dem Alice dir zuhört. Die Session beendet sich entweder am Ende des Dialogs, nachdem Alice einen :Intent: erreicht hat, nach dem keine weitere Kommunikation notwendig ist, oder nachdem zu lange keine Eingabe erfolgt ist mittels "Timeout".',Interface:'Das Interface von Alice ist ein Web-Server der lokal, bei Alice auf dem Gerät läuft. Er ist sofern du dein Netzwerk nicht extra dafür auslegst NICHT aus dem Internet erreichbar. Über das Interface hast du Zugriff auf viele Funktionen in einer grafischen Oberfläche. Das Interface kann auch ausgeschaltet werden oder auf einem anderen Port laufen. Im Normalfall erreichst du das Interface über "http://ALICE_IP:5000".'}},regularPath:"/de/about-alice/GLOSSARY.html",relativePath:"de/about-alice/GLOSSARY.md",key:"v-70285a65",path:"/de/about-alice/GLOSSARY.html",headers:[{level:2,title:"Beispiele",slug:"beispiele",charIndex:12},{level:3,title:"Skills",slug:"skills",charIndex:24},{level:3,title:"Events",slug:"events",charIndex:196},{level:3,title:"Hotword Beispiel",slug:"hotword-beispiel",charIndex:257},{level:3,title:"Wakeword Beispiel",slug:"wakeword-beispiel",charIndex:288},{level:3,title:"Intent Bespiel",slug:"intent-bespiel",charIndex:320},{level:3,title:"Slot Beispiel (hervorgehoben)",slug:"slot-beispiel-hervorgehoben",charIndex:366},{level:3,title:"Session Beispiel",slug:"session-beispiel",charIndex:439}],lastUpdated:"28.10.2020, 22:37:14",headersStr:"Beispiele Skills Events Hotword Beispiel Wakeword Beispiel Intent Bespiel Slot Beispiel (hervorgehoben) Session Beispiel",content:"# Glossar\n# Beispiele\n# Skills\nEine komplette Liste aller Skills ist online verfügbar: Hier. Auch über das Interface kannst du auf alle Skills zugreiffen, die in deiner Sprache verfügbar sind.\n\n# Events\nEine komplette Liste aller Events findest du hier.\n\n# Hotword Beispiel\nHey Snips!\n\n# Wakeword Beispiel\nHey Alice?\n\n# Intent Bespiel\nSchalte bitte das Licht ein\n\n# Slot Beispiel (hervorgehoben)\nSchalte das Licht in der Küche bitte an\n\n# Session Beispiel\nHey Alice?Ja?Wie ist die Temperatur draußen?Aktuell sind es 19°C",contentLowercase:"# glossar\n# beispiele\n# skills\neine komplette liste aller skills ist online verfügbar: hier. auch über das interface kannst du auf alle skills zugreiffen, die in deiner sprache verfügbar sind.\n\n# events\neine komplette liste aller events findest du hier.\n\n# hotword beispiel\nhey snips!\n\n# wakeword beispiel\nhey alice?\n\n# intent bespiel\nschalte bitte das licht ein\n\n# slot beispiel (hervorgehoben)\nschalte das licht in der küche bitte an\n\n# session beispiel\nhey alice?ja?wie ist die temperatur draußen?aktuell sind es 19°c",charsets:{}},{title:"Was ist Project Alice",frontmatter:{title:"Was ist Project Alice",sidebarDepth:3},regularPath:"/de/about-alice/",relativePath:"de/about-alice/README.md",key:"v-f32f0cf4",path:"/de/about-alice/",headers:[{level:2,title:"Intro",slug:"intro",charIndex:2},{level:2,title:"Warum Alice?",slug:"warum-alice",charIndex:723},{level:2,title:"Was wird benötigt?",slug:"was-wird-benotigt",charIndex:2203},{level:2,title:"Was kann Alice?",slug:"was-kann-alice",charIndex:2462}],lastUpdated:"28.10.2020, 22:37:14",headersStr:"Intro Warum Alice? Was wird benötigt? Was kann Alice?",content:"# Intro\nHey Alice?Ja?Was bist du?Mmmmh, lass uns mal schauen was Psycho dazu sagt!Project Alice ist ein open source, virtueller assistant, der komplett offline läuft und deine privatsphäre respektiert. Du kannst mit ihr reden und sie alles mögliche Fragen. Sofern sie mit deiner Anfrage etwas anfangen kann, wird sie dir Helfen. Sollte sie dich mal nicht verstehen, kannst du ihr helfen indem du ihr neue Skills beibringst. Alice automatisiert dein Zuhause, bringt dir die Nachrichten, weckt dich am morgen oder hilft dir beim Kochen - Forme sie dir, genau so wie du sie brauchst!\n\nHilf Alice beim Wachsen\n\nAlice ist noch jung, auch wenn sie eine Weile in Entwicklung ist. Werde Teil von unserem Abenteuer und hilf uns.\n\n# Warum Alice?\n 1. Ich habe in 2014 angefangen meinen eigenen Assistenten zu bauen. Richtig groß ist es geworden, als ich auf Snips(abgeschaltet) gestoßen bin. Ich habe Alice auf dieser Platform aufgebaut und beschlossen sie mit dem Rest der Community zu teilen. Snips ist gestorben, Alice hat überlebt und alle closed source Komponenten von Snips wurden mittlerweile für die totale Transparenz als open source neu entwickelt.\n 2. Ich liebe Programmieren. Ich bin vielleicht kein professioneller Entwickler, aber es liegt mir im Blut. Ich habe sehr früh angefangen, im Alter von 6, als noch alles über DOS lief. Ich liebe Herausforderungen. Das ist es was mich antreibt tiefer zu gehen und immer mehr zu wollen.\n 3. Der Name kommt aus Resident Evil, das Gleiche gilt für das Logo. Ich liebe die Red Queen und wollte schon immer eine eigene zuhause haben.\n 4. Dieser Assistent ist kostenlos für jedermann und ist so modular aufgebaut, dass jeder ihn verwenden kann, angefangen mit einem einfachen Raspberry Pi 3.\n 5. Das Konzept von Community erstellten (und Alice Team verwalteten) Skills erlaubt jedem mit grundlegenden Python skills, Alice die eigenen unglaublichen Ideen beizubringen und mit der Community zu teilen.\n 6. Nach über 2 Jahren mit Snips, eines ist klar: Privacy matters. Alice kann komplett offline Arbeiten - oder aber online services Nutzen, sofern du es in den Einstellungen erlaubst. Damit sind auch Google ASR, Amazon TTS und viele andere Dienste verfügbar.\n\n# Was wird benötigt?\n * Ein Raspberry Pi 3 oder höher (Raspi 4*) so wie eine SD Karte*\n * Ein Mikrofon und ein paar Lautsprecher. Ich empfehle zum Einstieg den Respeaker 2*.\n * Ein Weg unser vorgefertigtes image oder Raspberry Os auf die SD Karte zu flashen\n\n# Was kann Alice?\nViele Dinge! Aber sie kann noch nicht kochen... Wirf einen Blick auf unsere stetig wachsenden, Community kreierte Skill Sammlung: https://store.projectalice.io\n\n* Mit einem Kauf über die angegebenen Amazon Links unterstützt du Project Alice. Die Empfehlung zu diesen Geräten ist jedoch komplett unabhängig davon. Alle Einnahmen werden transparent gehalten und dienen zunächst dazu aufgelaufene Serverkosten zu decken.",contentLowercase:"# intro\nhey alice?ja?was bist du?mmmmh, lass uns mal schauen was psycho dazu sagt!project alice ist ein open source, virtueller assistant, der komplett offline läuft und deine privatsphäre respektiert. du kannst mit ihr reden und sie alles mögliche fragen. sofern sie mit deiner anfrage etwas anfangen kann, wird sie dir helfen. sollte sie dich mal nicht verstehen, kannst du ihr helfen indem du ihr neue skills beibringst. alice automatisiert dein zuhause, bringt dir die nachrichten, weckt dich am morgen oder hilft dir beim kochen - forme sie dir, genau so wie du sie brauchst!\n\nhilf alice beim wachsen\n\nalice ist noch jung, auch wenn sie eine weile in entwicklung ist. werde teil von unserem abenteuer und hilf uns.\n\n# warum alice?\n 1. ich habe in 2014 angefangen meinen eigenen assistenten zu bauen. richtig groß ist es geworden, als ich auf snips(abgeschaltet) gestoßen bin. ich habe alice auf dieser platform aufgebaut und beschlossen sie mit dem rest der community zu teilen. snips ist gestorben, alice hat überlebt und alle closed source komponenten von snips wurden mittlerweile für die totale transparenz als open source neu entwickelt.\n 2. ich liebe programmieren. ich bin vielleicht kein professioneller entwickler, aber es liegt mir im blut. ich habe sehr früh angefangen, im alter von 6, als noch alles über dos lief. ich liebe herausforderungen. das ist es was mich antreibt tiefer zu gehen und immer mehr zu wollen.\n 3. der name kommt aus resident evil, das gleiche gilt für das logo. ich liebe die red queen und wollte schon immer eine eigene zuhause haben.\n 4. dieser assistent ist kostenlos für jedermann und ist so modular aufgebaut, dass jeder ihn verwenden kann, angefangen mit einem einfachen raspberry pi 3.\n 5. das konzept von community erstellten (und alice team verwalteten) skills erlaubt jedem mit grundlegenden python skills, alice die eigenen unglaublichen ideen beizubringen und mit der community zu teilen.\n 6. nach über 2 jahren mit snips, eines ist klar: privacy matters. alice kann komplett offline arbeiten - oder aber online services nutzen, sofern du es in den einstellungen erlaubst. damit sind auch google asr, amazon tts und viele andere dienste verfügbar.\n\n# was wird benötigt?\n * ein raspberry pi 3 oder höher (raspi 4*) so wie eine sd karte*\n * ein mikrofon und ein paar lautsprecher. ich empfehle zum einstieg den respeaker 2*.\n * ein weg unser vorgefertigtes image oder raspberry os auf die sd karte zu flashen\n\n# was kann alice?\nviele dinge! aber sie kann noch nicht kochen... wirf einen blick auf unsere stetig wachsenden, community kreierte skill sammlung: https://store.projectalice.io\n\n* mit einem kauf über die angegebenen amazon links unterstützt du project alice. die empfehlung zu diesen geräten ist jedoch komplett unabhängig davon. alle einnahmen werden transparent gehalten und dienen zunächst dazu aufgelaufene serverkosten zu decken.",charsets:{}},{title:"Getting started with Pycharm",frontmatter:{sidebarDepth:3,title:"Getting started with Pycharm",tags:["community"]},regularPath:"/de/community-made/",relativePath:"de/community-made/README.md",key:"v-1c15c334",path:"/de/community-made/",lastUpdated:"28.10.2020, 22:37:14",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",contentLowercase:"# wip\nich brauche jemanden, diese seite zu übersetzen bitte",charsets:{}},{title:"Getting started with Pycharm",frontmatter:{sidebarDepth:3,title:"Getting started with Pycharm",tags:["getting started","pycharm","jetbrains","ide","ide settings","install pycharm","skill dev"]},regularPath:"/de/community-made/getting-started-pycharm.html",relativePath:"de/community-made/getting-started-pycharm.md",key:"v-08421b36",path:"/de/community-made/getting-started-pycharm.html",headers:[{level:2,title:"Download and install Pycharm",slug:"download-and-install-pycharm",charIndex:1059},{level:2,title:"A bit about GitHub.",slug:"a-bit-about-github",charIndex:1248},{level:2,title:"Setup Pycharm directories",slug:"setup-pycharm-directories",charIndex:3397},{level:3,title:"Option 1",slug:"option-1",charIndex:3425},{level:3,title:"Option 2",slug:"option-2",charIndex:5091},{level:2,title:"Pycharm dependencies",slug:"pycharm-dependencies",charIndex:6417},{level:2,title:"Changing branches",slug:"changing-branches",charIndex:659},{level:2,title:"Quality control settings",slug:"quality-control-settings",charIndex:680},{level:2,title:"Updating your repository",slug:"updating-your-repository",charIndex:11218},{level:2,title:"Handy Alice commands when testing a :skill:",slug:"handy-alice-commands-when-testing-a",charIndex:null}],lastUpdated:"28.10.2020, 22:37:14",headersStr:"Download and install Pycharm A bit about GitHub. Setup Pycharm directories Option 1 Option 2 Pycharm dependencies Changing branches Quality control settings Updating your repository Handy Alice commands when testing a :skill:",content:'# Pycharm from Jetbrains\nHave you just started with Alice and all excited with the possibilities you could unlock by creating your own ? But uncertain where to start? Well you\'ve come to the right place. Alice is written in the Python language. The team behind Alice do most of their Python magic and more using an IDE called Pycharm. For that reason and because it\'s a great program we will focus on getting Pycharm setup for you. That way getting help in the discord will also be easier. So let\'s get started.\n\nWhat we will cover in the below!!\n\n * Where to get Pycharm\n * Basics of GitHub\n * Setting up Pycharm directories\n * Check dependencies are set\n * Changing branches\n * Quality control settings\n * Updating your repositories\n * Some handy Alice commands when skill making\n\nYes I understand there are a quite a few steps in this process but for the most of it you\'ll only have to do it once. Then you\'ll have the re assurance that you\'ve done all you can to meet the Alice code guidelines. Which by the way is something you should read as well...\n\n# Download and install Pycharm\nFirst of all lets download Pycharm, The community version is free and a great starting point. Get that from here: https://www.jetbrains.com/Pycharm/download\n\n# A bit about GitHub.\nGreat, so now Pycharm is downloaded and installed lets setup a few things to make it easier in the long run. If you haven\'t already get yourself a GitHub account. You can read about it here https://git-scm.com/book/en/v2/GitHub-Account-Setup-and-Configuration or jump straight to the signup page here: https://GitHub.com/.\n\nThe below steps aren\'t vital to code in Pycharm, but it certainly worth doing to have the version control ability and in the future push and pull to your repository.\n\nGitHub if you don\'t know, is on a basic level a storage spot for developers with a tonne of features but mainly "version control" is what you\'re going to want from it for now. GitHub once setup allows you to push and pull files between repositories without missing latest updates and writing conflicting code with other developers. That way code sharing and file changes are controlled across repositories (repo\'s for short).\n\nSo when you create a new via the Alice dev-mode and upload it to GitHub, it will initially create the required framework for the . It will then place the new in your ProjectAlice/skills/ directory on your PI and store it on GitHub as a repository. Now when you edit/modify the and ctrl + s to save it, it will save the changes ONLY to your PI and the GitHub copy will stay the same. When you feel you have the code at a point that you want to save it on GitHub as well, then in Pycharm you can click the green downwards pointing arrow (top right of the Pycharm screen) and "commit" the changes.\n\nCommiting the changes in simple terms, is geek talk for saving. 😃 It tells GitHub you\'ve modified code, and you want to store it on GitHub. Once commited, you then click the blue "update project" arrow (or ctrl + shift + k also called push which does similar). Pycharm will then "push" your commit (modified files) to your GitHub repo. By pushing to origin, you will now have a backup of your files on GitHub which at a later stage you can share with who ever or create a "pull request" (PR) to the ProjectAlice team, so the can be reviewed for merging/adding in the Alice store so everyone can enjoy using it.\n\n# Setup Pycharm directories\n# Option 1\nThis option is a safe way to start out with Pycharm it also gets you familiar with GitHub version control.\n\n Warning Unless you use Pycharm professional, going with this option will mean you either have to copy your folder to Alice each time you want to test something. Alternatively push the updates to your repository, and then on your Pi.\n\ncd ProjectAlice/skills/<your skill name>\n\ngit pull\n\nsudo systemctl restart ProjectAlice\n\n * Sign in to GitHub. Go to ProjectAlice.\n * In the top right of that page, click on "fork" to basically clone a copy of ProjectAlice to your own GitHub account.\n * Now create a folder on your Desktop somewhere. Let\'s say for now it\'s going to be Documents/GitHubProjectAlice for example.\n * Now open Pycharm\n * In the menu along the top of Pycharm click on "VCS" then "get from version control"\n\n * In the window that opens click on "GitHub" from the menu on the left. You should see in the list that appears your ProjectAlice fork you just forked.\n * Click that and direct it to the "Documents/GitHubProjectAlice" folder you just created.\n * Make the path -> Documents/GitHubProjectAlice/ProjectAlice so that it clones into a folder called ProjectAlice.\n * When Pycharm pops up a window choose "this window".\n\nThen once done click VCS again and then "get from version control" then "GitHub " again and select your . Make the path now go to Documents/GitHubProjectAlice/skills/ .... when asked by Pycharm choose "attach".\n\nNow you should have Pycharm displaying ProjectAlice and all her files and your showing up in the ProjectAlice/skills directory. (note this is all local files and nothing to do with your Pi for now)\n\n# Option 2\nAuto login to your pi and setup a sshfs connection to trick Pycharm\n\nThis below optional method will allow you to load your PI\'s ProjectAlice files directly into Pycharm. Therefore, allowing you to modify the files on your PI directly. However, this raises the chances of you breaking Alice so only recommended once you feel a little more comfortable with how things work.\n\n 1. Follow these steps https://www.tecmint.com/ssh-passwordless-login-using-ssh-keygen-in-5-easy-steps/ to set up auto login to your pi ( no need to keep typing password)\n    \n    \n 2. Create a folder on your desktop computer in the home directory called something like "Development"\n    \n    \n 3. Then type this command on your desktop terminal >>\n    \n     * sshfs -o reconnect -o nonempty pi@192.168.1.4:/home/pi/ProjectAlice /home/bob/Development/Alice\n    \n    \n\n(obviously change the IP to your pi\'s IP and the second path to your new development folders path)\n\nWhat this will do is gain access to your PI via your windows/linux desktop by creating a folder in the Development folder and show the contents of your PI\'s\'s ProjectAlice folder. In doing so Pycharm will think the Development/Alice folder is an actual folder on your desktop and therefore in Pycharm you can now view and modify ProjectAlice files via Pycharm directly 😃\n\n# Pycharm dependencies\nNow you have the directories loaded in Pycharm. Go to Pycharm settings ( ctrl + shift + s )\n\n * Then in the menu on the left. Click "project-alice-assistant/ProjectAlice".\n * Then click "project dependencies"\n * Now click your to highlight it\n * Then put a tick in "ProjectAlice" tick box to tell Pycharm your depends on the files from the ProjectAlice files\n\n# Changing branches\nThe latest branch in Alice as of writing this is b3. You may want to set your Pycharm to B3 branch, so you stay up to date with the latest changes.\n\nIn Pycharm click your way through this\n\nVCS -> Git -> branches-> repositories ->ProjectAlice -> local branches -> 1.0.0-b3 -> checkout.\n\nThat should cause Pycharm to move to the b3 branch. You\'ll only need to do this once also unless you start playing with branches, but I don\'t advise that for now until your use to that side of things.\n\nThat should be enough for the moment to get Pycharm setup as far as main directories go. Next we need to set up SonarCloud, sk-package, and Pycharm settings so that your code is as compatible as possible with Alice.\n\n# Quality control settings\nFirst let\'s now setup the ProjectAlice-Sk package\n\n * Fork the sk repo from SkillKit\n * In Pycharm click into "VCS" menu then "GitHub" (just like earlier)\n * Select your sk fork and download it to GitHubProjectAlice/ProjectAlice/SkPackage ( or similar)\n * Choose "attach" when prompted.\n * Now go to "run " menu in Pycharm (along top of screen)\n * Then choose "debug configuration"\n * click the + sign to make a new script.\n * Call it something like "Alice Validation "\n * Then to the right of that screen ... for the field "script path " enter the local path to the ProjectAliceSkillKit.py file\n * In the field "parameters" add\n\nvalidate --paths /home/bob/Documents/GitHubProjectAlice/ProjectAlice/skills\n\n(Change the path to suit your path to the directory.)\n\n * Put a tick in the box , "run with python console"\n * Click apply.\n\nNow when in Pycharm and you click the run icon (top right of screen) with the Alice Validation script selected, Pycharm will loop through every you have listed in the folder and do a validation on it. It will print the results out in the console of Pycharm.\n\nAs an added bonus let\'s also add the sk schema files to Pycharm so that you get instant feedback on quality of your install file and json files etc. Note that this does NOT check everything that the Sk package does, so you still need to do the above. This will just tell you if you\'ve got a syntax wrong as you modify the file.\n\n * Go to this page Schema Files\n   \n   \n * Take a look at that list. You will see different schema files for different file types. We will now go through installing just one of those types into Pycharm, and you can do all the rest on your own.\n   \n   \n * Let\'s pick on the install-schema.json file. click it to open that code then click the "Raw" button to the right.\n   \n   \n * Copy the URL\n   \n   \n * Come back to Pycharm and go to your .\n   \n   \n * Double click the install file for your to open it in the editor\n   \n   \n * Now at the very bottom right of your Pycharm do you see a "no schema" button ? click that to open the schema configuration screen.\n   \n   \n\nNote this image shows JSON ProjectAlice talks.... you\'ll likely have JSON No schema\n\n * Then click "new schema mapping"\n * For name field type in something like "Alice install"\n * For URL field paste the URL of the Raw file you just copied\n * On the right-hand side of that screen click the + to add new mapping\n * Type *.install that should now apply that schema to any of the blah.install files in the future.\n * Click Apply\n * Do the same with the other schema\'s but obviously change the mappings to something that will capture that file type like *talks/en.json should capture all talk json files of en language\n\nSecondly set up SonarCloud\n\nSonarLint (SonarCloud, sonarQube) is a great tool for making sure your code complies with Alice. It will warn you in Pycharm when you call a variable Thisis_myVariable instead of the Alice way which is thisIsMyVariable and of course many many other checks. It\'s a must have plugin so let\'s go add that now.\n\nPycharm has a Sonarcloud plugin that can check your code to make sure it is following our guidelines!\n\n * Create an account on SonarCloud\n * Contact us to add you as a dev, in order for you to generate your access token\n * Once you\'ve been added in our dev group, go to your SonarCloud profile, under security, and generate a new access token.\n * In Pycharm open your settings\n * Go to Plugins\n * Search and install SonarLint\n\n * Under Tools select SonarLint and click on the + to add a new connection\n\n * Name it ProjectAlice and choose SonarCloud, then click on next\n\n * Enter your SonarCloud token, and you\'re good to go!\n\n# Updating your repository\nLet\'s touch a little more on GitHub repos and keeping them up to date\n\nAlice is always evolving. As such the files in Alice are always changing. So that you have the latest files we want to get into the habit of pushing and pulling the Upstream repo.\n\n"Wooah back up buddy" I hear you saying.... that\'s a new word. what\'s upstream ?\n\nWell your repository as far as GitHub is concerned is called "origin". Whereas the repository you forked from is called "upstream" so in this case the upstream for your ProjectAlice files will be. https://GitHub.com/project-alice-assistant/ProjectAlice\n\nKnowing that, let\'s add that url to your Pycharm, so we can receive updates.\n\n * Click "VCS" then "Git" then "remotes"\n * You should see in the list ProjectAlice "origin"\n * Click your remote repo in this screen to highlight it\n * Now click the + sign\n * In the window that opens. For the "name" field, add "upstream" <<- has to be that nothing else will work.\n * In the url field add " https://GitHub.com/project-alice-assistant/ProjectAlice "\n * Click save\n * Now click "VCS" again and then "git" then "fetch" this will update head and branches etc\n * Next click "VCS" again then "pull"\n * In the window that opens starting from the left drop down box ....\n\n * Choose ProjectAlice\n * Choose "pull"\n * Choose "upstream"\n * Choose "b3 branch"\n * Click pull\n\nit will now "pull" all the latest changes that the Alice team have pushed recently into your local files on your computer. Pycharm is now up to date. However, your "origin" (your repo) isn\'t up to date with your Pycharms local files now. So now do a ctl+shift+k to "push" updated files to your origin repo. This process of pull and push will become second nature to you eventually. 😃\n\n# Handy Alice commands when testing a \nWhen making a you\'ll often not get it right the first time and frequently use print statements. These don\'t show in syslog. So to be able to view these statements along with being able to see clearly what\'s happening when you run Alice you may want to start her manually.\n\nTo do that:\n\nsudo systemctl stop ProjectAlice\n\ncd ProjectAlice\n\n./venv/bin/python main.py\n\nYou\'ll then get to see in the terminal any print statements you put in your code.... along with easy to read console messages and comes with colour\n\nHope that has helped. Enjoy your coding adventures.\n\nBy LazzaAU',contentLowercase:'# pycharm from jetbrains\nhave you just started with alice and all excited with the possibilities you could unlock by creating your own ? but uncertain where to start? well you\'ve come to the right place. alice is written in the python language. the team behind alice do most of their python magic and more using an ide called pycharm. for that reason and because it\'s a great program we will focus on getting pycharm setup for you. that way getting help in the discord will also be easier. so let\'s get started.\n\nwhat we will cover in the below!!\n\n * where to get pycharm\n * basics of github\n * setting up pycharm directories\n * check dependencies are set\n * changing branches\n * quality control settings\n * updating your repositories\n * some handy alice commands when skill making\n\nyes i understand there are a quite a few steps in this process but for the most of it you\'ll only have to do it once. then you\'ll have the re assurance that you\'ve done all you can to meet the alice code guidelines. which by the way is something you should read as well...\n\n# download and install pycharm\nfirst of all lets download pycharm, the community version is free and a great starting point. get that from here: https://www.jetbrains.com/pycharm/download\n\n# a bit about github.\ngreat, so now pycharm is downloaded and installed lets setup a few things to make it easier in the long run. if you haven\'t already get yourself a github account. you can read about it here https://git-scm.com/book/en/v2/github-account-setup-and-configuration or jump straight to the signup page here: https://github.com/.\n\nthe below steps aren\'t vital to code in pycharm, but it certainly worth doing to have the version control ability and in the future push and pull to your repository.\n\ngithub if you don\'t know, is on a basic level a storage spot for developers with a tonne of features but mainly "version control" is what you\'re going to want from it for now. github once setup allows you to push and pull files between repositories without missing latest updates and writing conflicting code with other developers. that way code sharing and file changes are controlled across repositories (repo\'s for short).\n\nso when you create a new via the alice dev-mode and upload it to github, it will initially create the required framework for the . it will then place the new in your projectalice/skills/ directory on your pi and store it on github as a repository. now when you edit/modify the and ctrl + s to save it, it will save the changes only to your pi and the github copy will stay the same. when you feel you have the code at a point that you want to save it on github as well, then in pycharm you can click the green downwards pointing arrow (top right of the pycharm screen) and "commit" the changes.\n\ncommiting the changes in simple terms, is geek talk for saving. 😃 it tells github you\'ve modified code, and you want to store it on github. once commited, you then click the blue "update project" arrow (or ctrl + shift + k also called push which does similar). pycharm will then "push" your commit (modified files) to your github repo. by pushing to origin, you will now have a backup of your files on github which at a later stage you can share with who ever or create a "pull request" (pr) to the projectalice team, so the can be reviewed for merging/adding in the alice store so everyone can enjoy using it.\n\n# setup pycharm directories\n# option 1\nthis option is a safe way to start out with pycharm it also gets you familiar with github version control.\n\n warning unless you use pycharm professional, going with this option will mean you either have to copy your folder to alice each time you want to test something. alternatively push the updates to your repository, and then on your pi.\n\ncd projectalice/skills/<your skill name>\n\ngit pull\n\nsudo systemctl restart projectalice\n\n * sign in to github. go to projectalice.\n * in the top right of that page, click on "fork" to basically clone a copy of projectalice to your own github account.\n * now create a folder on your desktop somewhere. let\'s say for now it\'s going to be documents/githubprojectalice for example.\n * now open pycharm\n * in the menu along the top of pycharm click on "vcs" then "get from version control"\n\n * in the window that opens click on "github" from the menu on the left. you should see in the list that appears your projectalice fork you just forked.\n * click that and direct it to the "documents/githubprojectalice" folder you just created.\n * make the path -> documents/githubprojectalice/projectalice so that it clones into a folder called projectalice.\n * when pycharm pops up a window choose "this window".\n\nthen once done click vcs again and then "get from version control" then "github " again and select your . make the path now go to documents/githubprojectalice/skills/ .... when asked by pycharm choose "attach".\n\nnow you should have pycharm displaying projectalice and all her files and your showing up in the projectalice/skills directory. (note this is all local files and nothing to do with your pi for now)\n\n# option 2\nauto login to your pi and setup a sshfs connection to trick pycharm\n\nthis below optional method will allow you to load your pi\'s projectalice files directly into pycharm. therefore, allowing you to modify the files on your pi directly. however, this raises the chances of you breaking alice so only recommended once you feel a little more comfortable with how things work.\n\n 1. follow these steps https://www.tecmint.com/ssh-passwordless-login-using-ssh-keygen-in-5-easy-steps/ to set up auto login to your pi ( no need to keep typing password)\n    \n    \n 2. create a folder on your desktop computer in the home directory called something like "development"\n    \n    \n 3. then type this command on your desktop terminal >>\n    \n     * sshfs -o reconnect -o nonempty pi@192.168.1.4:/home/pi/projectalice /home/bob/development/alice\n    \n    \n\n(obviously change the ip to your pi\'s ip and the second path to your new development folders path)\n\nwhat this will do is gain access to your pi via your windows/linux desktop by creating a folder in the development folder and show the contents of your pi\'s\'s projectalice folder. in doing so pycharm will think the development/alice folder is an actual folder on your desktop and therefore in pycharm you can now view and modify projectalice files via pycharm directly 😃\n\n# pycharm dependencies\nnow you have the directories loaded in pycharm. go to pycharm settings ( ctrl + shift + s )\n\n * then in the menu on the left. click "project-alice-assistant/projectalice".\n * then click "project dependencies"\n * now click your to highlight it\n * then put a tick in "projectalice" tick box to tell pycharm your depends on the files from the projectalice files\n\n# changing branches\nthe latest branch in alice as of writing this is b3. you may want to set your pycharm to b3 branch, so you stay up to date with the latest changes.\n\nin pycharm click your way through this\n\nvcs -> git -> branches-> repositories ->projectalice -> local branches -> 1.0.0-b3 -> checkout.\n\nthat should cause pycharm to move to the b3 branch. you\'ll only need to do this once also unless you start playing with branches, but i don\'t advise that for now until your use to that side of things.\n\nthat should be enough for the moment to get pycharm setup as far as main directories go. next we need to set up sonarcloud, sk-package, and pycharm settings so that your code is as compatible as possible with alice.\n\n# quality control settings\nfirst let\'s now setup the projectalice-sk package\n\n * fork the sk repo from skillkit\n * in pycharm click into "vcs" menu then "github" (just like earlier)\n * select your sk fork and download it to githubprojectalice/projectalice/skpackage ( or similar)\n * choose "attach" when prompted.\n * now go to "run " menu in pycharm (along top of screen)\n * then choose "debug configuration"\n * click the + sign to make a new script.\n * call it something like "alice validation "\n * then to the right of that screen ... for the field "script path " enter the local path to the projectaliceskillkit.py file\n * in the field "parameters" add\n\nvalidate --paths /home/bob/documents/githubprojectalice/projectalice/skills\n\n(change the path to suit your path to the directory.)\n\n * put a tick in the box , "run with python console"\n * click apply.\n\nnow when in pycharm and you click the run icon (top right of screen) with the alice validation script selected, pycharm will loop through every you have listed in the folder and do a validation on it. it will print the results out in the console of pycharm.\n\nas an added bonus let\'s also add the sk schema files to pycharm so that you get instant feedback on quality of your install file and json files etc. note that this does not check everything that the sk package does, so you still need to do the above. this will just tell you if you\'ve got a syntax wrong as you modify the file.\n\n * go to this page schema files\n   \n   \n * take a look at that list. you will see different schema files for different file types. we will now go through installing just one of those types into pycharm, and you can do all the rest on your own.\n   \n   \n * let\'s pick on the install-schema.json file. click it to open that code then click the "raw" button to the right.\n   \n   \n * copy the url\n   \n   \n * come back to pycharm and go to your .\n   \n   \n * double click the install file for your to open it in the editor\n   \n   \n * now at the very bottom right of your pycharm do you see a "no schema" button ? click that to open the schema configuration screen.\n   \n   \n\nnote this image shows json projectalice talks.... you\'ll likely have json no schema\n\n * then click "new schema mapping"\n * for name field type in something like "alice install"\n * for url field paste the url of the raw file you just copied\n * on the right-hand side of that screen click the + to add new mapping\n * type *.install that should now apply that schema to any of the blah.install files in the future.\n * click apply\n * do the same with the other schema\'s but obviously change the mappings to something that will capture that file type like *talks/en.json should capture all talk json files of en language\n\nsecondly set up sonarcloud\n\nsonarlint (sonarcloud, sonarqube) is a great tool for making sure your code complies with alice. it will warn you in pycharm when you call a variable thisis_myvariable instead of the alice way which is thisismyvariable and of course many many other checks. it\'s a must have plugin so let\'s go add that now.\n\npycharm has a sonarcloud plugin that can check your code to make sure it is following our guidelines!\n\n * create an account on sonarcloud\n * contact us to add you as a dev, in order for you to generate your access token\n * once you\'ve been added in our dev group, go to your sonarcloud profile, under security, and generate a new access token.\n * in pycharm open your settings\n * go to plugins\n * search and install sonarlint\n\n * under tools select sonarlint and click on the + to add a new connection\n\n * name it projectalice and choose sonarcloud, then click on next\n\n * enter your sonarcloud token, and you\'re good to go!\n\n# updating your repository\nlet\'s touch a little more on github repos and keeping them up to date\n\nalice is always evolving. as such the files in alice are always changing. so that you have the latest files we want to get into the habit of pushing and pulling the upstream repo.\n\n"wooah back up buddy" i hear you saying.... that\'s a new word. what\'s upstream ?\n\nwell your repository as far as github is concerned is called "origin". whereas the repository you forked from is called "upstream" so in this case the upstream for your projectalice files will be. https://github.com/project-alice-assistant/projectalice\n\nknowing that, let\'s add that url to your pycharm, so we can receive updates.\n\n * click "vcs" then "git" then "remotes"\n * you should see in the list projectalice "origin"\n * click your remote repo in this screen to highlight it\n * now click the + sign\n * in the window that opens. for the "name" field, add "upstream" <<- has to be that nothing else will work.\n * in the url field add " https://github.com/project-alice-assistant/projectalice "\n * click save\n * now click "vcs" again and then "git" then "fetch" this will update head and branches etc\n * next click "vcs" again then "pull"\n * in the window that opens starting from the left drop down box ....\n\n * choose projectalice\n * choose "pull"\n * choose "upstream"\n * choose "b3 branch"\n * click pull\n\nit will now "pull" all the latest changes that the alice team have pushed recently into your local files on your computer. pycharm is now up to date. however, your "origin" (your repo) isn\'t up to date with your pycharms local files now. so now do a ctl+shift+k to "push" updated files to your origin repo. this process of pull and push will become second nature to you eventually. 😃\n\n# handy alice commands when testing a \nwhen making a you\'ll often not get it right the first time and frequently use print statements. these don\'t show in syslog. so to be able to view these statements along with being able to see clearly what\'s happening when you run alice you may want to start her manually.\n\nto do that:\n\nsudo systemctl stop projectalice\n\ncd projectalice\n\n./venv/bin/python main.py\n\nyou\'ll then get to see in the terminal any print statements you put in your code.... along with easy to read console messages and comes with colour\n\nhope that has helped. enjoy your coding adventures.\n\nby lazzaau',charsets:{}},{title:"Contributing",frontmatter:{title:"Contributing",sidebarDepth:3},regularPath:"/de/contribute/",relativePath:"de/contribute/README.md",key:"v-7599ab7e",path:"/de/contribute/",headers:[{level:2,title:"Dokumentation",slug:"dokumentation",charIndex:315},{level:2,title:"Core",slug:"core",charIndex:661},{level:3,title:"Inform an Issue",slug:"inform-an-issue",charIndex:742},{level:3,title:"Core pull request Guidelines",slug:"core-pull-request-guidelines",charIndex:1245},{level:2,title:"Skills",slug:"skills",charIndex:1513},{level:3,title:"Neue Skills",slug:"neue-skills",charIndex:1522},{level:3,title:"Übersetzungen",slug:"ubersetzungen",charIndex:1674},{level:3,title:"Skills pull request Guidelines",slug:"skills-pull-request-guidelines",charIndex:1853},{level:2,title:"Dir gefällt ProjectAlice?",slug:"dir-gefallt-projectalice",charIndex:2251},{level:3,title:"Spread the word",slug:"spread-the-word",charIndex:2279},{level:3,title:"Become a stargazer",slug:"become-a-stargazer",charIndex:2397},{level:3,title:"Stay in touch",slug:"stay-in-touch",charIndex:2561}],lastUpdated:"28.10.2020, 22:37:14",headersStr:"Dokumentation Core Inform an Issue Core pull request Guidelines Skills Neue Skills Übersetzungen Skills pull request Guidelines Dir gefällt ProjectAlice? Spread the word Become a stargazer Stay in touch",content:"# Thank you\nZunächst einmal vielen Dank, dass du daran interessiert bist, zu ProjectAlice beizutragen. 🙏 Mit deiner Zusammenarbeit können viele Dinge verbessert und bereichert werden, unabhängig davon, ob du ein erfahrener Entwickler bist oder nicht. Im Folgenden findest du einige Richtlinien für Inspiration.\n\n# Dokumentation\nDu kannst die Anleitungen von ProjectAlice schreiben, übersetzen und verbessern. Jede Seite hat einen Link zu ihrem Quellcode, sodass du eine Kopie (Fork) einfach bearbeiten und (Pull Request) einsenden kannst. Das gilt für Tippfehler oder wenn du etwas findest, das nicht klar genug ist, oder auch für komplett neue Abschnitte.\n\n# Core\nFinde ein offenes issue auf Github. Neue Features sind immer willkommen!\n\n# Inform an Issue\n * Was für Issues kann ich erstellen?\n\nNeben dem Report von einem bug, kannst du auch neue Feature vorschlagen, Ideen kund tun, etc.\n\nDu kannst auch ein Issue erstellen, wenn dir etwas in der Dokumentation nicht eindeutig genug ist.\n\n * Wie erstellt man einen Report?\n\nVersuche einfach zu erklären was passiert und was du erwartet hast, das passiert . Am besten Beschreibst du auch wie man einen Fehler reproduzieren kann und kopiere ein paar Logs dazu, in denen man den Fehler sieht\n\n# Core pull request Guidelines\nReferenziere deinen PR zu einem verwandten Issue (sofern vorhanden) und liefere eine Beschreibung deiner vorgeschlagenen Änderung. Stelle sicher, dass du den Coding Guidelines folgst. Du findest sie hier in der Sektion Code Guidelines.\n\n# Skills\n# Neue Skills\nNeue Skills sind immer willkommen! Eine Anleitung wie du Skills für Project Alice erstellst, findest du in der Sektion Skill Entwicklung\n\n# Übersetzungen\nSkills müssen deine Sprache unterstützen, damit du sie verwenden kannst. Wie du einen Skill in eine andere Sprache übersetzt, findest du auf in unserer Anleitung\n\n# Skills pull request Guidelines\nReferenziere deinen PR zu einem verwandten Issue (sofern vorhanden) und liefere eine Beschreibung deiner vorgeschlagenen Änderung. Stelle sicher, dass du den Coding Guidelines folgst. Du findest sie hier in der Sektion Code Guidelines. Um deinen Skill zu validieren, kannst du das Alice Skill Kit verwenden. Wie das geht findest du in der Sektion Alice Skill Kit.\n\n# Dir gefällt ProjectAlice?\n# Spread the word\nErzähle anderen davon! Teile deine Erfahrungen mit Freunden, Kollegen und den Sozialen Netzwerken.\n\n# Become a stargazer\nVielleicht hinterlässt du normalerweise auf Github keine Sterne - wir bitten dich, mach eine Ausnahme und tu es. Lass uns deinen Stern da. 😃\n\n# Stay in touch\n * Trete ProjectAlice auf Discord bei und bringe dich Live in unsere Diskussionen ein, erhalte die neusten Neuigkeiten und werde ein Teil der Community!",contentLowercase:"# thank you\nzunächst einmal vielen dank, dass du daran interessiert bist, zu projectalice beizutragen. 🙏 mit deiner zusammenarbeit können viele dinge verbessert und bereichert werden, unabhängig davon, ob du ein erfahrener entwickler bist oder nicht. im folgenden findest du einige richtlinien für inspiration.\n\n# dokumentation\ndu kannst die anleitungen von projectalice schreiben, übersetzen und verbessern. jede seite hat einen link zu ihrem quellcode, sodass du eine kopie (fork) einfach bearbeiten und (pull request) einsenden kannst. das gilt für tippfehler oder wenn du etwas findest, das nicht klar genug ist, oder auch für komplett neue abschnitte.\n\n# core\nfinde ein offenes issue auf github. neue features sind immer willkommen!\n\n# inform an issue\n * was für issues kann ich erstellen?\n\nneben dem report von einem bug, kannst du auch neue feature vorschlagen, ideen kund tun, etc.\n\ndu kannst auch ein issue erstellen, wenn dir etwas in der dokumentation nicht eindeutig genug ist.\n\n * wie erstellt man einen report?\n\nversuche einfach zu erklären was passiert und was du erwartet hast, das passiert . am besten beschreibst du auch wie man einen fehler reproduzieren kann und kopiere ein paar logs dazu, in denen man den fehler sieht\n\n# core pull request guidelines\nreferenziere deinen pr zu einem verwandten issue (sofern vorhanden) und liefere eine beschreibung deiner vorgeschlagenen änderung. stelle sicher, dass du den coding guidelines folgst. du findest sie hier in der sektion code guidelines.\n\n# skills\n# neue skills\nneue skills sind immer willkommen! eine anleitung wie du skills für project alice erstellst, findest du in der sektion skill entwicklung\n\n# übersetzungen\nskills müssen deine sprache unterstützen, damit du sie verwenden kannst. wie du einen skill in eine andere sprache übersetzt, findest du auf in unserer anleitung\n\n# skills pull request guidelines\nreferenziere deinen pr zu einem verwandten issue (sofern vorhanden) und liefere eine beschreibung deiner vorgeschlagenen änderung. stelle sicher, dass du den coding guidelines folgst. du findest sie hier in der sektion code guidelines. um deinen skill zu validieren, kannst du das alice skill kit verwenden. wie das geht findest du in der sektion alice skill kit.\n\n# dir gefällt projectalice?\n# spread the word\nerzähle anderen davon! teile deine erfahrungen mit freunden, kollegen und den sozialen netzwerken.\n\n# become a stargazer\nvielleicht hinterlässt du normalerweise auf github keine sterne - wir bitten dich, mach eine ausnahme und tu es. lass uns deinen stern da. 😃\n\n# stay in touch\n * trete projectalice auf discord bei und bringe dich live in unsere diskussionen ein, erhalte die neusten neuigkeiten und werde ein teil der community!",charsets:{}},{title:"Code guidelines",frontmatter:{title:"Code guidelines",sidebarDepth:3},regularPath:"/de/contribute/code-guidelines.html",relativePath:"de/contribute/code-guidelines.md",key:"v-3ca6ddb6",path:"/de/contribute/code-guidelines.html",lastUpdated:"28.10.2020, 22:37:14",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",contentLowercase:"# wip\nich brauche jemanden, diese seite zu übersetzen bitte",charsets:{}},{title:"Core development",frontmatter:{title:"Core development",sidebarDepth:3},regularPath:"/de/core-development/",relativePath:"de/core-development/README.md",key:"v-bc7e3184",path:"/de/core-development/",lastUpdated:"28.10.2020, 22:37:14",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",contentLowercase:"# wip\nich brauche jemanden, diese seite zu übersetzen bitte",charsets:{}},{title:"Nützliche Links",frontmatter:{title:"Nützliche Links",sidebarDepth:3},regularPath:"/de/links/",relativePath:"de/links/README.md",key:"v-1dd60934",path:"/de/links/",lastUpdated:"28.10.2020, 22:37:14",headersStr:null,content:"Du findest weitere Inhalte zu Alice weit verstreut im Netz - über einen Like, Follow, Sub oder was es sonst so gibt, freuen wir uns natürlich!\n\n * Homepage\n * Youtube\n * Twitch\n * Twitter\n * Discord\n\n# Attributions",contentLowercase:"du findest weitere inhalte zu alice weit verstreut im netz - über einen like, follow, sub oder was es sonst so gibt, freuen wir uns natürlich!\n\n * homepage\n * youtube\n * twitch\n * twitter\n * discord\n\n# attributions",charsets:{}},{title:"Satelliten installieren",frontmatter:{title:"Satelliten installieren",sidebarDepth:3},regularPath:"/de/satsetup/",relativePath:"de/satsetup/README.md",key:"v-03cf46ac",path:"/de/satsetup/",lastUpdated:"28.10.2020, 22:37:14",headersStr:null,content:'Achtung!\n\nEs handelt sich um eine Alpha Version! Es kann jederzeit zu größeren Änderungen in desem Abschnitt kommen. Die Zielgruppe sollte ein grundlegendes Verständnis ihrer Geräte haben, Linux und eventuell Programmierkenntenisse besitzen, sowie Python module installieren können.\n\n * Download unseres vorgefertigten Raspbian Buster image: * Direkter Download\n    * Diese Image enthält nicht mehr als Project Alice, mit allen Abhängigkeiten, sowie Hermes Led Control\n    * Einen Einblick erhälst du in der Sektion Vorinstallierte Pakete\n   \n   \n\nTip\n\nDu benötigst den Skill AliceSatellite auf deiner Haupteinheit installiert!\n\n * Flashe das image auf deine SD card\n * Platziere keine wpa_supplicant.conf oder ssh Datei in /boot\n * Starte deinen Raspberry NICHT bevor die folgenden Schritte ausgeführt hast!!\n * Bearbeite die /boot/ProjectAliceSatellite.yaml Datei. Wenn es keine ProjectAliceSatellite.yaml auf deiner /boot Partition geben sollte, schnapp dir hier die neuste Version: ProjectAliceSatellite.yaml\n * Konfiguriere sie entsprechend deiner Informationen und Bedürfnisse. Alle Konfigurationen haben eine kurze Erklärung, das meiste sollte aber selbsterklärend sein.\n * Gehe sicher, dass du überall ein Leerzeichen nach den Doppelpunkten hast: * Falsch: forceRewrite:yes\n    * Richtig: forceRewrite: yes\n   \n   \n * Wenn der Wert Sonderzeichen enthält, schließe den kompletten Wert mit Anführungszeichen ein: * Falsch: mqttPassword: a:%qJi\n    * Richtig: mqttPassword: "a:%qJi"\n   \n   \n * Speichern, SD Karte abziehen und in den Raspberry Pi einstecken.\n * Frage Alice: "Füge einen neuen Satelliten im Wohnzimmer hinzu"\n * Starte jetzt deinen Satelliten\n * Alice sollte sich selbst starten, mit deinem WLAN verbinden, Updates installieren, die Konfiguration einrichten und hochfahren. Das kann eine Weile dauern.\n * Wenn Alice auch nach 5 Minuten noch keinen Satelliten gefunden hat, wird sie dir das mitteilen. In dem Fall frag sie einfach nochmal, "Füge einen Satelliten hinzu". Je nach Hardware, kann die Installation auch mal über 5 Minuten benötigen.\n * Der SSH Benutzername ist pi und das Passwort ist umbrella. Ändere das Kennwort nach einer erfolgreichen Installation ab!\n\nWenn alles funktioniert hat, bestätigt dir Alice das erfolgreiche Hinzufügen eines neuen Satelliten! Alice kümmert sich darum, dass dein Hotword und Wakeword, genau wie auf der Haupteinheit, auch auf dem Satelliten verfügbar ist.\n\n# Hast du ein Problem mit Alice? Sie hört dich nicht? Sie scheint nichtmal zu starten?\nWirf einen Blick in unseren Troubleshooting Guide!',contentLowercase:'achtung!\n\nes handelt sich um eine alpha version! es kann jederzeit zu größeren änderungen in desem abschnitt kommen. die zielgruppe sollte ein grundlegendes verständnis ihrer geräte haben, linux und eventuell programmierkenntenisse besitzen, sowie python module installieren können.\n\n * download unseres vorgefertigten raspbian buster image: * direkter download\n    * diese image enthält nicht mehr als project alice, mit allen abhängigkeiten, sowie hermes led control\n    * einen einblick erhälst du in der sektion vorinstallierte pakete\n   \n   \n\ntip\n\ndu benötigst den skill alicesatellite auf deiner haupteinheit installiert!\n\n * flashe das image auf deine sd card\n * platziere keine wpa_supplicant.conf oder ssh datei in /boot\n * starte deinen raspberry nicht bevor die folgenden schritte ausgeführt hast!!\n * bearbeite die /boot/projectalicesatellite.yaml datei. wenn es keine projectalicesatellite.yaml auf deiner /boot partition geben sollte, schnapp dir hier die neuste version: projectalicesatellite.yaml\n * konfiguriere sie entsprechend deiner informationen und bedürfnisse. alle konfigurationen haben eine kurze erklärung, das meiste sollte aber selbsterklärend sein.\n * gehe sicher, dass du überall ein leerzeichen nach den doppelpunkten hast: * falsch: forcerewrite:yes\n    * richtig: forcerewrite: yes\n   \n   \n * wenn der wert sonderzeichen enthält, schließe den kompletten wert mit anführungszeichen ein: * falsch: mqttpassword: a:%qji\n    * richtig: mqttpassword: "a:%qji"\n   \n   \n * speichern, sd karte abziehen und in den raspberry pi einstecken.\n * frage alice: "füge einen neuen satelliten im wohnzimmer hinzu"\n * starte jetzt deinen satelliten\n * alice sollte sich selbst starten, mit deinem wlan verbinden, updates installieren, die konfiguration einrichten und hochfahren. das kann eine weile dauern.\n * wenn alice auch nach 5 minuten noch keinen satelliten gefunden hat, wird sie dir das mitteilen. in dem fall frag sie einfach nochmal, "füge einen satelliten hinzu". je nach hardware, kann die installation auch mal über 5 minuten benötigen.\n * der ssh benutzername ist pi und das passwort ist umbrella. ändere das kennwort nach einer erfolgreichen installation ab!\n\nwenn alles funktioniert hat, bestätigt dir alice das erfolgreiche hinzufügen eines neuen satelliten! alice kümmert sich darum, dass dein hotword und wakeword, genau wie auf der haupteinheit, auch auf dem satelliten verfügbar ist.\n\n# hast du ein problem mit alice? sie hört dich nicht? sie scheint nichtmal zu starten?\nwirf einen blick in unseren troubleshooting guide!',charsets:{}},{title:"Satellite install",frontmatter:{title:"Satellite install",sidebarDepth:3},regularPath:"/de/satsetup/manual-install.html",relativePath:"de/satsetup/manual-install.md",key:"v-3ef16335",path:"/de/satsetup/manual-install.html",lastUpdated:"28.10.2020, 22:37:14",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",contentLowercase:"# wip\nich brauche jemanden, diese seite zu übersetzen bitte",charsets:{}},{title:"Vorinstalliert",frontmatter:{title:"Vorinstalliert",sidebarDepth:3},regularPath:"/de/satsetup/preinstalled.html",relativePath:"de/satsetup/preinstalled.md",key:"v-599b782f",path:"/de/satsetup/preinstalled.html",headers:[{level:2,title:"Systemweit",slug:"systemweit",charIndex:140},{level:2,title:"venv",slug:"venv",charIndex:203}],lastUpdated:"28.10.2020, 22:37:14",headersStr:"Systemweit venv",content:"# Vorinstallierte Pakete\nHier findest du eine Liste von allen Programmen die auf dem Project Alice Satelliten Image vorinstalliert sind:\n\n# Systemweit\n * git\n * snips-satellite\n * python3-pip\n * python3-venv\n\n# venv\n * requests\n * psutil\n * pyyaml\n * paho-mqtt",contentLowercase:"# vorinstallierte pakete\nhier findest du eine liste von allen programmen die auf dem project alice satelliten image vorinstalliert sind:\n\n# systemweit\n * git\n * snips-satellite\n * python3-pip\n * python3-venv\n\n# venv\n * requests\n * psutil\n * pyyaml\n * paho-mqtt",charsets:{}},{title:"Troubleshooting",frontmatter:{title:"Troubleshooting",sidebarDepth:3},regularPath:"/de/satsetup/troubleshooting.html",relativePath:"de/satsetup/troubleshooting.md",key:"v-4f62e6f6",path:"/de/satsetup/troubleshooting.html",lastUpdated:"28.10.2020, 22:37:14",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",contentLowercase:"# wip\nich brauche jemanden, diese seite zu übersetzen bitte",charsets:{}},{title:"Update Satellite to A2",frontmatter:{title:"Update Satellite to A2",sidebarDepth:3},regularPath:"/de/satsetup/updateToA2.html",relativePath:"de/satsetup/updateToA2.md",key:"v-7171271a",path:"/de/satsetup/updateToA2.html",lastUpdated:"28.10.2020, 22:37:14",headersStr:null,content:"WARNING\n\nThe alpha and beta releases are subject to major changes. The target audience is people with some knowledge of their devices, coding, installing python modules and basic stuff!\n\n# Updating to A2 branch or above from A1\n * See Satellite setup if you don't already have A1 installed\n\nMigrating from A1 image to A2 or above.\n\n * First double check your satellite is operational on A1\n * Then in the command line do the following\n * sudo systemctl stop ProjectAlice\n * git stash\n * git checkout 1.0.0-b1\n * sudo apt-get install portaudio19-dev\n * ./venv/bin/pip install importlib_metadata\n * ./venv/bin/pip install webrtcva\n * ./venv/bin/pip install wheel\n * ./venv/bin/pip install pyaudio\n * sudo systemctl start ProjectAlice\n * To check there are no errors ...\n * tail -f /var/log/syslog\n\nIf everything goes fine, and you have a satellite displayed in My Home. The satellite icon should now be green showing it's connected.\n\n# Having issues with Alice? She doesn't hear you? Doesn't seem to start?\nHave a look at our Troubleshooting guide!",contentLowercase:"warning\n\nthe alpha and beta releases are subject to major changes. the target audience is people with some knowledge of their devices, coding, installing python modules and basic stuff!\n\n# updating to a2 branch or above from a1\n * see satellite setup if you don't already have a1 installed\n\nmigrating from a1 image to a2 or above.\n\n * first double check your satellite is operational on a1\n * then in the command line do the following\n * sudo systemctl stop projectalice\n * git stash\n * git checkout 1.0.0-b1\n * sudo apt-get install portaudio19-dev\n * ./venv/bin/pip install importlib_metadata\n * ./venv/bin/pip install webrtcva\n * ./venv/bin/pip install wheel\n * ./venv/bin/pip install pyaudio\n * sudo systemctl start projectalice\n * to check there are no errors ...\n * tail -f /var/log/syslog\n\nif everything goes fine, and you have a satellite displayed in my home. the satellite icon should now be green showing it's connected.\n\n# having issues with alice? she doesn't hear you? doesn't seem to start?\nhave a look at our troubleshooting guide!",charsets:{}},{title:"Haupteinheit installieren",frontmatter:{title:"Haupteinheit installieren",sidebarDepth:3},regularPath:"/de/setup/",relativePath:"de/setup/README.md",key:"v-fa956c34",path:"/de/setup/",headers:[{level:2,title:"Welche Variante darfs sein?",slug:"welche-variante-darfs-sein",charIndex:248}],lastUpdated:"28.10.2020, 22:37:14",headersStr:"Welche Variante darfs sein?",content:'Achtung!\n\nDies ist eine Beta Version! Die Software und Prozesse unterliegen kontinuierlicher Veränderung. Die Zielgruppe sind aktuell alle, die grundlegendes Wissen zu ihren Geräten haben, Systemlogs lesen und Python Module installieren können.\n\n# Welche Variante darfs sein?\nEs gibt aktuell drei Wege Alice zu installieren. Seit Oktober 2020 ist die empfohlene Methode die manuelle Installation, da man damit immer die neuste Version hat und nicht für jede kleine Änderung eine neues Image erstellt werden muss. Ab Version 1.0 wird es auch wieder "Plug&Play" Images geben!\n\n * Manuelle Installation\n * "Plug&Play" Raspberry Pi OS image\n * Docker\n\n# Hast du Probleme mit Alice? Sie kann dich nicht hören? Sie startet garnicht?\nWirf einen Blick in unseren Troubleshooting guide!',contentLowercase:'achtung!\n\ndies ist eine beta version! die software und prozesse unterliegen kontinuierlicher veränderung. die zielgruppe sind aktuell alle, die grundlegendes wissen zu ihren geräten haben, systemlogs lesen und python module installieren können.\n\n# welche variante darfs sein?\nes gibt aktuell drei wege alice zu installieren. seit oktober 2020 ist die empfohlene methode die manuelle installation, da man damit immer die neuste version hat und nicht für jede kleine änderung eine neues image erstellt werden muss. ab version 1.0 wird es auch wieder "plug&play" images geben!\n\n * manuelle installation\n * "plug&play" raspberry pi os image\n * docker\n\n# hast du probleme mit alice? sie kann dich nicht hören? sie startet garnicht?\nwirf einen blick in unseren troubleshooting guide!',charsets:{}},{title:"Docker",frontmatter:{title:"Docker",sidebarDepth:3},regularPath:"/de/setup/docker.html",relativePath:"de/setup/docker.md",key:"v-2a00bb85",path:"/de/setup/docker.html",lastUpdated:"28.10.2020, 22:37:14",headersStr:null,content:"Dank der Arbeit unserer Community, gibt es noch einen weiteren Weg Alice auf vielfältigen Architekturen zu installieren.\n\nDieser Weg wird aktuell nicht von uns verwaltet, bietet dir allerdings ein Docker image mit dem du Alice installieren kannst! Und das wollen wir euch natürlich nicht vorenthalten!\n\nhttps://github.com/poulsp/docker-Alice-Linux-x86",contentLowercase:"dank der arbeit unserer community, gibt es noch einen weiteren weg alice auf vielfältigen architekturen zu installieren.\n\ndieser weg wird aktuell nicht von uns verwaltet, bietet dir allerdings ein docker image mit dem du alice installieren kannst! und das wollen wir euch natürlich nicht vorenthalten!\n\nhttps://github.com/poulsp/docker-alice-linux-x86",charsets:{}},{title:'Installation mit unserem "Plug&Play" Image',frontmatter:{title:'Installation mit unserem "Plug&Play" Image',sidebarDepth:3,tags:["image","vorgefertigt","installation","installieren","plug&play","setup"]},regularPath:"/de/setup/image-install.html",relativePath:"de/setup/image-install.md",key:"v-798f791f",path:"/de/setup/image-install.html",lastUpdated:"28.10.2020, 22:37:14",headersStr:null,content:'Achtung!\n\nDas zuletzt erstellte Image ist aus Beta 2! Hast du unter manueller Installation nach einer aktualisierten Version von Alice geschaut? Das nächste "Plug&Play" Image wird es erst wieder ab Version 1 geben.\n\n * Lade unser vorgefertigtes Raspbian OS Image herunter: * Direkter Download\n    * Das Image enthält nur Project Alice und einige Abhängigkeiten.\n    * Wenn du dich wunderst was genau drin steckt, wirf einen Blick in die Sektion vorinstallierte Pakete\n   \n   \n * Extrahiere das Image aus dem 7zip Archiv\n\nTip\n\nVerwende 7zip, es ist Open Source, schnell, hat eine der besten Kompressionsraten und kommt mit einigen netten Features\n\n * Spiele das Image auf deine SD Karte\n * Platziere KEINE wpa_supplicant.conf oder ssh Datei in /boot\n * Starte deinen Raspberry NICHT bevor du die folgenden Schritte ausgeführt hast!!\n * Bearbeite die Datei /boot/ProjectAlice.yaml. Wenn es keine ProjectAlice.yaml Datei in der /boot Partition gibt, hol dir die letzte Version hier: ProjectAlice.yaml\n * Stelle in der Datei alles so ein, wie du es benötigst. Alle Einstellungen haben eine kurze Erjkärung, aber das meiste sollte selbsterklärend sein.\n * Stelle sicher dass du ein Leerzeichen nach dem Doppelpunkt hast: * Falsch: forceRewrite:yes\n    * Richtig: forceRewrite: yes\n   \n   \n * Wenn der Wert Sonderzeichen enthält, schließe ihn mit Anführungszeichen ein: * Falsch: mqttPassword: a:%qJi\n    * Richtig: mqttPassword: "a:%qJi"\n   \n   \n * Speichern, SD Karte auswerfen und in den Raspberry Pi stecken. Jetzt kannst du den Raspberry anschalten!\n * Alice sollte sich selbst starten und mit deinem WLAN verbinden. Sie führt Updates aus, konfiguriert sich und startet danach vollständig. Das kann eine Weile dauern. Ziehe sie jetzt nicht vom Strom ab bevor sie mit dir gesprochen hat!\n * Wenn du das Interface eingeschaltet hast(standard Einstellung), siehst du was los ist, wenn du http://x.x.x.x:5000 in deinem Browser aufrufst. Dabei musst du natürlich die IP oder den Hostnamen von deinem Raspberry einfügen.\n * Der SSH Benutzername ist pi, und das Passwort umbrella. Denke daran dein Passwort nach einer erfolgreichen Installation sofort zu ändern!',contentLowercase:'achtung!\n\ndas zuletzt erstellte image ist aus beta 2! hast du unter manueller installation nach einer aktualisierten version von alice geschaut? das nächste "plug&play" image wird es erst wieder ab version 1 geben.\n\n * lade unser vorgefertigtes raspbian os image herunter: * direkter download\n    * das image enthält nur project alice und einige abhängigkeiten.\n    * wenn du dich wunderst was genau drin steckt, wirf einen blick in die sektion vorinstallierte pakete\n   \n   \n * extrahiere das image aus dem 7zip archiv\n\ntip\n\nverwende 7zip, es ist open source, schnell, hat eine der besten kompressionsraten und kommt mit einigen netten features\n\n * spiele das image auf deine sd karte\n * platziere keine wpa_supplicant.conf oder ssh datei in /boot\n * starte deinen raspberry nicht bevor du die folgenden schritte ausgeführt hast!!\n * bearbeite die datei /boot/projectalice.yaml. wenn es keine projectalice.yaml datei in der /boot partition gibt, hol dir die letzte version hier: projectalice.yaml\n * stelle in der datei alles so ein, wie du es benötigst. alle einstellungen haben eine kurze erjkärung, aber das meiste sollte selbsterklärend sein.\n * stelle sicher dass du ein leerzeichen nach dem doppelpunkt hast: * falsch: forcerewrite:yes\n    * richtig: forcerewrite: yes\n   \n   \n * wenn der wert sonderzeichen enthält, schließe ihn mit anführungszeichen ein: * falsch: mqttpassword: a:%qji\n    * richtig: mqttpassword: "a:%qji"\n   \n   \n * speichern, sd karte auswerfen und in den raspberry pi stecken. jetzt kannst du den raspberry anschalten!\n * alice sollte sich selbst starten und mit deinem wlan verbinden. sie führt updates aus, konfiguriert sich und startet danach vollständig. das kann eine weile dauern. ziehe sie jetzt nicht vom strom ab bevor sie mit dir gesprochen hat!\n * wenn du das interface eingeschaltet hast(standard einstellung), siehst du was los ist, wenn du http://x.x.x.x:5000 in deinem browser aufrufst. dabei musst du natürlich die ip oder den hostnamen von deinem raspberry einfügen.\n * der ssh benutzername ist pi, und das passwort umbrella. denke daran dein passwort nach einer erfolgreichen installation sofort zu ändern!',charsets:{}},{title:"Manuelle Installation der Haupteinheit",frontmatter:{title:"Manuelle Installation der Haupteinheit",sidebarDepth:3,tags:["Installation","Einrichtung","Haupteinheit"]},regularPath:"/de/setup/manual-install.html",relativePath:"de/setup/manual-install.md",key:"v-46952605",path:"/de/setup/manual-install.html",headers:[{level:2,title:"Installiere Raspberry Pi OS",slug:"installiere-raspberry-pi-os",charIndex:375},{level:2,title:"Richte deinen PI ein",slug:"richte-deinen-pi-ein",charIndex:1872},{level:2,title:"Installiere Git und clone Alice",slug:"installiere-git-und-clone-alice",charIndex:2347},{level:2,title:"Starte Alice",slug:"starte-alice",charIndex:2664}],lastUpdated:"28.10.2020, 22:37:14",headersStr:"Installiere Raspberry Pi OS Richte deinen PI ein Installiere Git und clone Alice Starte Alice",content:'Stand Oktober 2020 ist die manuelle Installation der bevorzugte Weg. Da aktuell neue Versionen sehr schnell veröffentlicht werden, ist es zu zeitaufwändig jedes Mal ein neues Image zu erstellen. Es sind nur wenige Schritte von einem funktionierenden Raspberry Pi OS, bis Alice mit der neusten Version bereit ist! Um sicherzugehen, erstmal die Raspberry Pi OS Installation\n\n# Installiere Raspberry Pi OS\n * Downloade Raspberry Pi OS, die Lite Version wird empfohlen\n * Stecke deine 8GB+ SD Karte in den Computer und brenne das Raspberry Pi OS image darauf. * Was heißt brenne das image? Leg die Streichhölzer weg, und schaue hier\n   \n   \n * Wenn deine SD Karte geflashed wurde entferne sie und stecke sie erneut in den PC. Dieser sollte jetzt ein Laufwerk boot finden. (Und eventuell darauf Hinweisen, dass weitere Laufwerke erst formatiert werden müssten - jetzt NICHT formatieren!)\n * Schnappe dir deinen bevorzugten Text Editor (mhhh... notepad++) und erstelle eine neue Datei im Laufwerk boot. Öffne dazu deinen Texteditor und speichere die Datei mit dem namen ssh, ohne Dateiendung (.txt). Unter Windows muss man dafür All types *.* auswählen, statt Normal text file (.txt).\n * Anschließend erstellst du noch eine Datei mit folgendem Text:country=DE\n   ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\n   update_config=1\n   \n   network={\n       ssid=""\n       scan_ssid=1\n       psk=""\n       key_mgmt=WPA-PSK\n   }\n   \n   \n   \n * Du solltest natürlich deinen eigenen Ländercode eintragen (DE, AT, CH...) und auch deine WLAN SSID und Passwort hinzufügen\n * Auch diese Datei speicherst du auf der Partition boot, diesmal mit dem Namen wpa_supplicant.conf. Auch diesmal ohne Dateiendung, also für Windows Nutzer mit all types.\n * Fertig! Entferne jetzt deine SD Karte vom Rechner und stecke sie in deinen Raspberry Pi. Gib ihm Strom und etwas Zeit zum Starten.\n\n# Richte deinen PI ein\n * Verbinde dich zu deinem PI mittels SSH. Für Windows Nutzer empfehle ich kitty\n * Der standard Benutzername ist pi, und das standard Passwort ist raspberry\n * Update das System * sudo apt-get update\n    * sudo apt-get dist-upgrade -y\n   \n   \n * Öffne das Konfigurationstool * sudo raspiconfig\n   \n   \n * Setze den Netzwerknamen auf ProjectAlice\n * Stelle deine Sprache, Tastatur und Zeitzone ein\n * Ändere das standard Benutzerpasswort!\n * Neustart\n\n# Installiere Git und clone Alice\nWe need a few things to get Alice up now\n\n * Installiere git: sudo apt-get install git -y\n * Clone Alice:\n\ncd\ngit clone https://github.com/project-alice-assistant/ProjectAlice.git\n\n\n * Hole dir die allerneuste Entwicklungsversion:\n\ncd ~/ProjectAlice\ngit checkout 1.0.0-b4\ngit pull\n\n\n# Starte Alice\n * Kopiere die Basiskonfiguration an den richtigen Ort für die Ersteinrichtung: sudo cp ~/ProjectAlice/ProjectAlice.yaml /boot/ProjectAlice.yaml\n * Bearbeite die Installationseinstellungen: sudo nano /boot/ProjectAlice.yaml\n * Gehe die Datei Zeile für Zeile durch und Stelle alles nach deinen belieben ein.\n * Weißt du was? Wir sind durch! Lass sie uns starten!\n\ncd ~/ProjectAlice\npython3 main.py\n\n\n * Jetzt ist Geduld angesagt. Es braucht einige Installationen und Neustarts, aber Alice kümmert sich um alles. Anfangs siehst du in der Console noch den Fortschritt, aber sobald Alice ihren Service installiert hat, passiert alles im Hintergrund. Wenn du weiter den Prozess beobachten willst, wirf einen Blick in das Systemlog tail -f /var/log/syslog.\n * Sobald sie fertig ist, macht sie mit einem "Ding!" auf sich aufmerksam!\n * Kein "Ding!"? => Wirf einen Blick in unseren Troubleshooting guide!',contentLowercase:'stand oktober 2020 ist die manuelle installation der bevorzugte weg. da aktuell neue versionen sehr schnell veröffentlicht werden, ist es zu zeitaufwändig jedes mal ein neues image zu erstellen. es sind nur wenige schritte von einem funktionierenden raspberry pi os, bis alice mit der neusten version bereit ist! um sicherzugehen, erstmal die raspberry pi os installation\n\n# installiere raspberry pi os\n * downloade raspberry pi os, die lite version wird empfohlen\n * stecke deine 8gb+ sd karte in den computer und brenne das raspberry pi os image darauf. * was heißt brenne das image? leg die streichhölzer weg, und schaue hier\n   \n   \n * wenn deine sd karte geflashed wurde entferne sie und stecke sie erneut in den pc. dieser sollte jetzt ein laufwerk boot finden. (und eventuell darauf hinweisen, dass weitere laufwerke erst formatiert werden müssten - jetzt nicht formatieren!)\n * schnappe dir deinen bevorzugten text editor (mhhh... notepad++) und erstelle eine neue datei im laufwerk boot. öffne dazu deinen texteditor und speichere die datei mit dem namen ssh, ohne dateiendung (.txt). unter windows muss man dafür all types *.* auswählen, statt normal text file (.txt).\n * anschließend erstellst du noch eine datei mit folgendem text:country=de\n   ctrl_interface=dir=/var/run/wpa_supplicant group=netdev\n   update_config=1\n   \n   network={\n       ssid=""\n       scan_ssid=1\n       psk=""\n       key_mgmt=wpa-psk\n   }\n   \n   \n   \n * du solltest natürlich deinen eigenen ländercode eintragen (de, at, ch...) und auch deine wlan ssid und passwort hinzufügen\n * auch diese datei speicherst du auf der partition boot, diesmal mit dem namen wpa_supplicant.conf. auch diesmal ohne dateiendung, also für windows nutzer mit all types.\n * fertig! entferne jetzt deine sd karte vom rechner und stecke sie in deinen raspberry pi. gib ihm strom und etwas zeit zum starten.\n\n# richte deinen pi ein\n * verbinde dich zu deinem pi mittels ssh. für windows nutzer empfehle ich kitty\n * der standard benutzername ist pi, und das standard passwort ist raspberry\n * update das system * sudo apt-get update\n    * sudo apt-get dist-upgrade -y\n   \n   \n * öffne das konfigurationstool * sudo raspiconfig\n   \n   \n * setze den netzwerknamen auf projectalice\n * stelle deine sprache, tastatur und zeitzone ein\n * ändere das standard benutzerpasswort!\n * neustart\n\n# installiere git und clone alice\nwe need a few things to get alice up now\n\n * installiere git: sudo apt-get install git -y\n * clone alice:\n\ncd\ngit clone https://github.com/project-alice-assistant/projectalice.git\n\n\n * hole dir die allerneuste entwicklungsversion:\n\ncd ~/projectalice\ngit checkout 1.0.0-b4\ngit pull\n\n\n# starte alice\n * kopiere die basiskonfiguration an den richtigen ort für die ersteinrichtung: sudo cp ~/projectalice/projectalice.yaml /boot/projectalice.yaml\n * bearbeite die installationseinstellungen: sudo nano /boot/projectalice.yaml\n * gehe die datei zeile für zeile durch und stelle alles nach deinen belieben ein.\n * weißt du was? wir sind durch! lass sie uns starten!\n\ncd ~/projectalice\npython3 main.py\n\n\n * jetzt ist geduld angesagt. es braucht einige installationen und neustarts, aber alice kümmert sich um alles. anfangs siehst du in der console noch den fortschritt, aber sobald alice ihren service installiert hat, passiert alles im hintergrund. wenn du weiter den prozess beobachten willst, wirf einen blick in das systemlog tail -f /var/log/syslog.\n * sobald sie fertig ist, macht sie mit einem "ding!" auf sich aufmerksam!\n * kein "ding!"? => wirf einen blick in unseren troubleshooting guide!',charsets:{}},{title:"Vorinstallierte Pakete",frontmatter:{title:"Vorinstallierte Pakete",sidebarDepth:3},regularPath:"/de/setup/preinstalled.html",relativePath:"de/setup/preinstalled.md",key:"v-03bb25b6",path:"/de/setup/preinstalled.html",lastUpdated:"28.10.2020, 22:37:14",headersStr:null,content:"Seit beta 1 werden nicht mehr alle Abhängigkeiten vorinstalliert - nurnoch die notwendigsten:\n\n * Python3 PIP\n * psutil\n * PyYAML\n * toml\n\nWenn du alle Abhängigkeiten sehen willst, sobald die Installation vollständig ist, wirf einen Blick in folgende Dateien:\n\n * System\n * Python",contentLowercase:"seit beta 1 werden nicht mehr alle abhängigkeiten vorinstalliert - nurnoch die notwendigsten:\n\n * python3 pip\n * psutil\n * pyyaml\n * toml\n\nwenn du alle abhängigkeiten sehen willst, sobald die installation vollständig ist, wirf einen blick in folgende dateien:\n\n * system\n * python",charsets:{}},{title:"Anforderungen",frontmatter:{title:"Anforderungen",sidebarDepth:3},regularPath:"/de/setup/requirements.html",relativePath:"de/setup/requirements.md",key:"v-21d949f6",path:"/de/setup/requirements.html",lastUpdated:"28.10.2020, 22:37:14",headersStr:null,content:'# Anforderungen\nProject Alice läuft erfolgreich auf Raspberry Pi 3a+, 3b, 3b+ und 4b (1GB RAM genügt, für die Zukunft besser 2GB oder direkt 4GB. Die "neue" 8GB Variante klappt natürlich auch - Preisleistung lohnt sich für Alice aktuell nicht!).\n\nAnsonsten brauchst du ein Mikrofon und einen Lautsprecher wenn du mit der Haupteinheit auch direkt kommunizieren willst. Wenn du allerdings deine Haupteinheit versteckt im Serverschrank hast und nur über die verteilten Satelliten mit Alice reden willst, dann benötigt die Haupteinheit auch keine Ton Ein- und Ausgabe! Bewährt hat sich dabei der Respeaker 2 mit einem "beliebigen" Lautsprecher auf Klinke oder ein USB-Mikrofon wie zum Beispiel das Playstation 3 Eyetoy\n\n* Mit einem Kauf über die angegebenen Amazon Links unterstützt du Project Alice. Die Empfehlung zu diesen Geräten ist jedoch komplett unabhängig davon. Alle Einnahmen werden transparent gehalten und dienen zunächst dazu aufgelaufene Serverkosten zu decken.',contentLowercase:'# anforderungen\nproject alice läuft erfolgreich auf raspberry pi 3a+, 3b, 3b+ und 4b (1gb ram genügt, für die zukunft besser 2gb oder direkt 4gb. die "neue" 8gb variante klappt natürlich auch - preisleistung lohnt sich für alice aktuell nicht!).\n\nansonsten brauchst du ein mikrofon und einen lautsprecher wenn du mit der haupteinheit auch direkt kommunizieren willst. wenn du allerdings deine haupteinheit versteckt im serverschrank hast und nur über die verteilten satelliten mit alice reden willst, dann benötigt die haupteinheit auch keine ton ein- und ausgabe! bewährt hat sich dabei der respeaker 2 mit einem "beliebigen" lautsprecher auf klinke oder ein usb-mikrofon wie zum beispiel das playstation 3 eyetoy\n\n* mit einem kauf über die angegebenen amazon links unterstützt du project alice. die empfehlung zu diesen geräten ist jedoch komplett unabhängig davon. alle einnahmen werden transparent gehalten und dienen zunächst dazu aufgelaufene serverkosten zu decken.',charsets:{}},{title:"Room configuration",frontmatter:{title:"Room configuration",sidebarDepth:3},regularPath:"/de/setup/room-configuration.html",relativePath:"de/setup/room-configuration.md",key:"v-41edb305",path:"/de/setup/room-configuration.html",lastUpdated:"28.10.2020, 22:37:14",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",contentLowercase:"# wip\nich brauche jemanden, diese seite zu übersetzen bitte",charsets:{}},{title:"Troubleshooting",frontmatter:{title:"Troubleshooting",sidebarDepth:3},regularPath:"/de/setup/troubleshooting.html",relativePath:"de/setup/troubleshooting.md",key:"v-09f1f986",path:"/de/setup/troubleshooting.html",lastUpdated:"28.10.2020, 22:37:14",headersStr:null,content:"Ja, nichts und niemand ist perfekt, aber wir geben unser bestes nahe dran zu sein. Aber um ehrlich zu sein, Alice wird größer und größer, da geht auch mal was schief. Oder verwendest du Hardware die wir einfach noch nie getestet haben? Vielleicht ist dir auch nur ein Flüchtigkeitsfehler unterlaufen? Es gibt viele Gründe warum es auf Anhieb mal nicht klappt. Lass uns einfach eine Lösung dafür finden! Bedenke, der erste Start kann schon mal 15 Minuten dauern. Das hängt von Hardware und Einstellungen ab. Auf jeden Fall: Ziehe Alice jetzt nicht den Stecker wenn es so scheint als würde nichts passieren. Vielleicht erwischt du sonst Alice mitten in ihrem Training.\n\nAls erstes solltest du mittels SSH auf dein Gerät zugreifen. Finde die IP von deinem Gerät heraus und verbinde dich mittels ssh. Unter Windows empfehlen wir Kitty, auf anderen Plattformen solltest du direkt per Terminal verbinden können.\n\nEs gibt viele mögliche Wege nach dem Fehler zu suchen, das hier ist nur einer davon.\n\nAls erstes, lass uns einen Blick auf den Project Alice service werfen:\n\nsudo systemctl status ProjectAlice\n\nDu solltest einige Informationen zum Service erhalten. Wenn du es eine Weile beobachtetst, solltest du feststellen, dass es entweder durchgängig läuft, dann musst du einfach weiter warten bis Alice fertig gestartet ist. Oder du siehst, dass der Service regelmäßig abstürzt und neu startet. Vielleicht wird dir der Service aber auch als Tot angezeigt.\n\nSollte der Service Tot sein oder dauernd neustarten, müssen wir tiefer graben. Stoppe Project Alice. Drücke dazu als erstes STRG+C um wieder Eingabebereit zu sein. Dann geb ein:\n\nsudo systemctl stop ProjectAlice\n\nLass uns Alice jetzt manuell starten, dann haben wir einen besseren Einblick in die Logs. Schreibe dazu in deinem SSH terminal:\n\ncd /home/pi/ProjectAlice\n./venv/bin/python main.py\n\n\nDadurch wird Alice manuell gestartet und sie gibt dir jede detaillierte Meldung aus. Wenn sie auf einen Fehler stößt, wird dir dieser ausgegeben und Alice stoppt. Suche nach so einem Fehler und erstelle damit ein Issue auf Github. Lies dir die Logs sorgfältig durch, wenn doch nur eine Einstellung fehlt, oder eine Abhängigkeit nicht installiert wurde, dann gibt es hierfür normalerweise eindeutige Meldungen!\n\nWenn es keinen Fehler gibt und es scheint so, als würde Alice ohne Probleme starten, dann sollte die letzte Zeile im Log folgende sein:\n\nStarting Alice Core\n\nGleichzeitig solltest du dann auch ihre Willkommensnachricht hören!\n\n# Das Log sagt, sie fragt nach einem neuen Nutzer, aber ich höre nichts\nLinux Audio Probleme, die sind ja leider bekannt? Stoppe Alice mit STRG+C und wirf einen Blick in deine installierten Audio Geräte:\n\naplay -l\narecord -l\n\n\nHier sollteste du deine Geräte finden. Das erste Gerät ist dein standard Audio Ausgabegerät, das zweite deine Audio Eingabe. Ist deine Hardware hier nicht gelistet, hast du das Problem identifiziert! Für eine genaue Lösung, ist die Hardware-Welt leider zu groß..\n\nWIP",contentLowercase:"ja, nichts und niemand ist perfekt, aber wir geben unser bestes nahe dran zu sein. aber um ehrlich zu sein, alice wird größer und größer, da geht auch mal was schief. oder verwendest du hardware die wir einfach noch nie getestet haben? vielleicht ist dir auch nur ein flüchtigkeitsfehler unterlaufen? es gibt viele gründe warum es auf anhieb mal nicht klappt. lass uns einfach eine lösung dafür finden! bedenke, der erste start kann schon mal 15 minuten dauern. das hängt von hardware und einstellungen ab. auf jeden fall: ziehe alice jetzt nicht den stecker wenn es so scheint als würde nichts passieren. vielleicht erwischt du sonst alice mitten in ihrem training.\n\nals erstes solltest du mittels ssh auf dein gerät zugreifen. finde die ip von deinem gerät heraus und verbinde dich mittels ssh. unter windows empfehlen wir kitty, auf anderen plattformen solltest du direkt per terminal verbinden können.\n\nes gibt viele mögliche wege nach dem fehler zu suchen, das hier ist nur einer davon.\n\nals erstes, lass uns einen blick auf den project alice service werfen:\n\nsudo systemctl status projectalice\n\ndu solltest einige informationen zum service erhalten. wenn du es eine weile beobachtetst, solltest du feststellen, dass es entweder durchgängig läuft, dann musst du einfach weiter warten bis alice fertig gestartet ist. oder du siehst, dass der service regelmäßig abstürzt und neu startet. vielleicht wird dir der service aber auch als tot angezeigt.\n\nsollte der service tot sein oder dauernd neustarten, müssen wir tiefer graben. stoppe project alice. drücke dazu als erstes strg+c um wieder eingabebereit zu sein. dann geb ein:\n\nsudo systemctl stop projectalice\n\nlass uns alice jetzt manuell starten, dann haben wir einen besseren einblick in die logs. schreibe dazu in deinem ssh terminal:\n\ncd /home/pi/projectalice\n./venv/bin/python main.py\n\n\ndadurch wird alice manuell gestartet und sie gibt dir jede detaillierte meldung aus. wenn sie auf einen fehler stößt, wird dir dieser ausgegeben und alice stoppt. suche nach so einem fehler und erstelle damit ein issue auf github. lies dir die logs sorgfältig durch, wenn doch nur eine einstellung fehlt, oder eine abhängigkeit nicht installiert wurde, dann gibt es hierfür normalerweise eindeutige meldungen!\n\nwenn es keinen fehler gibt und es scheint so, als würde alice ohne probleme starten, dann sollte die letzte zeile im log folgende sein:\n\nstarting alice core\n\ngleichzeitig solltest du dann auch ihre willkommensnachricht hören!\n\n# das log sagt, sie fragt nach einem neuen nutzer, aber ich höre nichts\nlinux audio probleme, die sind ja leider bekannt? stoppe alice mit strg+c und wirf einen blick in deine installierten audio geräte:\n\naplay -l\narecord -l\n\n\nhier sollteste du deine geräte finden. das erste gerät ist dein standard audio ausgabegerät, das zweite deine audio eingabe. ist deine hardware hier nicht gelistet, hast du das problem identifiziert! für eine genaue lösung, ist die hardware-welt leider zu groß..\n\nwip",charsets:{}},{title:"Hotword und Wakeword",frontmatter:{title:"Hotword und Wakeword",sidebarDepth:3},regularPath:"/de/setup/wakeword.html",relativePath:"de/setup/wakeword.md",key:"v-585f6345",path:"/de/setup/wakeword.html",headers:[{level:2,title:"Hotword",slug:"hotword",charIndex:256},{level:2,title:"Wakeword",slug:"wakeword",charIndex:23},{level:3,title:"Setze alles zurück",slug:"setze-alles-zuruck",charIndex:827},{level:3,title:"Erstelle dein Wakeword manuell",slug:"erstelle-dein-wakeword-manuell",charIndex:1107}],lastUpdated:"28.10.2020, 22:37:14",headersStr:"Hotword Wakeword Setze alles zurück Erstelle dein Wakeword manuell",content:'Es gibt zwei Arten von Wakewords für Alice. Zum einen das , es funktioniert für jeden und ist vorinstalliert. Zum anderen die persönlichen , and are preinstalled, and the personal , that only work for one person and are individually created in runtime.\n\n# Hotword\nAktuell sind die folgenden unterstützt:\n\n * "Hey Snips"\n * "Porcupine"/"Bumblebee"/"Blueberry"/"Terminator"\n\nWir arbeiten an weiteren Lösungen und ersetzen, bzw. erweitern diese Liste sobald weitere unterstützt sind.\n\n# Wakeword\nDas persönliche wird nach der Erstellung eines neuen Benutzers aufgenommen. Das kann direkt nach dem ersten Start für den ersten Nutzer sein, oder wann auch immer ein neuer Nutzer später hinzugefügt wird. Wenn du dich zunächst dazu entscheidest kein zu erstellen, dann haben wir (aktuell) zwei Wege dies nachträglich zu erledigen.\n\n# Setze alles zurück\nLösche die Erinnerung von Alice und starte nochmal neu mit der Erstellung des Admin-Benutzers. Dieser Weg wird natürlich nur empfohlen, wenn du gerade erst Alice installiert hast.\n\nsudo rm ~/ProjectAlice/system/database/data.db\nsudo systemctl restart Alice\n\n\n# Erstelle dein Wakeword manuell\nMit dieser Anleitung lernst du deine eigenen Wakewords aufzunehmen, zu schneiden und Alice beizubringen.\n\n 1. Nimm dich drei mal auf wenn du "Hey Alice" sagst. Nenne die Dateien 0.wav 1.wav and 2.wav\n 2. Schneide die Aufnahmen so knapp wie möglich (Eine Millisekunde zuviel abschneiden, ist besser als eine Millisekunde zu wenig!)\n\nTip!\n\nEin kostenloses Tool und unsere Empfehlung wäre zum Beispiel Audacity\n\n 3. Verschiebe die Datei nach ~/ProjectAlice/trained/hotwords/%username%/. Füge dazu deinen Namen in die Verzeichnisstruktur ein - alles klein geschrieben!\n    \n    \n 4. Erstelle eine Datei "config.json" im selben Verzeichnis und befülle sie mit dem folgenden (Auch hier wieder %username% mit deinem Namen, in Kleinbuchstaben, ersetzen)\n    \n    \n\n{\n    "num_mel_bins": 13,\n    "window_type": "povey",\n    "kind": "personal",\n    "window_size": 10,\n    "cepstral_lifter": 22.0,\n    "use_energy": false,\n    "energy_floor": 0.0,\n    "from_mfcc": 1,\n    "dtw_ref": 0.22,\n    "raw_energy": true,\n    "frame_length_ms": 25.0,\n    "frame_shift_ms": 10.0,\n    "preemphasis_coefficient": 0.97,\n    "to_mfcc": 13,\n    "sample_rate": 16000,\n    "dither": 0.0,\n    "mel_low_freq": 20,\n    "shift": 10,\n    "num_mfcc": 13,\n    "band_radius": 10,\n    "hotword_key": "%username%"\n}\n\n\n 5. sudo nano /etc/snips.toml\n    \n    \n 6. Bearbeite in der Datei den folgenden Block, damit er den Pfad zu deinem neu aufgenommenen enthält, gefolgt von der Sensivität. Starte mit ~0.5, das kannst du nachher in der Weboberfläche von Alice genauer ermitteln lassen(Adminbereich). Auch hier natürlich wieder den %username% ersetzen!\n    \n    \n\n[snips-hotword]\nmodel = ["/home/pi/ProjectAlice/trained/hotwords/snips_hotword=0.53","/home/pi/ProjectAlice/trained/hotwords/%username%=0.48"]\n\n\n 7. Starte Alice neu\n\nsudo systemctl restart ProjectAlice',contentLowercase:'es gibt zwei arten von wakewords für alice. zum einen das , es funktioniert für jeden und ist vorinstalliert. zum anderen die persönlichen , and are preinstalled, and the personal , that only work for one person and are individually created in runtime.\n\n# hotword\naktuell sind die folgenden unterstützt:\n\n * "hey snips"\n * "porcupine"/"bumblebee"/"blueberry"/"terminator"\n\nwir arbeiten an weiteren lösungen und ersetzen, bzw. erweitern diese liste sobald weitere unterstützt sind.\n\n# wakeword\ndas persönliche wird nach der erstellung eines neuen benutzers aufgenommen. das kann direkt nach dem ersten start für den ersten nutzer sein, oder wann auch immer ein neuer nutzer später hinzugefügt wird. wenn du dich zunächst dazu entscheidest kein zu erstellen, dann haben wir (aktuell) zwei wege dies nachträglich zu erledigen.\n\n# setze alles zurück\nlösche die erinnerung von alice und starte nochmal neu mit der erstellung des admin-benutzers. dieser weg wird natürlich nur empfohlen, wenn du gerade erst alice installiert hast.\n\nsudo rm ~/projectalice/system/database/data.db\nsudo systemctl restart alice\n\n\n# erstelle dein wakeword manuell\nmit dieser anleitung lernst du deine eigenen wakewords aufzunehmen, zu schneiden und alice beizubringen.\n\n 1. nimm dich drei mal auf wenn du "hey alice" sagst. nenne die dateien 0.wav 1.wav and 2.wav\n 2. schneide die aufnahmen so knapp wie möglich (eine millisekunde zuviel abschneiden, ist besser als eine millisekunde zu wenig!)\n\ntip!\n\nein kostenloses tool und unsere empfehlung wäre zum beispiel audacity\n\n 3. verschiebe die datei nach ~/projectalice/trained/hotwords/%username%/. füge dazu deinen namen in die verzeichnisstruktur ein - alles klein geschrieben!\n    \n    \n 4. erstelle eine datei "config.json" im selben verzeichnis und befülle sie mit dem folgenden (auch hier wieder %username% mit deinem namen, in kleinbuchstaben, ersetzen)\n    \n    \n\n{\n    "num_mel_bins": 13,\n    "window_type": "povey",\n    "kind": "personal",\n    "window_size": 10,\n    "cepstral_lifter": 22.0,\n    "use_energy": false,\n    "energy_floor": 0.0,\n    "from_mfcc": 1,\n    "dtw_ref": 0.22,\n    "raw_energy": true,\n    "frame_length_ms": 25.0,\n    "frame_shift_ms": 10.0,\n    "preemphasis_coefficient": 0.97,\n    "to_mfcc": 13,\n    "sample_rate": 16000,\n    "dither": 0.0,\n    "mel_low_freq": 20,\n    "shift": 10,\n    "num_mfcc": 13,\n    "band_radius": 10,\n    "hotword_key": "%username%"\n}\n\n\n 5. sudo nano /etc/snips.toml\n    \n    \n 6. bearbeite in der datei den folgenden block, damit er den pfad zu deinem neu aufgenommenen enthält, gefolgt von der sensivität. starte mit ~0.5, das kannst du nachher in der weboberfläche von alice genauer ermitteln lassen(adminbereich). auch hier natürlich wieder den %username% ersetzen!\n    \n    \n\n[snips-hotword]\nmodel = ["/home/pi/projectalice/trained/hotwords/snips_hotword=0.53","/home/pi/projectalice/trained/hotwords/%username%=0.48"]\n\n\n 7. starte alice neu\n\nsudo systemctl restart projectalice',charsets:{}},{title:"Introduction to skill development",frontmatter:{title:"Introduction to skill development",sidebarDepth:3},regularPath:"/de/skill-development/",relativePath:"de/skill-development/README.md",key:"v-7e6cd7b4",path:"/de/skill-development/",lastUpdated:"28.10.2020, 22:37:14",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",contentLowercase:"# wip\nich brauche jemanden, diese seite zu übersetzen bitte",charsets:{}},{title:"Builtin intents",frontmatter:{title:"Builtin intents",sidebarDepth:5},regularPath:"/de/skill-development/builtin-intents.html",relativePath:"de/skill-development/builtin-intents.md",key:"v-2e5d5b53",path:"/de/skill-development/builtin-intents.html",lastUpdated:"28.10.2020, 22:37:14",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",contentLowercase:"# wip\nich brauche jemanden, diese seite zu übersetzen bitte",charsets:{}},{title:"Builtin slots",frontmatter:{title:"Builtin slots",sidebarDepth:3},regularPath:"/de/skill-development/builtin-slots.html",relativePath:"de/skill-development/builtin-slots.md",key:"v-5756d057",path:"/de/skill-development/builtin-slots.html",lastUpdated:"28.10.2020, 22:37:14",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",contentLowercase:"# wip\nich brauche jemanden, diese seite zu übersetzen bitte",charsets:{}},{title:"Database access",frontmatter:{title:"Database access",sidebarDepth:3},regularPath:"/de/skill-development/database-access.html",relativePath:"de/skill-development/database-access.md",key:"v-910389fe",path:"/de/skill-development/database-access.html",lastUpdated:"28.10.2020, 22:37:14",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",contentLowercase:"# wip\nich brauche jemanden, diese seite zu übersetzen bitte",charsets:{}},{title:"Dialog template",frontmatter:{title:"Dialog template",sidebarDepth:4},regularPath:"/de/skill-development/dialog-template.html",relativePath:"de/skill-development/dialog-template.md",key:"v-464ee06f",path:"/de/skill-development/dialog-template.html",lastUpdated:"28.10.2020, 22:37:14",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",contentLowercase:"# wip\nich brauche jemanden, diese seite zu übersetzen bitte",charsets:{}},{title:"Events",frontmatter:{title:"Events",sidebarDepth:3},regularPath:"/de/skill-development/events.html",relativePath:"de/skill-development/events.md",key:"v-35f71965",path:"/de/skill-development/events.html",lastUpdated:"28.10.2020, 22:37:14",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",contentLowercase:"# wip\nich brauche jemanden, diese seite zu übersetzen bitte",charsets:{}},{title:"Logging",frontmatter:{title:"Logging",sidebarDepth:3},regularPath:"/de/skill-development/logging.html",relativePath:"de/skill-development/logging.md",key:"v-10d31522",path:"/de/skill-development/logging.html",lastUpdated:"28.10.2020, 22:37:14",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",contentLowercase:"# wip\nich brauche jemanden, diese seite zu übersetzen bitte",charsets:{}},{title:"Missing slot information",frontmatter:{title:"Missing slot information",sidebarDepth:3},regularPath:"/de/skill-development/missing-slot-info.html",relativePath:"de/skill-development/missing-slot-info.md",key:"v-3cfb3881",path:"/de/skill-development/missing-slot-info.html",lastUpdated:"28.10.2020, 22:37:14",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",contentLowercase:"# wip\nich brauche jemanden, diese seite zu übersetzen bitte",charsets:{}},{title:"New language support",frontmatter:{title:"New language support",sidebarDepth:4},regularPath:"/de/skill-development/new-language-support.html",relativePath:"de/skill-development/new-language-support.md",key:"v-75c9dde5",path:"/de/skill-development/new-language-support.html",lastUpdated:"28.10.2020, 22:37:14",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",contentLowercase:"# wip\nich brauche jemanden, diese seite zu übersetzen bitte",charsets:{}},{title:"Publish your skill",frontmatter:{title:"Publish your skill",sidebarDepth:3},regularPath:"/de/skill-development/publishing-to-skill-store.html",relativePath:"de/skill-development/publishing-to-skill-store.md",key:"v-2eab9c93",path:"/de/skill-development/publishing-to-skill-store.html",lastUpdated:"28.10.2020, 22:37:14",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",contentLowercase:"# wip\nich brauche jemanden, diese seite zu übersetzen bitte",charsets:{}},{title:"Room configuration",frontmatter:{title:"Room configuration",sidebarDepth:3},regularPath:"/de/skill-development/room-configuration.html",relativePath:"de/skill-development/room-configuration.md",key:"v-532802c5",path:"/de/skill-development/room-configuration.html",lastUpdated:"28.10.2020, 22:37:14",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",contentLowercase:"# wip\nich brauche jemanden, diese seite zu übersetzen bitte",charsets:{}},{title:"Skill configuration file",frontmatter:{title:"Skill configuration file",sidebarDepth:3},regularPath:"/de/skill-development/skill-configuration-file.html",relativePath:"de/skill-development/skill-configuration-file.md",key:"v-d63d2936",path:"/de/skill-development/skill-configuration-file.html",lastUpdated:"28.10.2020, 22:37:14",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",contentLowercase:"# wip\nich brauche jemanden, diese seite zu übersetzen bitte",charsets:{}},{title:"Skill download suggestion",frontmatter:{title:"Skill download suggestion",sidebarDepth:3,tags:["suggestion","auto download","download"]},regularPath:"/de/skill-development/skill-download-suggestion.html",relativePath:"de/skill-development/skill-download-suggestion.md",key:"v-59baa413",path:"/de/skill-development/skill-download-suggestion.html",lastUpdated:"28.10.2020, 22:37:14",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",contentLowercase:"# wip\nich brauche jemanden, diese seite zu übersetzen bitte",charsets:{}},{title:"Talk file",frontmatter:{title:"Talk file",sidebarDepth:3},regularPath:"/de/skill-development/talk-file.html",relativePath:"de/skill-development/talk-file.md",key:"v-08842bf3",path:"/de/skill-development/talk-file.html",lastUpdated:"28.10.2020, 22:37:14",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",contentLowercase:"# wip\nich brauche jemanden, diese seite zu übersetzen bitte",charsets:{}},{title:"Widgets",frontmatter:{title:"Widgets",sidebarDepth:3},regularPath:"/de/skill-development/widgets.html",relativePath:"de/skill-development/widgets.md",key:"v-783892cf",path:"/de/skill-development/widgets.html",lastUpdated:"28.10.2020, 22:37:14",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",contentLowercase:"# wip\nich brauche jemanden, diese seite zu übersetzen bitte",charsets:{}},{title:"Your first skill",frontmatter:{title:"Your first skill",sidebarDepth:3},regularPath:"/de/skill-development/your-first-skill.html",relativePath:"de/skill-development/your-first-skill.md",key:"v-5c61de05",path:"/de/skill-development/your-first-skill.html",lastUpdated:"28.10.2020, 22:37:14",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",contentLowercase:"# wip\nich brauche jemanden, diese seite zu übersetzen bitte",charsets:{}},{title:"Sponsoren",frontmatter:{title:"Sponsoren",sidebarDepth:3},regularPath:"/de/sponsors/",relativePath:"de/sponsors/README.md",key:"v-0c231626",path:"/de/sponsors/",headers:[{level:2,title:"Jetbrains",slug:"jetbrains",charIndex:834},{level:2,title:"Gitlab",slug:"gitlab",charIndex:1517}],lastUpdated:"28.10.2020, 22:37:14",headersStr:"Jetbrains Gitlab",content:"# Sponsors\nProject Alice schickt ein riesiges Dankeschön an die folgenden Personen und Firmen, für ihre Unterstützung! Es ist nicht leicht kostenlose Software als Open Source zu entwickeln und die entstehenden Kosten können schnell erdrückend werden wenn man Effizienz und Qualität anstrebt.\n\nWenn auch du ein Sponsor von Project Alice werden willst, gibt es hierfür aktuell zwei Wege. Entweder eine monatliche Unterstüzung mit Liberapay (Transparenter als Patreons und gibt 100% weiter an den Empfänger!) oder mit einer einmaligen Spende über Paypal.\n\nLiberapay: https://liberapay.com/Psycho/donate\n\n\nAktuell gibt es keinen Plan, wie wir den Unterstützern danken können, außer sie hier zu nennen und einen Link ihrer Wahl zu platzieren. Wenn es jedoch Vorschläge gibt, immer her damit!\n\nPaypal: https://paypal.me/Psychokiller1888\n\n# Jetbrains\n Bist du auf der Suche nach den perfekten Werzeugen für welche Sprache auch immer du programmierst? Deine Suche ist vorbei, Jetbrains bietet dir die perfekte Suite für Entwicklungen in Python, PHP, HTML, Java, Rust, C# und vielen weiteren! Mit dedizierten Apps für jede Sprache, einer mächtigen Codevervollständigung und Analyse gibt es keine Ausrede mehr für Tippfehler! Refactoring wird auf ein komplett neues Level gehoben, Debugging versüßt, Remote Auto Deployment, Themes, Plugins und so vieles mehr machen es die perfekte Plattform für alle deine Bedürfnisse!\n\nVielen Dank für kostenfreie Lizensen, vollgepackt mit allen Programmen, zur Open Source Entwicklung!\n\n\n\n# Gitlab\n Looking to host your code? For a complete and very powerful Continuous Integration system? Managing your issues? Maybe you are already using another repository, but you still want to benefit from the CI? Give Gitlab a try! And even more than a try! The hosted solution is perfect for starters but if your needs increase, Gitlab can be easily downloaded and installed. Best part of it? Fear no data leakage, it's open source!\n\nThank you gitlab for providing us with a Gold license!",contentLowercase:"# sponsors\nproject alice schickt ein riesiges dankeschön an die folgenden personen und firmen, für ihre unterstützung! es ist nicht leicht kostenlose software als open source zu entwickeln und die entstehenden kosten können schnell erdrückend werden wenn man effizienz und qualität anstrebt.\n\nwenn auch du ein sponsor von project alice werden willst, gibt es hierfür aktuell zwei wege. entweder eine monatliche unterstüzung mit liberapay (transparenter als patreons und gibt 100% weiter an den empfänger!) oder mit einer einmaligen spende über paypal.\n\nliberapay: https://liberapay.com/psycho/donate\n\n\naktuell gibt es keinen plan, wie wir den unterstützern danken können, außer sie hier zu nennen und einen link ihrer wahl zu platzieren. wenn es jedoch vorschläge gibt, immer her damit!\n\npaypal: https://paypal.me/psychokiller1888\n\n# jetbrains\n bist du auf der suche nach den perfekten werzeugen für welche sprache auch immer du programmierst? deine suche ist vorbei, jetbrains bietet dir die perfekte suite für entwicklungen in python, php, html, java, rust, c# und vielen weiteren! mit dedizierten apps für jede sprache, einer mächtigen codevervollständigung und analyse gibt es keine ausrede mehr für tippfehler! refactoring wird auf ein komplett neues level gehoben, debugging versüßt, remote auto deployment, themes, plugins und so vieles mehr machen es die perfekte plattform für alle deine bedürfnisse!\n\nvielen dank für kostenfreie lizensen, vollgepackt mit allen programmen, zur open source entwicklung!\n\n\n\n# gitlab\n looking to host your code? for a complete and very powerful continuous integration system? managing your issues? maybe you are already using another repository, but you still want to benefit from the ci? give gitlab a try! and even more than a try! the hosted solution is perfect for starters but if your needs increase, gitlab can be easily downloaded and installed. best part of it? fear no data leakage, it's open source!\n\nthank you gitlab for providing us with a gold license!",charsets:{}},{title:"Grundlegende Verwendung",frontmatter:{title:"Grundlegende Verwendung",sidebarDepth:3},regularPath:"/de/usage/",relativePath:"de/usage/README.md",key:"v-207e9734",path:"/de/usage/",headers:[{level:2,title:"Nicht verstanden?",slug:"nicht-verstanden",charIndex:774},{level:3,title:"Beispiel",slug:"beispiel",charIndex:1127}],lastUpdated:"28.10.2020, 22:37:14",headersStr:"Nicht verstanden? Beispiel",content:"# Sprache\nAlice ist ein Sprachassistent also haben wir auch versucht die meisten Funktionen mit Sprachunterstützung zu gestalten. Manche Funktionen sind noch in Arbeit, andere erhalten erst später Sprachunterstützung, aber normalerweise machst du alles mit Alice über deine Stimme!\n\nEin Problem ist, das viele nicht wissen was sie zu ihrem Sprachassistenten sagen können, da sie ja keine physische Person vor sich haben. Und mit einer Maschine reden ist einfach nicht so natürlich. Mit Alice musst du dir keine Sorgen machen - rede einfach mit ihr und frage sie was auch immer du willst! Wenn sie dich nicht versteht, wird sie dich es wissen lassen! Wenn es schon einen Skill gibt fragt dich Alice ob sie ihn hinzufügen soll - oder wirf doch selber einen Blick auf die !\n\n# Nicht verstanden?\nAlice hat dich vielleicht akustisch verstanden, das heißt aber noch nicht, dass sie auch weiß was sie dir antworten soll. Dafür brauchst du erst einen Skill. Solltest du deiner Meinung nach einen Skill haben der dafür Verantwortlich ist, dann war die Confidence/Wahrscheinlichkeit nicht hoch genug. Schlag in Github doch ein paar neue Beispielsätze vor! Kurzfristig kannst du im Adminmenü auch den Schwellwert (probabilityThreshold) reduzieren!\n\nTip!\n\nManchmal versteht Alice deine Formulierung nicht - sie ahnt zwar schon was du willst, ist sich aber nicht sicher genug. Statt genau den gleichen Satz zu wiederholen, formuliere deine Frage um! Anschließend fragt dich Alice auch, ob sie sich deine vorherige Formulierung für die Zukunft lernen sollst!\n\n# Beispiel\nHey Alice?Ja?Wie ist die temp draußenSorry? Ich verstehe dich nicht?Wie ist die temperatur draußen?Es hat gerade 6°C draußen.Ist es das was du gemeint hast?JaOk, cool, dann merke ich mir das!Hey Alice?Ja?Wie ist die temp draußen?Es hat gerade 6°C draußen.",contentLowercase:"# sprache\nalice ist ein sprachassistent also haben wir auch versucht die meisten funktionen mit sprachunterstützung zu gestalten. manche funktionen sind noch in arbeit, andere erhalten erst später sprachunterstützung, aber normalerweise machst du alles mit alice über deine stimme!\n\nein problem ist, das viele nicht wissen was sie zu ihrem sprachassistenten sagen können, da sie ja keine physische person vor sich haben. und mit einer maschine reden ist einfach nicht so natürlich. mit alice musst du dir keine sorgen machen - rede einfach mit ihr und frage sie was auch immer du willst! wenn sie dich nicht versteht, wird sie dich es wissen lassen! wenn es schon einen skill gibt fragt dich alice ob sie ihn hinzufügen soll - oder wirf doch selber einen blick auf die !\n\n# nicht verstanden?\nalice hat dich vielleicht akustisch verstanden, das heißt aber noch nicht, dass sie auch weiß was sie dir antworten soll. dafür brauchst du erst einen skill. solltest du deiner meinung nach einen skill haben der dafür verantwortlich ist, dann war die confidence/wahrscheinlichkeit nicht hoch genug. schlag in github doch ein paar neue beispielsätze vor! kurzfristig kannst du im adminmenü auch den schwellwert (probabilitythreshold) reduzieren!\n\ntip!\n\nmanchmal versteht alice deine formulierung nicht - sie ahnt zwar schon was du willst, ist sich aber nicht sicher genug. statt genau den gleichen satz zu wiederholen, formuliere deine frage um! anschließend fragt dich alice auch, ob sie sich deine vorherige formulierung für die zukunft lernen sollst!\n\n# beispiel\nhey alice?ja?wie ist die temp draußensorry? ich verstehe dich nicht?wie ist die temperatur draußen?es hat gerade 6°c draußen.ist es das was du gemeint hast?jaok, cool, dann merke ich mir das!hey alice?ja?wie ist die temp draußen?es hat gerade 6°c draußen.",charsets:{}},{title:"Web Interface",frontmatter:{title:"Web Interface",sidebarDepth:3,tags:["web","interface"]},regularPath:"/de/usage/web-interface.html",relativePath:"de/usage/web-interface.md",key:"v-592be0a9",path:"/de/usage/web-interface.html",lastUpdated:"28.10.2020, 22:37:14",headersStr:null,content:'# Zugriff\nDas Alice web ist über den Port 5000 zu erreichen (Einstellbar in der Konfiguration) und der Zugriff kann entweder über die IP oder den Hostnamen erfolgen. Zum Beispiel:\n\nhttp://192.168.1.101:5000/\n\n# Home\nDiese Seite kannst du dir selbst mit gestalten. Wie überall im web Interface findest du dafür rechts oben eine Toolbar - mit einem Klick auf den Stift startet der Bearbeitungsmodus und dir werden die weiteren Werkzeuge angezeigt.\n\nIm Bearbeitungsmodus kannst du Widgets verschieben, skalieren und sortieren. Die Tools die dir zur Verfügung stehen sind:\n\n * Ein Wechsel in den Theatermodus: Toolbar und Menüleiste verschwinden - die komplette Fläche steht für deine gewünschten Infromationen zur Verfügung, perfekt auch für kleine Bildschirme wie zum Beispiel den offiziellen Raspberry Pi 7" Touchscreen*. Zum Verlassen des Theatermodus muss die Seite neu geladen werden!\n * Das Zahnrad zum Starten des Konfigurationsmodus: Anschließend kannst du Detaileinstellungen und auch die Anzeige(Farbe, Transparenz, Schriftgröße..) eines Widgets ändern.\n * Das Plus Zeichen zum Hinzufügen eines Widegts: Wird dir nur ein leeres Popup angezeigt, hast du aktuell keine Skills installiert, die auch ein Widget mit sich bringen! Versuche es doch mal mit ISS, Wetter, dem TextinputWidget oder DateTimeYear!\n * Das Minus Zeichen zum entfernen eines Widget\n * Die Diskette zum Speichern der Änderungen und schließen der Toolbar\n\n# Skills\nHier kannst du deine Skills verwalten. Zunächst siehst du eine Übersicht aller installierten Skills. Du kannst dir zu jedem Skill die möglichen anschauen, Einstellungen verwalten oder die Installations- und Verwendungshinweise ansehen. Oben rechts in der Toolbar wechselst du zur Installation neuer Skills. Wähle einen Skill aus und klicke erneut oben in der Ecke auf den Download! Alice kümmert sich um den Rest!\n\n# Mein Haus\nHier findet die technische Konfiguration aller Lokationen und Geräte statt. Mehr Informationen erhälst du in der Sektion Mein Haus\n\n# Szenarien\nDer Szenarieneditor bringt dir die Mächtigkeit eines Node-Red Editors direkt in Alice. Mehr Informationen erhälst du in der Sektion Szenarien\n\n# Syslog\nHier findest du alle Loggingnachrichten von Alice. Verhält sich etwas nicht wie du es erwartest? Wirf einen Blick hier hinein!\n\n# AliceWatch\nHier findest du eine Übersicht was Alice von dir verstanden hat, was sie sagen interpretiert, selber sagt, oder einfach nur im Hintergrund verarbeitet.\n\n# Admin\nIm Adminbereich musst du dich zunächst einloggen - Alice geleitet dich durch Sprachkommandos durch diesen Prozess. Ansonsten: Gib "admin" oder deinen Benutzernamen mit deiner Tastatur ein. Anschließend erscheint das Zahlenpad mit dem du deine Pin eingeben kannst! Jetzt kannst du alle Einstellungen rund um Alice tätigen - vergiss nicht ganz unten auf der Seite zu speichern! Über den zweiten Reiter erreichst du weitere Tools zum Neustarten, neu Trainieren, aktualiseren, sowie der Benutzerverwaltung mit einem neuen Wakeword und dem Feintuning dazu.\n\n# Devmode\nHier kannst du mit Hilfe von Alice einen neuen Skill erstellen. Trage alle Informationen ein und Alice erstellt für dich die notwendigen Verzeichnisse und Dateien - ein direkter Upload auf Github ist auch möglich!\n\n* Mit einem Kauf über die angegebenen Amazon Links unterstützt du Project Alice. Die Empfehlung zu diesen Geräten ist jedoch komplett unabhängig davon. Alle Einnahmen werden transparent gehalten und dienen zunächst dazu aufgelaufene Serverkosten zu decken.',contentLowercase:'# zugriff\ndas alice web ist über den port 5000 zu erreichen (einstellbar in der konfiguration) und der zugriff kann entweder über die ip oder den hostnamen erfolgen. zum beispiel:\n\nhttp://192.168.1.101:5000/\n\n# home\ndiese seite kannst du dir selbst mit gestalten. wie überall im web interface findest du dafür rechts oben eine toolbar - mit einem klick auf den stift startet der bearbeitungsmodus und dir werden die weiteren werkzeuge angezeigt.\n\nim bearbeitungsmodus kannst du widgets verschieben, skalieren und sortieren. die tools die dir zur verfügung stehen sind:\n\n * ein wechsel in den theatermodus: toolbar und menüleiste verschwinden - die komplette fläche steht für deine gewünschten infromationen zur verfügung, perfekt auch für kleine bildschirme wie zum beispiel den offiziellen raspberry pi 7" touchscreen*. zum verlassen des theatermodus muss die seite neu geladen werden!\n * das zahnrad zum starten des konfigurationsmodus: anschließend kannst du detaileinstellungen und auch die anzeige(farbe, transparenz, schriftgröße..) eines widgets ändern.\n * das plus zeichen zum hinzufügen eines widegts: wird dir nur ein leeres popup angezeigt, hast du aktuell keine skills installiert, die auch ein widget mit sich bringen! versuche es doch mal mit iss, wetter, dem textinputwidget oder datetimeyear!\n * das minus zeichen zum entfernen eines widget\n * die diskette zum speichern der änderungen und schließen der toolbar\n\n# skills\nhier kannst du deine skills verwalten. zunächst siehst du eine übersicht aller installierten skills. du kannst dir zu jedem skill die möglichen anschauen, einstellungen verwalten oder die installations- und verwendungshinweise ansehen. oben rechts in der toolbar wechselst du zur installation neuer skills. wähle einen skill aus und klicke erneut oben in der ecke auf den download! alice kümmert sich um den rest!\n\n# mein haus\nhier findet die technische konfiguration aller lokationen und geräte statt. mehr informationen erhälst du in der sektion mein haus\n\n# szenarien\nder szenarieneditor bringt dir die mächtigkeit eines node-red editors direkt in alice. mehr informationen erhälst du in der sektion szenarien\n\n# syslog\nhier findest du alle loggingnachrichten von alice. verhält sich etwas nicht wie du es erwartest? wirf einen blick hier hinein!\n\n# alicewatch\nhier findest du eine übersicht was alice von dir verstanden hat, was sie sagen interpretiert, selber sagt, oder einfach nur im hintergrund verarbeitet.\n\n# admin\nim adminbereich musst du dich zunächst einloggen - alice geleitet dich durch sprachkommandos durch diesen prozess. ansonsten: gib "admin" oder deinen benutzernamen mit deiner tastatur ein. anschließend erscheint das zahlenpad mit dem du deine pin eingeben kannst! jetzt kannst du alle einstellungen rund um alice tätigen - vergiss nicht ganz unten auf der seite zu speichern! über den zweiten reiter erreichst du weitere tools zum neustarten, neu trainieren, aktualiseren, sowie der benutzerverwaltung mit einem neuen wakeword und dem feintuning dazu.\n\n# devmode\nhier kannst du mit hilfe von alice einen neuen skill erstellen. trage alle informationen ein und alice erstellt für dich die notwendigen verzeichnisse und dateien - ein direkter upload auf github ist auch möglich!\n\n* mit einem kauf über die angegebenen amazon links unterstützt du project alice. die empfehlung zu diesen geräten ist jedoch komplett unabhängig davon. alle einnahmen werden transparent gehalten und dienen zunächst dazu aufgelaufene serverkosten zu decken.',charsets:{}},{title:"Useful links",frontmatter:{title:"Useful links",sidebarDepth:3},regularPath:"/links/",relativePath:"links/README.md",key:"v-a7323dfc",path:"/links/",lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:null,content:"Project Alice exists at many places for you to be updated! Likes and follows very welcome!\n\n * Homepage\n * Youtube\n * Twitch\n * Twitter\n * Discord\n\n# Attributions",contentLowercase:"project alice exists at many places for you to be updated! likes and follows very welcome!\n\n * homepage\n * youtube\n * twitch\n * twitter\n * discord\n\n# attributions",charsets:{}},{title:"Satellite setup",frontmatter:{title:"Satellite setup",sidebarDepth:3},regularPath:"/satsetup/",relativePath:"satsetup/README.md",key:"v-e860ba34",path:"/satsetup/",lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:null,content:'WARNING\n\nThis is an alpha release! It is subject to major changes and the target audience is people with some knowledge of their devices, coding, installing python modules and basic stuff!\n\n * Download our prefabricated Raspbian buster image: * Direct download\n    * This image has nothing more than Project Alice and its dependencies as well as Hermes Led Control\n    * If you wonder what\'s check the Preinstalled Packages Section\n   \n   \n\nTIP\n\nYou need the AliceSatellite installed and running on your main unit!\n\n * Flash the image to your SD card\n * do not place any wpa_supplicant.conf or ssh file in /boot\n * do not boot your raspberry before doing this next point!!\n * Edit the /boot/ProjectAliceSatellite.yaml file. If there\'s no ProjectAliceSatellite.yaml file on the /boot partition, grab the latest from sources: ProjectAliceSatellite.yaml\n * Configure it according to your information and needs. All configurations have a little explanation, but most should be self-explanatory.\n * Make sure to have a space after the colons: * Wrong: forceRewrite:yes\n    * Correct: forceRewrite: yes\n   \n   \n * If the option value contains any special characters, enclose the whole with double quotes: * Wrong: mqttPassword: a:%qJi\n    * Correct: mqttPassword: "a:%qJi"\n   \n   \n * Save it, unplug your sd, plug it in your raspberry pi.\n * Ask Alice to "Add a new satellite"\n * Power up your satellite\n * Alice should boot by herself and connect to your Wi-Fi, update, configure and start. This may take a while\n * If Alice times out for the satellite addition, after 5 minutes, she\'ll tell you. In that case ask her again to "Add a satellite". If you are using respeakers per exemple, the satellite setup might take more than 5 minutes.\n * The SSH User is pi and the password is umbrella\n\nIf everything goes fine, Alice will confirm the addition of the satellite and automatically configure it to connect to the correct Mqtt server. She will also automatically upload the hotword and wakeword resources to the new device.\n\n# Having issues with Alice? She doesn\'t hear you? Doesn\'t seem to start?\nHave a look at our Troubleshooting guide!',contentLowercase:'warning\n\nthis is an alpha release! it is subject to major changes and the target audience is people with some knowledge of their devices, coding, installing python modules and basic stuff!\n\n * download our prefabricated raspbian buster image: * direct download\n    * this image has nothing more than project alice and its dependencies as well as hermes led control\n    * if you wonder what\'s check the preinstalled packages section\n   \n   \n\ntip\n\nyou need the alicesatellite installed and running on your main unit!\n\n * flash the image to your sd card\n * do not place any wpa_supplicant.conf or ssh file in /boot\n * do not boot your raspberry before doing this next point!!\n * edit the /boot/projectalicesatellite.yaml file. if there\'s no projectalicesatellite.yaml file on the /boot partition, grab the latest from sources: projectalicesatellite.yaml\n * configure it according to your information and needs. all configurations have a little explanation, but most should be self-explanatory.\n * make sure to have a space after the colons: * wrong: forcerewrite:yes\n    * correct: forcerewrite: yes\n   \n   \n * if the option value contains any special characters, enclose the whole with double quotes: * wrong: mqttpassword: a:%qji\n    * correct: mqttpassword: "a:%qji"\n   \n   \n * save it, unplug your sd, plug it in your raspberry pi.\n * ask alice to "add a new satellite"\n * power up your satellite\n * alice should boot by herself and connect to your wi-fi, update, configure and start. this may take a while\n * if alice times out for the satellite addition, after 5 minutes, she\'ll tell you. in that case ask her again to "add a satellite". if you are using respeakers per exemple, the satellite setup might take more than 5 minutes.\n * the ssh user is pi and the password is umbrella\n\nif everything goes fine, alice will confirm the addition of the satellite and automatically configure it to connect to the correct mqtt server. she will also automatically upload the hotword and wakeword resources to the new device.\n\n# having issues with alice? she doesn\'t hear you? doesn\'t seem to start?\nhave a look at our troubleshooting guide!',charsets:{}},{title:"Manual install",frontmatter:{title:"Manual install",sidebarDepth:3},regularPath:"/satsetup/manual-install.html",relativePath:"satsetup/manual-install.md",key:"v-11789505",path:"/satsetup/manual-install.html",lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:null,content:'# Satellite setup\nWARNING\n\nThis is an alpha release! It is subject to major changes, and the target audience is people with some knowledge of their devices, coding, installing python modules and basic stuff!\n\nTIP\n\nThis guide is intended for users that wish to manually install Alice Satellite without downloading our image.\n\n * Download and burn Rasppberry Pi OS Lite: https://www.raspberrypi.org/downloads/raspberry-pi-os/\n * Start it headless by placing 2 files on the boot partition of your sd card: * Create a file called ssh, without extension and completely empty\n    * Create a file called wpa_supplicant.conf, with the following content:\n   \n   country=CH\n   ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\n   update_config=1\n   \n   network={\n       ssid=""\n       scan_ssid=1\n       psk=""\n       key_mgmt=WPA-PSK\n   }\n   \n   \n    * Make sure to fit the information (country, ssid and psk) with your wifi settings\n   \n   \n * Plug your SD card in your device and start it\n * Update your system: sudo apt-get update && sudo apt-get dist-upgrade -y\n * Update your preferences: sudo raspi-config\n * Make sure you have python 3.7 at least. If not (stretch), compile it from sources:sudo apt install -y libffi-dev libbz2-dev liblzma-dev libsqlite3-dev libncurses5-dev libgdbm-dev zlib1g-dev libreadline-dev libssl-dev tk-dev build-essential libncursesw5-dev libc6-dev openssl\n   wget https://www.python.org/ftp/python/3.7.7/Python-3.7.7.tar.xz\n   tar xf Python-3.7.7.tar.xz\n   cd Python-3.7.7\n   sudo ./configure\n   sudo make -j -l4\n   sudo make altinstall\n   cd ..\n   rm -rf Python-3.7.7.tar.xz\n   \n   \n   \n * Install git: sudo apt-get install git\n * Clone Alice Satellite: git clone https://github.com/project-alice-assistant/ProjectAliceSatellite ~/ProjectAlice\n * Create a virtual environment: cd ~/ProjectAlice && python3.7 -m venv venv\n * Upgrade pip:cd ~/ProjectAlice\n   ./venv/bin/pip install --upgrade pip\n   \n   \n   \n * Copy the init yaml file and edit it: sudo cp ~/ProjectAlice/ProjectAliceSatellite.yaml /boot/ProjectAliceSatellite.yaml && sudo nano /boot/ProjectAliceSatellite.yaml\n * Make your configurations\n * Start Alice manually with ./venv/bin/python main.py\n\n# Having issues with Alice? She doesn\'t hear you? Doesn\'t seem to start?\nHave a look at our Troubleshooting guide!',contentLowercase:'# satellite setup\nwarning\n\nthis is an alpha release! it is subject to major changes, and the target audience is people with some knowledge of their devices, coding, installing python modules and basic stuff!\n\ntip\n\nthis guide is intended for users that wish to manually install alice satellite without downloading our image.\n\n * download and burn rasppberry pi os lite: https://www.raspberrypi.org/downloads/raspberry-pi-os/\n * start it headless by placing 2 files on the boot partition of your sd card: * create a file called ssh, without extension and completely empty\n    * create a file called wpa_supplicant.conf, with the following content:\n   \n   country=ch\n   ctrl_interface=dir=/var/run/wpa_supplicant group=netdev\n   update_config=1\n   \n   network={\n       ssid=""\n       scan_ssid=1\n       psk=""\n       key_mgmt=wpa-psk\n   }\n   \n   \n    * make sure to fit the information (country, ssid and psk) with your wifi settings\n   \n   \n * plug your sd card in your device and start it\n * update your system: sudo apt-get update && sudo apt-get dist-upgrade -y\n * update your preferences: sudo raspi-config\n * make sure you have python 3.7 at least. if not (stretch), compile it from sources:sudo apt install -y libffi-dev libbz2-dev liblzma-dev libsqlite3-dev libncurses5-dev libgdbm-dev zlib1g-dev libreadline-dev libssl-dev tk-dev build-essential libncursesw5-dev libc6-dev openssl\n   wget https://www.python.org/ftp/python/3.7.7/python-3.7.7.tar.xz\n   tar xf python-3.7.7.tar.xz\n   cd python-3.7.7\n   sudo ./configure\n   sudo make -j -l4\n   sudo make altinstall\n   cd ..\n   rm -rf python-3.7.7.tar.xz\n   \n   \n   \n * install git: sudo apt-get install git\n * clone alice satellite: git clone https://github.com/project-alice-assistant/projectalicesatellite ~/projectalice\n * create a virtual environment: cd ~/projectalice && python3.7 -m venv venv\n * upgrade pip:cd ~/projectalice\n   ./venv/bin/pip install --upgrade pip\n   \n   \n   \n * copy the init yaml file and edit it: sudo cp ~/projectalice/projectalicesatellite.yaml /boot/projectalicesatellite.yaml && sudo nano /boot/projectalicesatellite.yaml\n * make your configurations\n * start alice manually with ./venv/bin/python main.py\n\n# having issues with alice? she doesn\'t hear you? doesn\'t seem to start?\nhave a look at our troubleshooting guide!',charsets:{}},{title:"Preinstalled",frontmatter:{title:"Preinstalled",sidebarDepth:3},regularPath:"/satsetup/preinstalled.html",relativePath:"satsetup/preinstalled.md",key:"v-041f4225",path:"/satsetup/preinstalled.html",headers:[{level:2,title:"Sys reqs",slug:"sys-reqs",charIndex:100},{level:2,title:"venv",slug:"venv",charIndex:161}],lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:"Sys reqs venv",content:"# Preinstalled Packages\nHere's the list of what's preinstalled on Project Alice Satellite image:\n\n# Sys reqs\n * git\n * snips-satellite\n * python3-pip\n * python3-venv\n\n# venv\n * requests\n * psutil\n * pyyaml\n * paho-mqtt",contentLowercase:"# preinstalled packages\nhere's the list of what's preinstalled on project alice satellite image:\n\n# sys reqs\n * git\n * snips-satellite\n * python3-pip\n * python3-venv\n\n# venv\n * requests\n * psutil\n * pyyaml\n * paho-mqtt",charsets:{}},{title:"Troubleshooting",frontmatter:{title:"Troubleshooting",sidebarDepth:3},regularPath:"/satsetup/troubleshooting.html",relativePath:"satsetup/troubleshooting.md",key:"v-68d9036d",path:"/satsetup/troubleshooting.html",lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:null,content:"Yes, nobody and nothing's perfect, but we try hard to be as close as perfect as possible. But hey, let's face it, it's a ton of code, and it can go wrong, or maybe you made something wrong, or you're using hardware we've never tested, or.... Ok, I stop.... Let's find a solution to your problem! Keep in mind that the first boot can take up to 15 minutes on your settings, hardware and all! Do not unplug your device if nothing happens, you might cut Alice in the middle of her installing!\n\nFirst thing we want to do is SSH to your device. Find out your device's IP and ssh to it using whatever you have. On Windows Kitty is a good solution, on other platforms your can simply connect through your terminal.\n\nThere are many things we can check, this is one path I'm giving you, but it's not the only one!\n\nFirst, let's check if the Project Alice service is up and running:\n\nsudo systemctl status ProjectAlice\n\nYou should get some info about the service. If you check it for a while you'll notice that it either continues with normal operations in which case you have to wait for it to start, or you'll notice it crashes and restarts all the time or even says that the service is dead.\n\nIf the service is dead or restarts all the time, let's debug it! Stop Project Alice. First pres CTRL+C to stop the systemctl command and in your terminal type\n\nsudo systemctl stop ProjectAlice\n\nLet's start it manually to have a better vision of the logs. In your ssh terminal type\n\ncd /home/pi/ProjectAlice\n./venv/bin/python main.py\n\n\nThis will manually start ProjectAlice printing out every details and stopping if any unrecoverable error arises. Check for these errors and report them if any on Github. Read the logs carefully, they always give hint if something's missing, a setting not set, something wrong.\n\nIf there're no errors and Alice seems to start fine, the last log line, on first boot, should be something like\n\nThis satellite is not yet registered for Project Alice. Searching for main unit\n\n# The logs say \"This satellite is not yet registered for Project Alice. Searching for main unit\" but nothing happens\nAt this point, you should ask alice to \"Add a new satellite\"\n\nWIP",contentLowercase:"yes, nobody and nothing's perfect, but we try hard to be as close as perfect as possible. but hey, let's face it, it's a ton of code, and it can go wrong, or maybe you made something wrong, or you're using hardware we've never tested, or.... ok, i stop.... let's find a solution to your problem! keep in mind that the first boot can take up to 15 minutes on your settings, hardware and all! do not unplug your device if nothing happens, you might cut alice in the middle of her installing!\n\nfirst thing we want to do is ssh to your device. find out your device's ip and ssh to it using whatever you have. on windows kitty is a good solution, on other platforms your can simply connect through your terminal.\n\nthere are many things we can check, this is one path i'm giving you, but it's not the only one!\n\nfirst, let's check if the project alice service is up and running:\n\nsudo systemctl status projectalice\n\nyou should get some info about the service. if you check it for a while you'll notice that it either continues with normal operations in which case you have to wait for it to start, or you'll notice it crashes and restarts all the time or even says that the service is dead.\n\nif the service is dead or restarts all the time, let's debug it! stop project alice. first pres ctrl+c to stop the systemctl command and in your terminal type\n\nsudo systemctl stop projectalice\n\nlet's start it manually to have a better vision of the logs. in your ssh terminal type\n\ncd /home/pi/projectalice\n./venv/bin/python main.py\n\n\nthis will manually start projectalice printing out every details and stopping if any unrecoverable error arises. check for these errors and report them if any on github. read the logs carefully, they always give hint if something's missing, a setting not set, something wrong.\n\nif there're no errors and alice seems to start fine, the last log line, on first boot, should be something like\n\nthis satellite is not yet registered for project alice. searching for main unit\n\n# the logs say \"this satellite is not yet registered for project alice. searching for main unit\" but nothing happens\nat this point, you should ask alice to \"add a new satellite\"\n\nwip",charsets:{}},{title:"Update Satellite to A2",frontmatter:{title:"Update Satellite to A2",sidebarDepth:3},regularPath:"/satsetup/updateToA2.html",relativePath:"satsetup/updateToA2.md",key:"v-8afd79b6",path:"/satsetup/updateToA2.html",lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:null,content:"WARNING\n\nThe alpha and beta releases are subject to major changes. The target audience is people with some knowledge of their devices, coding, installing python modules and basic stuff!\n\n# Updating to A2 branch or above from A1\n * See Satellite setup if you don't already have A1 installed\n\nMigrating from A1 image to A2 or above.\n\n * First double check your satellite is operational on A1\n * Then in the command line do the following\n * sudo systemctl stop ProjectAlice\n * git stash\n * git checkout 1.0.0-a2\n * sudo apt-get install portaudio19-dev\n * ./venv/bin/pip install importlib_metadata\n * ./venv/bin/pip install webrtcva\n * ./venv/bin/pip install wheel\n * ./venv/bin/pip install pyaudio\n * sudo systemctl start ProjectAlice\n * To check there are no errors ...\n * tail -f /var/log/syslog\n\nIf everything goes fine, and you have a satellite displayed in My Home. The satellite icon should now be green showing it's connected.\n\n# Having issues with Alice? She doesn't hear you? Doesn't seem to start?\nHave a look at our Troubleshooting guide!",contentLowercase:"warning\n\nthe alpha and beta releases are subject to major changes. the target audience is people with some knowledge of their devices, coding, installing python modules and basic stuff!\n\n# updating to a2 branch or above from a1\n * see satellite setup if you don't already have a1 installed\n\nmigrating from a1 image to a2 or above.\n\n * first double check your satellite is operational on a1\n * then in the command line do the following\n * sudo systemctl stop projectalice\n * git stash\n * git checkout 1.0.0-a2\n * sudo apt-get install portaudio19-dev\n * ./venv/bin/pip install importlib_metadata\n * ./venv/bin/pip install webrtcva\n * ./venv/bin/pip install wheel\n * ./venv/bin/pip install pyaudio\n * sudo systemctl start projectalice\n * to check there are no errors ...\n * tail -f /var/log/syslog\n\nif everything goes fine, and you have a satellite displayed in my home. the satellite icon should now be green showing it's connected.\n\n# having issues with alice? she doesn't hear you? doesn't seem to start?\nhave a look at our troubleshooting guide!",charsets:{}},{title:"Main unit setup",frontmatter:{title:"Main unit setup",sidebarDepth:3},regularPath:"/setup/",relativePath:"setup/README.md",key:"v-5c24c47a",path:"/setup/",headers:[{level:2,title:"Which way?",slug:"which-way",charIndex:177}],lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:"Which way?",content:"WARNING\n\nThis is a beta release! It is subject to changes, and the target audience is people with some knowledge of their devices, installing python modules and basic stuff!\n\n# Which way?\nWe have two ways of installing Alice for now, well, three, if you count Docker. As of october 2020 the prefered install method is manual setup, as fabricating an image to burn on your SD everytime we push a new version is time-consuming and error prone. We will resume image creation when version 1 is released.\n\n * Manual setup\n * Prefabricated Raspberry Pi OS image\n * Docker\n\n# Having issues with Alice? She doesn't hear you? Doesn't seem to start?\nHave a look at our Troubleshooting guide!",contentLowercase:"warning\n\nthis is a beta release! it is subject to changes, and the target audience is people with some knowledge of their devices, installing python modules and basic stuff!\n\n# which way?\nwe have two ways of installing alice for now, well, three, if you count docker. as of october 2020 the prefered install method is manual setup, as fabricating an image to burn on your sd everytime we push a new version is time-consuming and error prone. we will resume image creation when version 1 is released.\n\n * manual setup\n * prefabricated raspberry pi os image\n * docker\n\n# having issues with alice? she doesn't hear you? doesn't seem to start?\nhave a look at our troubleshooting guide!",charsets:{}},{title:"Docker",frontmatter:{title:"Docker",sidebarDepth:3},regularPath:"/setup/docker.html",relativePath:"setup/docker.md",key:"v-6fa52ccd",path:"/setup/docker.html",lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:null,content:"Thanks to the work of our community members, other way to install on more and more architecture and hardware emerge.\n\nThis is not maintained by us, but provides a Docker image for you to install Alice!\n\nhttps://github.com/poulsp/docker-Alice-Linux-x86",contentLowercase:"thanks to the work of our community members, other way to install on more and more architecture and hardware emerge.\n\nthis is not maintained by us, but provides a docker image for you to install alice!\n\nhttps://github.com/poulsp/docker-alice-linux-x86",charsets:{}},{title:"Install with our premade image",frontmatter:{title:"Install with our premade image",sidebarDepth:3,tags:["image","prefabricated","install","setup"]},regularPath:"/setup/image-install.html",relativePath:"setup/image-install.md",key:"v-d9d86b36",path:"/setup/image-install.html",lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:null,content:"WARNING\n\nThe last image we created for now is Beta 2! Did you check the manual-install for an updated Alice? We will resume image creation when version 1 is released.\n\n * Download our prefabricated Raspbian image: * Direct download\n    * This image has nothing more than Project Alice and a few dependencies.\n    * If you wonder what's inside, check the Preinstalled Packages Section\n   \n   \n * Extract the image from the 7zip archive\n\nTIP\n\nUse 7zip, it's open source, fast, has one of the best compression ratio and comes with nice features\n\n * Flash the image to your SD card\n * do not place any wpa_supplicant.conf or ssh file in /boot\n * do not boot your raspberry before doing this next point!!\n * Edit the /boot/ProjectAlice.yaml file. If there's no ProjectAlice.yaml file on the /boot partition, grab the latest from sources: ProjectAlice.yaml\n * Configure it according to your information and needs. All configurations have a little explanation, but most should be self-explanatory.\n * Make sure to have a space after the colons: * Wrong: forceRewrite:yes\n    * Correct: forceRewrite: yes\n   \n   \n * If the option value contains any special characters, enclose the whole value with double quotes: * Wrong: mqttPassword: a:%qJi\n    * Correct: mqttPassword: \"a:%qJi\"\n   \n   \n * Save it, unplug your SD card, plug it into your raspberry pi and power it up.\n * Alice should boot by herself and connect to your Wi-Fi, update, configure and start. This may take a while, so do not unplug until she has spoken to you!\n * If you have enabled the interface (by default), you can check what's going on by browsing to http://x.x.x.x:5000, replace with the Project Alice device's IP address.\n * The SSH User is pi, and the password is umbrella",contentLowercase:"warning\n\nthe last image we created for now is beta 2! did you check the manual-install for an updated alice? we will resume image creation when version 1 is released.\n\n * download our prefabricated raspbian image: * direct download\n    * this image has nothing more than project alice and a few dependencies.\n    * if you wonder what's inside, check the preinstalled packages section\n   \n   \n * extract the image from the 7zip archive\n\ntip\n\nuse 7zip, it's open source, fast, has one of the best compression ratio and comes with nice features\n\n * flash the image to your sd card\n * do not place any wpa_supplicant.conf or ssh file in /boot\n * do not boot your raspberry before doing this next point!!\n * edit the /boot/projectalice.yaml file. if there's no projectalice.yaml file on the /boot partition, grab the latest from sources: projectalice.yaml\n * configure it according to your information and needs. all configurations have a little explanation, but most should be self-explanatory.\n * make sure to have a space after the colons: * wrong: forcerewrite:yes\n    * correct: forcerewrite: yes\n   \n   \n * if the option value contains any special characters, enclose the whole value with double quotes: * wrong: mqttpassword: a:%qji\n    * correct: mqttpassword: \"a:%qji\"\n   \n   \n * save it, unplug your sd card, plug it into your raspberry pi and power it up.\n * alice should boot by herself and connect to your wi-fi, update, configure and start. this may take a while, so do not unplug until she has spoken to you!\n * if you have enabled the interface (by default), you can check what's going on by browsing to http://x.x.x.x:5000, replace with the project alice device's ip address.\n * the ssh user is pi, and the password is umbrella",charsets:{}},{title:"Main unit manual setup",frontmatter:{title:"Main unit manual setup",sidebarDepth:3,tags:["install","setup","main unit"]},regularPath:"/setup/manual-install.html",relativePath:"setup/manual-install.md",key:"v-61d60636",path:"/setup/manual-install.html",headers:[{level:2,title:"Install Rasppberry Pi OS",slug:"install-rasppberry-pi-os",charIndex:337},{level:2,title:"Configure your PI",slug:"configure-your-pi",charIndex:1722},{level:2,title:"Install Git and clone Alice",slug:"install-git-and-clone-alice",charIndex:2126},{level:2,title:"Start Alice",slug:"start-alice",charIndex:2420}],lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:"Install Rasppberry Pi OS Configure your PI Install Git and clone Alice Start Alice",content:"As of october 2020, manually installing is the prefered way, new versions coming out very fast, it's very consuming to create a new image everytime we update the sources. It's only a few simple steps from a running Rasppberry Pi OS to a running Alice. I guess I should also cover the Rasppberry Pi OS installation, just to be sure...\n\n# Install Rasppberry Pi OS\n * Download Rasppberry Pi OS, Lite version is recommended\n * Insert your 8 gig SD card into your computer and burn the Raspberry Pi OS image onto it * What means burn the image? Get rid of those matches, and have a look here\n   \n   \n * When your SD is flashed, unplug it and replug it, your computer should detect, among others, a new partition called boot\n * With your favorite text editor, create a new file on that partition. It is important, on Windows, that you do not right click and create a new text file! Open your text editor (hmmm notepad++ and do save it. Name the file ssh, without any extension. For Windows users, select all types instead of the default selected Normal text file (.txt)\n * Once saved, keep your ssh file open, and paste the following content into itcountry=CH\n   ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\n   update_config=1\n   \n   network={\n       ssid=\"\"\n       scan_ssid=1\n       psk=\"\"\n       key_mgmt=WPA-PSK\n   }\n   \n   \n   \n * Of course, take care to change the country code to match yours as well as add your WLAN ssid and password\n * Now, don't save, but choose Save under and save that file in the boot partition as well, but name it wpa_supplicant.conf, still as all types for Windows users.\n * Good, now unplug your SD card, plug it into your raspberry pi and power it. Let it a few seconds to boot.\n\n# Configure your PI\n * Connect to your pi through ssh. For windows users I recommand kitty\n * By default, the user is pi, and the password is raspberry\n * Update your system * sudo apt-get update\n    * sudo apt-get dist-upgrade -y\n   \n   \n * Open the configuration tool * sudo raspiconfig\n   \n   \n * Set the network name to ProjectAlice\n * Set your locales\n * Change the default user password\n * Reboot\n\n# Install Git and clone Alice\n * We need a few things to get Alice up now\n * Install git: sudo apt-get install git -y\n * Clone Alice:\n\ncd\ngit clone https://github.com/project-alice-assistant/ProjectAlice.git\n\n\n * Update to latest dev branch:\n\ncd ~/ProjectAlice\ngit checkout 1.0.0-b4\ngit pull\n\n\n# Start Alice\n * Copy the basic configuration on their place for first boot: sudo cp ~/ProjectAlice/ProjectAlice.yaml /boot/ProjectAlice.yaml\n * We need to configure a few things for her to start nicely: sudo nano /boot/ProjectAlice.yaml\n * Set that file parameters to your licking and setup.\n * You know what? We're done! Let's start her up!\n\ncd ~/ProjectAlice\npython3 main.py\n\n\n * This will start her, do some reboots and stuff. Once she loads, she'll start her own service, and you won't see any output on the console anymore. If you want to follow what going on after she rebooted, type tail -f /var/log/syslog, and you will see what she's doing.\n * Once you hear a ding, she's up!\n * No ding? => Have a look at our Troubleshooting guide!",contentLowercase:"as of october 2020, manually installing is the prefered way, new versions coming out very fast, it's very consuming to create a new image everytime we update the sources. it's only a few simple steps from a running rasppberry pi os to a running alice. i guess i should also cover the rasppberry pi os installation, just to be sure...\n\n# install rasppberry pi os\n * download rasppberry pi os, lite version is recommended\n * insert your 8 gig sd card into your computer and burn the raspberry pi os image onto it * what means burn the image? get rid of those matches, and have a look here\n   \n   \n * when your sd is flashed, unplug it and replug it, your computer should detect, among others, a new partition called boot\n * with your favorite text editor, create a new file on that partition. it is important, on windows, that you do not right click and create a new text file! open your text editor (hmmm notepad++ and do save it. name the file ssh, without any extension. for windows users, select all types instead of the default selected normal text file (.txt)\n * once saved, keep your ssh file open, and paste the following content into itcountry=ch\n   ctrl_interface=dir=/var/run/wpa_supplicant group=netdev\n   update_config=1\n   \n   network={\n       ssid=\"\"\n       scan_ssid=1\n       psk=\"\"\n       key_mgmt=wpa-psk\n   }\n   \n   \n   \n * of course, take care to change the country code to match yours as well as add your wlan ssid and password\n * now, don't save, but choose save under and save that file in the boot partition as well, but name it wpa_supplicant.conf, still as all types for windows users.\n * good, now unplug your sd card, plug it into your raspberry pi and power it. let it a few seconds to boot.\n\n# configure your pi\n * connect to your pi through ssh. for windows users i recommand kitty\n * by default, the user is pi, and the password is raspberry\n * update your system * sudo apt-get update\n    * sudo apt-get dist-upgrade -y\n   \n   \n * open the configuration tool * sudo raspiconfig\n   \n   \n * set the network name to projectalice\n * set your locales\n * change the default user password\n * reboot\n\n# install git and clone alice\n * we need a few things to get alice up now\n * install git: sudo apt-get install git -y\n * clone alice:\n\ncd\ngit clone https://github.com/project-alice-assistant/projectalice.git\n\n\n * update to latest dev branch:\n\ncd ~/projectalice\ngit checkout 1.0.0-b4\ngit pull\n\n\n# start alice\n * copy the basic configuration on their place for first boot: sudo cp ~/projectalice/projectalice.yaml /boot/projectalice.yaml\n * we need to configure a few things for her to start nicely: sudo nano /boot/projectalice.yaml\n * set that file parameters to your licking and setup.\n * you know what? we're done! let's start her up!\n\ncd ~/projectalice\npython3 main.py\n\n\n * this will start her, do some reboots and stuff. once she loads, she'll start her own service, and you won't see any output on the console anymore. if you want to follow what going on after she rebooted, type tail -f /var/log/syslog, and you will see what she's doing.\n * once you hear a ding, she's up!\n * no ding? => have a look at our troubleshooting guide!",charsets:{}},{title:"Preinstalled",frontmatter:{title:"Preinstalled",sidebarDepth:3},regularPath:"/setup/preinstalled.html",relativePath:"setup/preinstalled.md",key:"v-7851e59f",path:"/setup/preinstalled.html",lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:null,content:"Since beta 1, we do not preinstall all the dependencies anymore except for a few critical ones:\n\n * Python3 PIP\n * psutil\n * PyYAML\n * toml\n\nIf you are looking for the actual dependencies, once installed, have a look here:\n\n * System\n * Python",contentLowercase:"since beta 1, we do not preinstall all the dependencies anymore except for a few critical ones:\n\n * python3 pip\n * psutil\n * pyyaml\n * toml\n\nif you are looking for the actual dependencies, once installed, have a look here:\n\n * system\n * python",charsets:{}},{title:"Requirements",frontmatter:{title:"Requirements",sidebarDepth:3},regularPath:"/setup/requirements.html",relativePath:"setup/requirements.md",key:"v-2a8104ed",path:"/setup/requirements.html",lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:null,content:"We've successfully run Project Alice on raspberry Pi 3b, 3b+, 3a+ and all variants of 4b\n\nOther than that you will need a microphone and a speaker if you intend to have the main unit also act as an assistant. Users that want to have the main unit on a hidden device and only use satellites can unplug the mic and speaker after first boot.",contentLowercase:"we've successfully run project alice on raspberry pi 3b, 3b+, 3a+ and all variants of 4b\n\nother than that you will need a microphone and a speaker if you intend to have the main unit also act as an assistant. users that want to have the main unit on a hidden device and only use satellites can unplug the mic and speaker after first boot.",charsets:{}},{title:"Room configuration",frontmatter:{title:"Room configuration",sidebarDepth:3},regularPath:"/setup/room-configuration.html",relativePath:"setup/room-configuration.md",key:"v-02cf5705",path:"/setup/room-configuration.html",headers:[{level:2,title:"Editing your home",slug:"editing-your-home",charIndex:848},{level:3,title:"Setup and configuration of your locations",slug:"setup-and-configuration-of-your-locations",charIndex:1405},{level:3,title:"Setup and configuration of devices",slug:"setup-and-configuration-of-devices",charIndex:5671}],lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:"Editing your home Setup and configuration of your locations Setup and configuration of devices",content:'WARNING\n\nThis is just an beta version....\n\n# MyHome\nOnce you want to get the most out of Alice and her skills, you will have to setup your house with all its rooms and devices. Remember, Alice won\'t share your information, your rooms and devices are save with her and will never leave your local network! All the configuration can be done with the web interface "myHome".\n\nInitially this screen will only have one Room "The Hive" and one device "Alice". This is where Alice lives. It might be a bit trist and too empty, but we will adress this. With many of the skills come new device types to fill your home. For now we will focus on creating more rooms and built your home.\n\nTIP\n\nDid you know that you can click on most devices and execute one main action? Try clicking the Alice umbrella - it will stop and start Alice from listening to you!\n\n# Editing your home\nLike everywhere in the interface, you can find your tools on the top right of the screen. Click on the pencil to enter the editing mode! The first toolbar groups the tools for the different categories and offers general actions. From left to right you currently will find:\n\n * An option to export your setup\n * A map icon, which holds all the tools required for changing the layout of your home\n * A plug icon, which holds all the tools for adding and configuring devices\n * A save icon, for saving all the changes you did to your home\n\n# Setup and configuration of your locations\nFirst you have to setup your , then you can add more devices. Locations can be rooms or areas, they can be stacked, but currently not grouped. When you click the map icon in the toolbar, you will get the following options:\n\n * A plus sign: This is where you add new locations or remove old ones\n * A paint roller to color in the floors\n * A hard hat: Here you can add, move and delete walls, windows, stairs and doors\n * The couch for adding, moving and deleting furniture and decorations\n * The moving tool, to move, resize, delete and sort your locations\n * The options tool, for changing the rooms name and adding synonyms\n\n# Add a location\nFirst of all we have to add a location. Click the plus sign in the location editing tool bar. Now you can click anywhere on the empty space of the map in front of you. When you click a popup will open and ask you for the name of the newly created location. When you confirm the popup, the new location will appear and you can move it around by dragging it, resize it by dragging the corner or change the sort order compared to the other rooms by clicking the arrows. (This allows you to have your garden be all around the house, because it was moved to the background!)\n\nI would suggest you add a few more rooms from your home by repeating these steps - then adding in the other features is more fun, than for a single room!\n\nTIP\n\nIf you want to get rid of "TheHive" you first have to move the Alice main device to a different room!\n\n# Stylize your rooms (OPTIONAL)\nNow that we have created a few rooms, it is time to make them more colorful. First lets paint the floor:\n\n * Click on the paint roller in the location editing toolbar\n * hover over the top part of the map where a lot of different floor types will apear for you to choose from\n * Click one of them!\n * Now that one of the floor tiles has a yellow marker around it, click on one of your rooms And there you got your first floor painted.\n\nRepeat that for the other rooms, before we head over to the walls:\n\n * Click on the hard hat icon in the location editing toolbar As long as you don\'t have any type of window etc. selected in the library at the top of the map, you are in the wall building mode\n * Click on one of your rooms, and you will find a newly placed wall\n * Resize and move the wall around to add divisions between your rooms. Keep empty spaces for doors and windows! Once you have all the walls placed, we will move on to adding in other building features\n * Select one of the doors or windows in the top of your map - just like you did for the floor colors!\n * Add them in just like walls, move them around and resize them to your liking!\n\nTIP\n\nIf you want to delete something, be it a room, decoration or device, you can rightclick it in its adding or moving mode!\n\nFinally, when all your rooms are created, you can add in some static decorations:\n\n * Click on the couch icon in the toolbar\n * Select your decoration at the top of the map\n * Add, move and resize them just like everything else\n * SAVE! by using the shaking disc icon in the main toolbar\n\nTIP\n\nWhenever you have unsaved changes the disc icon will start shaking! Click it to save and reload the page!\n\nThat\'s it, now your home should look a lot nicer than before! Time to add in some functionality!\n\n# Configure your locations\nWhen you click on the settings icon in the location toolbar, you can choose the location you want to configure. For now you have only two options that will popup in a sidebar as soon as you click on a room. First, you have a little pencil near the locations name. Click it to open a popup where you can change the main name of that location. And second, you can add synonyms for your locations. Synonyms will be useable for voice input just like the main name of the room. That way you can "play music in the office" or "play music at my workspace" and alice will know it is the same.\n\n(pending feature) Location names and synonyms allow you to add in new names for rooms, that are unique to you! For example include your childs name into the room name (or your name in the synonym for the workshop... 😉)!\n\nNow that you are done with the creation of the home, let\'s get started with adding in some life!\n\n# Setup and configuration of devices\nYou already saw your first device when you opened myHome for the first time. The small umbrella is your main device. When you click it, you will toggle the wakeword detection on and off. (pending feature: You can see the current state by the shown icon! Has it the bright red colors, Alice can start listening to you, when you call her. Is it gray? Alice is currently sleeping and won\'t listen to you. Click the icon to wake her up!)\n\nThe menu for devices is much like the menu for locations. When you click on the plug icon in the toolbar, you will get the following options:\n\n * The plus sign again is for adding new devices and deleting old ones.\n * The chainlink is for connecting one device to other locations. Sometimes even connecting a device only to the location is in, will unlock new settings!\n * The moving tool is again for chaning the postion or resize the device icon\n * The options tool is for changing the settings of a device and all the links created for it\n\n# Adding a device\nYou can add in a new device by clicking the plus icon in the devices toolbar. Just like for the locations, you can choose the device type in the dropdown menu on the top of your map\n\nTIP\n\nAre there currently no device types shown? Is there nothing to click on the top of the map? Make sure to install a few skills that provide device types!\n\nSome skills that provide new device types to add in are:\n\n * AliceSatellite: Required to create satellites. Clicking a satellite will toggle the hotword and the icon shows its current state\n * Tasmota: Switches, Thermometers, Sensors\n * RandomIpDevice: Every device that has an ip adress, or even websites you want to check or visit. The icon shows if the device is reachable and a click will open the supplied link.\n * HomeAssistant: Bring your HomeAssistant devices over to Alice. Although you can\'t add the devices manually, the skill will import your devices and you can arrange them in your map! Outside of myHome a whole lot of more functions await in this skill!\n * Vacuum: Add and control your Vacuum. Link it to the rooms it is responsible for and setup everything that is required. (Currently only for Roborock 😦 )\n\nBy adding a device, you only create an empty dummy for now - to give it life, you have to configure it. Before we do so, let\'s link it to all the related locations.\n\n# Creating device links to locations\nWhen you enter the device linking mode by clicking the connection tool in the devices toolbar, you can link one device to as many locations as you like - or the device allows. Start by clicking on the device you want to link. You can see the currently active device by the highlight around it. As long as a device is selected, you can add links to rooms just by clicking onto them. If you want to delete a link, just right click on the room while the device is still connected. You can see all existing links for the currently selected device by the connection lines.\n\nOk, so now we got devices, and links to rooms - but so far nothing is configured or more than decoration!\n\n# Configure devices and their links\nLet\'s click on the last icon in the device editing toolbar - the options. Just like the options for the locations, this will open a sidebar once you click on a device. In addition you will see all the existing links by their connections on the map. Every device has a name. This name can be used by skills to adress specific devices (e.g. "turn of the spotlight"). You can change this name by the small pencil next to its name. As your device has no name yet, it will only show the pencil at the first position in the sidebar.\n\nThe rest of the sidebar is depending on the device type and the current state. Let\'s take a look at the satellite provided by AliceSatellite: It has only a big "Find Device" button, nothing more. Clicking that button is basically just like telling Alice "Please add a new alice satellite in the living room". She will start broadcasting for the new device an trigger the installation. When the installation was sucessfull, the "Find Device" button will not be shown anymore.\n\nLet\'s take a look at another device type: Roborock by the skill Vacuum: Just like the satellite, there is a "Find Device" button on the top, but clicking it now, will just give you an error message, because you don\'t have supplied all the required information first! To do that, look below the big button. You will find a field for the ip and the token. Only after supplying them, Alice can try to connect to the vacuum. Switiching the input field should save automatically in these settings - to be sure, pressing enter will save as well! But that is not all you can do in the settings for the vacuum. Below the required information for the device, you see a listing of all linked rooms. In case of the Roborock, you need one room id for each room your vacuum discovered, to be able to start the cleaning in that specific area. This is the place where you can save them for Alice.',contentLowercase:'warning\n\nthis is just an beta version....\n\n# myhome\nonce you want to get the most out of alice and her skills, you will have to setup your house with all its rooms and devices. remember, alice won\'t share your information, your rooms and devices are save with her and will never leave your local network! all the configuration can be done with the web interface "myhome".\n\ninitially this screen will only have one room "the hive" and one device "alice". this is where alice lives. it might be a bit trist and too empty, but we will adress this. with many of the skills come new device types to fill your home. for now we will focus on creating more rooms and built your home.\n\ntip\n\ndid you know that you can click on most devices and execute one main action? try clicking the alice umbrella - it will stop and start alice from listening to you!\n\n# editing your home\nlike everywhere in the interface, you can find your tools on the top right of the screen. click on the pencil to enter the editing mode! the first toolbar groups the tools for the different categories and offers general actions. from left to right you currently will find:\n\n * an option to export your setup\n * a map icon, which holds all the tools required for changing the layout of your home\n * a plug icon, which holds all the tools for adding and configuring devices\n * a save icon, for saving all the changes you did to your home\n\n# setup and configuration of your locations\nfirst you have to setup your , then you can add more devices. locations can be rooms or areas, they can be stacked, but currently not grouped. when you click the map icon in the toolbar, you will get the following options:\n\n * a plus sign: this is where you add new locations or remove old ones\n * a paint roller to color in the floors\n * a hard hat: here you can add, move and delete walls, windows, stairs and doors\n * the couch for adding, moving and deleting furniture and decorations\n * the moving tool, to move, resize, delete and sort your locations\n * the options tool, for changing the rooms name and adding synonyms\n\n# add a location\nfirst of all we have to add a location. click the plus sign in the location editing tool bar. now you can click anywhere on the empty space of the map in front of you. when you click a popup will open and ask you for the name of the newly created location. when you confirm the popup, the new location will appear and you can move it around by dragging it, resize it by dragging the corner or change the sort order compared to the other rooms by clicking the arrows. (this allows you to have your garden be all around the house, because it was moved to the background!)\n\ni would suggest you add a few more rooms from your home by repeating these steps - then adding in the other features is more fun, than for a single room!\n\ntip\n\nif you want to get rid of "thehive" you first have to move the alice main device to a different room!\n\n# stylize your rooms (optional)\nnow that we have created a few rooms, it is time to make them more colorful. first lets paint the floor:\n\n * click on the paint roller in the location editing toolbar\n * hover over the top part of the map where a lot of different floor types will apear for you to choose from\n * click one of them!\n * now that one of the floor tiles has a yellow marker around it, click on one of your rooms and there you got your first floor painted.\n\nrepeat that for the other rooms, before we head over to the walls:\n\n * click on the hard hat icon in the location editing toolbar as long as you don\'t have any type of window etc. selected in the library at the top of the map, you are in the wall building mode\n * click on one of your rooms, and you will find a newly placed wall\n * resize and move the wall around to add divisions between your rooms. keep empty spaces for doors and windows! once you have all the walls placed, we will move on to adding in other building features\n * select one of the doors or windows in the top of your map - just like you did for the floor colors!\n * add them in just like walls, move them around and resize them to your liking!\n\ntip\n\nif you want to delete something, be it a room, decoration or device, you can rightclick it in its adding or moving mode!\n\nfinally, when all your rooms are created, you can add in some static decorations:\n\n * click on the couch icon in the toolbar\n * select your decoration at the top of the map\n * add, move and resize them just like everything else\n * save! by using the shaking disc icon in the main toolbar\n\ntip\n\nwhenever you have unsaved changes the disc icon will start shaking! click it to save and reload the page!\n\nthat\'s it, now your home should look a lot nicer than before! time to add in some functionality!\n\n# configure your locations\nwhen you click on the settings icon in the location toolbar, you can choose the location you want to configure. for now you have only two options that will popup in a sidebar as soon as you click on a room. first, you have a little pencil near the locations name. click it to open a popup where you can change the main name of that location. and second, you can add synonyms for your locations. synonyms will be useable for voice input just like the main name of the room. that way you can "play music in the office" or "play music at my workspace" and alice will know it is the same.\n\n(pending feature) location names and synonyms allow you to add in new names for rooms, that are unique to you! for example include your childs name into the room name (or your name in the synonym for the workshop... 😉)!\n\nnow that you are done with the creation of the home, let\'s get started with adding in some life!\n\n# setup and configuration of devices\nyou already saw your first device when you opened myhome for the first time. the small umbrella is your main device. when you click it, you will toggle the wakeword detection on and off. (pending feature: you can see the current state by the shown icon! has it the bright red colors, alice can start listening to you, when you call her. is it gray? alice is currently sleeping and won\'t listen to you. click the icon to wake her up!)\n\nthe menu for devices is much like the menu for locations. when you click on the plug icon in the toolbar, you will get the following options:\n\n * the plus sign again is for adding new devices and deleting old ones.\n * the chainlink is for connecting one device to other locations. sometimes even connecting a device only to the location is in, will unlock new settings!\n * the moving tool is again for chaning the postion or resize the device icon\n * the options tool is for changing the settings of a device and all the links created for it\n\n# adding a device\nyou can add in a new device by clicking the plus icon in the devices toolbar. just like for the locations, you can choose the device type in the dropdown menu on the top of your map\n\ntip\n\nare there currently no device types shown? is there nothing to click on the top of the map? make sure to install a few skills that provide device types!\n\nsome skills that provide new device types to add in are:\n\n * alicesatellite: required to create satellites. clicking a satellite will toggle the hotword and the icon shows its current state\n * tasmota: switches, thermometers, sensors\n * randomipdevice: every device that has an ip adress, or even websites you want to check or visit. the icon shows if the device is reachable and a click will open the supplied link.\n * homeassistant: bring your homeassistant devices over to alice. although you can\'t add the devices manually, the skill will import your devices and you can arrange them in your map! outside of myhome a whole lot of more functions await in this skill!\n * vacuum: add and control your vacuum. link it to the rooms it is responsible for and setup everything that is required. (currently only for roborock 😦 )\n\nby adding a device, you only create an empty dummy for now - to give it life, you have to configure it. before we do so, let\'s link it to all the related locations.\n\n# creating device links to locations\nwhen you enter the device linking mode by clicking the connection tool in the devices toolbar, you can link one device to as many locations as you like - or the device allows. start by clicking on the device you want to link. you can see the currently active device by the highlight around it. as long as a device is selected, you can add links to rooms just by clicking onto them. if you want to delete a link, just right click on the room while the device is still connected. you can see all existing links for the currently selected device by the connection lines.\n\nok, so now we got devices, and links to rooms - but so far nothing is configured or more than decoration!\n\n# configure devices and their links\nlet\'s click on the last icon in the device editing toolbar - the options. just like the options for the locations, this will open a sidebar once you click on a device. in addition you will see all the existing links by their connections on the map. every device has a name. this name can be used by skills to adress specific devices (e.g. "turn of the spotlight"). you can change this name by the small pencil next to its name. as your device has no name yet, it will only show the pencil at the first position in the sidebar.\n\nthe rest of the sidebar is depending on the device type and the current state. let\'s take a look at the satellite provided by alicesatellite: it has only a big "find device" button, nothing more. clicking that button is basically just like telling alice "please add a new alice satellite in the living room". she will start broadcasting for the new device an trigger the installation. when the installation was sucessfull, the "find device" button will not be shown anymore.\n\nlet\'s take a look at another device type: roborock by the skill vacuum: just like the satellite, there is a "find device" button on the top, but clicking it now, will just give you an error message, because you don\'t have supplied all the required information first! to do that, look below the big button. you will find a field for the ip and the token. only after supplying them, alice can try to connect to the vacuum. switiching the input field should save automatically in these settings - to be sure, pressing enter will save as well! but that is not all you can do in the settings for the vacuum. below the required information for the device, you see a listing of all linked rooms. in case of the roborock, you need one room id for each room your vacuum discovered, to be able to start the cleaning in that specific area. this is the place where you can save them for alice.',charsets:{}},{title:"Troubleshooting",frontmatter:{title:"Troubleshooting",sidebarDepth:3},regularPath:"/setup/troubleshooting.html",relativePath:"setup/troubleshooting.md",key:"v-5d648005",path:"/setup/troubleshooting.html",lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:null,content:"Yes, nobody and nothing's perfect, but we try hard to be as close as perfect as possible. But hey, let's face it, it's a ton of code and it can go wrong, or maybe you made something wrong, or you're using hardware we've never tested, or.... Ok, I stop.... Let's find a solution to your problem! Keep in mind that the first boot can take up to 15 minutes of silence depending on your settings, hardware and all! Do not unplug your device if nothing happens, you might cut Alice in the middle of her training!\n\nFirst thing we want to do is SSH to your device. Find out your device's IP and ssh to it using whatever you have. On Windows Kitty is a good solution, on other platforms your can simply connect through your terminal.\n\nThere are many things we can check, this is one path I'm giving you, but it's not the only one!\n\nFirst, let's check if the Project Alice service is up and running:\n\nsudo systemctl status ProjectAlice\n\nYou should get some info about the service. If you check it for a while you'll notice that it either continues with normal operations in which case you have to wait for it to start, or you'll notice it crashes and restarts all the time or even says that the service is dead.\n\nIf the service is dead or restarts all the time, let's debug it! Stop Project Alice. First pres CTRL+C to stop the systemctl command and in your terminal type.\n\nsudo systemctl stop ProjectAlice\n\nLet's start it manually to have a better vision of the logs. In your ssh terminal type\n\ncd /home/pi/ProjectAlice\n./venv/bin/python main.py\n\n\nThis will manually start ProjectAlice printing out every details and stopping if any unrecoverable error arises. Check for these errors and report them if any on Github. Read the logs carefully, they always give hint if something's missing, a setting not set, something wrong.\n\nIf there're no errors and Alice seems to start fine, the last log line, on first boot, should be something like\n\nStarting Alice Core\n\nAnd you should hear her welcoming you.\n\n# The logs say she is asking for a new user, but I don't hear anthing\nCommon audio problem? Stop Alice with CTRL+c and let's see if your audio device is installed by using\n\naplay -l\narecord -l\n\n\nThose commands should return first the device used to play audio and second to record audio. If your device is not listed, there's a problem!\n\nWIP",contentLowercase:"yes, nobody and nothing's perfect, but we try hard to be as close as perfect as possible. but hey, let's face it, it's a ton of code and it can go wrong, or maybe you made something wrong, or you're using hardware we've never tested, or.... ok, i stop.... let's find a solution to your problem! keep in mind that the first boot can take up to 15 minutes of silence depending on your settings, hardware and all! do not unplug your device if nothing happens, you might cut alice in the middle of her training!\n\nfirst thing we want to do is ssh to your device. find out your device's ip and ssh to it using whatever you have. on windows kitty is a good solution, on other platforms your can simply connect through your terminal.\n\nthere are many things we can check, this is one path i'm giving you, but it's not the only one!\n\nfirst, let's check if the project alice service is up and running:\n\nsudo systemctl status projectalice\n\nyou should get some info about the service. if you check it for a while you'll notice that it either continues with normal operations in which case you have to wait for it to start, or you'll notice it crashes and restarts all the time or even says that the service is dead.\n\nif the service is dead or restarts all the time, let's debug it! stop project alice. first pres ctrl+c to stop the systemctl command and in your terminal type.\n\nsudo systemctl stop projectalice\n\nlet's start it manually to have a better vision of the logs. in your ssh terminal type\n\ncd /home/pi/projectalice\n./venv/bin/python main.py\n\n\nthis will manually start projectalice printing out every details and stopping if any unrecoverable error arises. check for these errors and report them if any on github. read the logs carefully, they always give hint if something's missing, a setting not set, something wrong.\n\nif there're no errors and alice seems to start fine, the last log line, on first boot, should be something like\n\nstarting alice core\n\nand you should hear her welcoming you.\n\n# the logs say she is asking for a new user, but i don't hear anthing\ncommon audio problem? stop alice with ctrl+c and let's see if your audio device is installed by using\n\naplay -l\narecord -l\n\n\nthose commands should return first the device used to play audio and second to record audio. if your device is not listed, there's a problem!\n\nwip",charsets:{}},{title:"Hotword and wakeword",frontmatter:{title:"Hotword and wakeword",sidebarDepth:3},regularPath:"/setup/wakeword.html",relativePath:"setup/wakeword.md",key:"v-190fa89e",path:"/setup/wakeword.html",headers:[{level:2,title:"Hotword",slug:"hotword",charIndex:191},{level:2,title:"Wakeword",slug:"wakeword",charIndex:342},{level:3,title:"Reset everything",slug:"reset-everything",charIndex:605},{level:3,title:"Create a wakeword manually",slug:"create-a-wakeword-manually",charIndex:862}],lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:"Hotword Wakeword Reset everything Create a wakeword manually",content:'There are two types of wakewords for Alice. The , that works for everybody, and are preinstalled, and the personal , that only work for one person and are individually created in runtime.\n\n# Hotword\nAt the moment following are supported:\n\n * "Hey Snips"\n\nThis is subject to change and will be replaced when multiple engines are supported.\n\n# Wakeword\nThe personal is created after a new user is registered for Alice. This can be right after her start for the first user, or when you add in a new user later on. If you decide not to add a at the start, you (currently) have two ways to add it later on.\n\n# Reset everything\nDelete all memory of Alice and start over with the user creation of the admin user. This way is only recommended when you just created your instance of Alice.\n\nsudo rm ~/ProjectAlice/system/database/data.db\nsudo systemctl restart Alice\n\n\n# Create a wakeword manually\nHere you will create your own recordings, cut them on any device and insert them into Alice.\n\n 1. Record yourself 3 times saying "Hey Alice". Name the files 0.wav 1.wav and 2.wav\n 2. Crop the recording as close as possible (cutting of a millisecond should be better than keeping too much silence)\n\nTIP\n\nA free tool for this could be Audacity\n\n 3. Move the files to ~/ProjectAlice/trained/hotwords/%username%/. Add your username into the path, it should always be written in lower case!\n    \n    \n 4. Create a file "config.json" in the same folder with following content (again replace the %username% with your name, all lower case)\n    \n    \n\n{\n    "num_mel_bins": 13,\n    "window_type": "povey",\n    "kind": "personal",\n    "window_size": 10,\n    "cepstral_lifter": 22.0,\n    "use_energy": false,\n    "energy_floor": 0.0,\n    "from_mfcc": 1,\n    "dtw_ref": 0.22,\n    "raw_energy": true,\n    "frame_length_ms": 25.0,\n    "frame_shift_ms": 10.0,\n    "preemphasis_coefficient": 0.97,\n    "to_mfcc": 13,\n    "sample_rate": 16000,\n    "dither": 0.0,\n    "mel_low_freq": 20,\n    "shift": 10,\n    "num_mfcc": 13,\n    "band_radius": 10,\n    "hotword_key": "%username%"\n}\n\n\n 5. sudo nano /etc/snips.toml\n    \n    \n 6. Modify the following block to include the path to your and the sensitivity. Don\'t forget to replace %username%!\n    \n    \n\n[snips-hotword]\nmodel = ["/home/pi/ProjectAlice/trained/hotwords/snips_hotword=0.53","/home/pi/ProjectAlice/trained/hotwords/%username%=0.48"]\n\n\n 7. Restart Alice\n\nsudo systemctl restart ProjectAlice',contentLowercase:'there are two types of wakewords for alice. the , that works for everybody, and are preinstalled, and the personal , that only work for one person and are individually created in runtime.\n\n# hotword\nat the moment following are supported:\n\n * "hey snips"\n\nthis is subject to change and will be replaced when multiple engines are supported.\n\n# wakeword\nthe personal is created after a new user is registered for alice. this can be right after her start for the first user, or when you add in a new user later on. if you decide not to add a at the start, you (currently) have two ways to add it later on.\n\n# reset everything\ndelete all memory of alice and start over with the user creation of the admin user. this way is only recommended when you just created your instance of alice.\n\nsudo rm ~/projectalice/system/database/data.db\nsudo systemctl restart alice\n\n\n# create a wakeword manually\nhere you will create your own recordings, cut them on any device and insert them into alice.\n\n 1. record yourself 3 times saying "hey alice". name the files 0.wav 1.wav and 2.wav\n 2. crop the recording as close as possible (cutting of a millisecond should be better than keeping too much silence)\n\ntip\n\na free tool for this could be audacity\n\n 3. move the files to ~/projectalice/trained/hotwords/%username%/. add your username into the path, it should always be written in lower case!\n    \n    \n 4. create a file "config.json" in the same folder with following content (again replace the %username% with your name, all lower case)\n    \n    \n\n{\n    "num_mel_bins": 13,\n    "window_type": "povey",\n    "kind": "personal",\n    "window_size": 10,\n    "cepstral_lifter": 22.0,\n    "use_energy": false,\n    "energy_floor": 0.0,\n    "from_mfcc": 1,\n    "dtw_ref": 0.22,\n    "raw_energy": true,\n    "frame_length_ms": 25.0,\n    "frame_shift_ms": 10.0,\n    "preemphasis_coefficient": 0.97,\n    "to_mfcc": 13,\n    "sample_rate": 16000,\n    "dither": 0.0,\n    "mel_low_freq": 20,\n    "shift": 10,\n    "num_mfcc": 13,\n    "band_radius": 10,\n    "hotword_key": "%username%"\n}\n\n\n 5. sudo nano /etc/snips.toml\n    \n    \n 6. modify the following block to include the path to your and the sensitivity. don\'t forget to replace %username%!\n    \n    \n\n[snips-hotword]\nmodel = ["/home/pi/projectalice/trained/hotwords/snips_hotword=0.53","/home/pi/projectalice/trained/hotwords/%username%=0.48"]\n\n\n 7. restart alice\n\nsudo systemctl restart projectalice',charsets:{}},{title:"Introduction to Skill Development",frontmatter:{title:"Introduction to Skill Development",sidebarDepth:2},regularPath:"/skill-development/",relativePath:"skill-development/README.md",key:"v-20fa3876",path:"/skill-development/",headers:[{level:2,title:"Technical Requirements",slug:"technical-requirements",charIndex:388},{level:3,title:"Python programming language",slug:"python-programming-language",charIndex:413},{level:3,title:"Github account",slug:"github-account",charIndex:1247},{level:3,title:"Running Alice",slug:"running-alice",charIndex:1447},{level:2,title:"What makes a good Skill?",slug:"what-makes-a-good-skill",charIndex:1884},{level:3,title:"Fulfilling a need the user has",slug:"fulfilling-a-need-the-user-has",charIndex:1911},{level:3,title:"Having an easy to use voice interface",slug:"having-an-easy-to-use-voice-interface",charIndex:2358},{level:2,title:"Skill terminology",slug:"skill-terminology",charIndex:2930}],lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:"Technical Requirements Python programming language Github account Running Alice What makes a good Skill? Fulfilling a need the user has Having an easy to use voice interface Skill terminology",content:"# Intro\nAlice's are the voice applications that provide different functionality for users. To create a Skill requires at least basic technical experience, an Alice installation, and an idea of what your Skill will do, and how people will use it.\n\nTIP\n\nExplore the fundamental building blocks of a Skill, and the knowledge required to create meaningful and engaging voice interactions.\n\n# Technical Requirements\n# Python programming language\nSkills for Alice are written using the Python programming language. A simple Skill can be a great way for new developers to try Python out in a real project, whilst experienced programmers will quickly see the powerful possibilities available in a well crafted Skill.\n\nIf you aren't familiar with the basics of Python, check one of the many great tutorials online to get you started. If you've programmed in other object-oriented languages, like Javascript or C#, then you'll be able to pick it up, but if you're totally new to programming, you might want to look at an introductory programming course.\n\nIt is also required that you read and understand our Code guidelines\n\nFor a quick jump into setting your IDE for Alice, read the following community made documentation: Getting started with Pycharm.\n\n# Github account\nSkills are hosted on Github, so you will need to create an account there if you don't already have one. It is good to have a basic understanding of the Git basics and GitHub basics.\n\n# Running Alice\nTo test your Skill out, you will need to set up an Alice device. Currently, Alice can be installed on devices running debian stretch/buster. Alice also comes with a number of helpful tools to create new Skills, and validate them. If you aren't yet familiar with how Alice works, check out the overview of Alice components to understand the many technologies that come together to provide an intelligent voice assistant.\n\n# What makes a good Skill?\n# Fulfilling a need the user has\nGood Skills meet one or more of the user's needs. Popular Skills are popular because people use them frequently - for instance, to set alarms, reminders, or to identify the time in other time zones. On the other hand, a Skill that, say, recites π to 100 digits might be pretty cool, but when was the last time you needed to know π to 100 digits? Contrast that with the last time you set a reminder on your phone.\n\n# Having an easy to use voice interface\nJust like a web page with a thoughtfully-designed interface is much more pleasant to use, a Skill with a well-designed voice interface is a delight, not a chore, to use. You should anticipate the task the user is trying to accomplish, and how to make that as straightforward as possible.\n\nIf you have an idea for a Skill, it's a great idea to join our Discord Chat, specifically the skills channel, and share what your plans are. You'll be able to get constructive and helpful feedback on your Skill from an experienced community.\n\n# Skill terminology\nYou'll notice some new terms as you start to develop Skills.\n\n * utterance - An utterance is a phrase spoken by the User, after the User says the Wake Word.\n * intent - An intent represents an action that fulfills a user’s spoken request. Intents can optionally have arguments called slots.\n * slot - A slot is an argument to an intent giving a voice assistant more information about that request.\n\nConsider a weather skill. It might have e.g. an intent GetWeather with the following utterances (slots are marked in red):what's the weather like in Toronto?Tell me the weather in Toronto please?\n\nIf you encounter anything else you're not familiar with, checkout the Alice Glossary.",contentLowercase:"# intro\nalice's are the voice applications that provide different functionality for users. to create a skill requires at least basic technical experience, an alice installation, and an idea of what your skill will do, and how people will use it.\n\ntip\n\nexplore the fundamental building blocks of a skill, and the knowledge required to create meaningful and engaging voice interactions.\n\n# technical requirements\n# python programming language\nskills for alice are written using the python programming language. a simple skill can be a great way for new developers to try python out in a real project, whilst experienced programmers will quickly see the powerful possibilities available in a well crafted skill.\n\nif you aren't familiar with the basics of python, check one of the many great tutorials online to get you started. if you've programmed in other object-oriented languages, like javascript or c#, then you'll be able to pick it up, but if you're totally new to programming, you might want to look at an introductory programming course.\n\nit is also required that you read and understand our code guidelines\n\nfor a quick jump into setting your ide for alice, read the following community made documentation: getting started with pycharm.\n\n# github account\nskills are hosted on github, so you will need to create an account there if you don't already have one. it is good to have a basic understanding of the git basics and github basics.\n\n# running alice\nto test your skill out, you will need to set up an alice device. currently, alice can be installed on devices running debian stretch/buster. alice also comes with a number of helpful tools to create new skills, and validate them. if you aren't yet familiar with how alice works, check out the overview of alice components to understand the many technologies that come together to provide an intelligent voice assistant.\n\n# what makes a good skill?\n# fulfilling a need the user has\ngood skills meet one or more of the user's needs. popular skills are popular because people use them frequently - for instance, to set alarms, reminders, or to identify the time in other time zones. on the other hand, a skill that, say, recites π to 100 digits might be pretty cool, but when was the last time you needed to know π to 100 digits? contrast that with the last time you set a reminder on your phone.\n\n# having an easy to use voice interface\njust like a web page with a thoughtfully-designed interface is much more pleasant to use, a skill with a well-designed voice interface is a delight, not a chore, to use. you should anticipate the task the user is trying to accomplish, and how to make that as straightforward as possible.\n\nif you have an idea for a skill, it's a great idea to join our discord chat, specifically the skills channel, and share what your plans are. you'll be able to get constructive and helpful feedback on your skill from an experienced community.\n\n# skill terminology\nyou'll notice some new terms as you start to develop skills.\n\n * utterance - an utterance is a phrase spoken by the user, after the user says the wake word.\n * intent - an intent represents an action that fulfills a user’s spoken request. intents can optionally have arguments called slots.\n * slot - a slot is an argument to an intent giving a voice assistant more information about that request.\n\nconsider a weather skill. it might have e.g. an intent getweather with the following utterances (slots are marked in red):what's the weather like in toronto?tell me the weather in toronto please?\n\nif you encounter anything else you're not familiar with, checkout the alice glossary.",charsets:{}},{title:"Built-in intents",frontmatter:{title:"Built-in intents",sidebarDepth:5},regularPath:"/skill-development/builtin-intents.html",relativePath:"skill-development/builtin-intents.md",key:"v-12c6cc36",path:"/skill-development/builtin-intents.html",headers:[{level:2,title:"Listing",slug:"listing",charIndex:384},{level:2,title:"How to use these intents",slug:"how-to-use-these-intents",charIndex:1618},{level:3,title:"The problem",slug:"the-problem",charIndex:1776},{level:3,title:"The solutions",slug:"the-solutions",charIndex:2731}],lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:"Listing How to use these intents The problem The solutions",content:"# Intro\nThere are that are already available for you to use due to the fact the AliceCore needs to be loaded and run for Alice to start. You should always check if the intents you are creating do not already exist. Those intents are usually used for answering to missing information and are disabled by default. They take advantage of our built-in . Let's list those intents here:\n\n# Listing\n * UserRandomAnswer The user answers with random words. * Type: Alice/RandomWords\n    * SlotName: RandomWord\n   \n   \n * AnswerYesOrNo User answers yes or no. * Type: Alice/AnswerYesNo\n    * SlotName: Answer\n    * Note: Did you know you can use self.Commons.isYes(session)?\n   \n   \n * AnswerRoom User answers with a room name. * Type: Alice/Rooms\n    * SlotName: Room\n   \n   \n * AnswerName User answers with a name. * Type: Alice/Name\n    * SlotName: Name\n   \n   \n * AnswerNumber User answers with a name. * Type: snips/number\n    * SlotName: Number\n   \n   \n * SpellWord User answers with a name. * Type: Alice/Letter\n    * SlotName: Letters\n    * Notes: * You can use self.Commons.isSpelledWord(TheString) to check if a string is a spelled word\n       * You can build a string from Letters slots with string = ''.join([slot.value['value'] for slot in session.slotsAsObjects['Letters']])\n      \n      \n   \n   \n * AnswerAccessLevel User answers with access level * Type: Alice/UserAccessLevel\n    * SlotName: UserAccessLevel\n   \n   \n * AnswerPercent User answers with access level * Type: snips/number\n    * SlotName: Percent\n   \n   \n\nWe will implement more inbuilt intents over time, such as answering with time, dates etc.\n\n# How to use these intents\nNow comes the very important part, understanding the problematic behind using those intents and how to overcome those limitations\n\n# The problem\nLet's imagine you are building a skill that gives the user the ability to add reminders. At some point, you might want to ask the user if the reminder can be deleted, to which, the user is going to answer with either yes or no:\n\nHey, you told me to remind you this: Buy some beer before weekend.Can I now delete this reminder?Yes thank youOk, deletedTo this point, nothing big or hard. What if I told you that the AnswerYesOrNo intent is already used by many skills? So if you have a little chance, your skill might by the first one to catch the intent but what if the Yes the user is answering is not meant for your skill? See where I'm going? You need to make sure the AnswerYesOrNo is actually meant for your skill at this moment. It is important to understand that Alice doesn't lock a skill while in dialogue. You could hypothetically answer What time is it instead of Yes and she'd answer you, forgetting about the reminder question.\n\n# The solutions\nTo solve these collision issues, we have implemented what we call dialogStates. You can either do the mapping in the __init__ method, or you can use the IntentHandler decorator for easier cases.\n\n# The decorator way\nFirst thing, add your method for Alice to ask if the reminder can be safely deleted. I'd imagine this method to be triggered if a reminder was just spoken.\n\ndef askDeleteReminder(self, siteId):\n\tself.ask(\n\t\tsiteId=siteId,\n\t\ttext=self.randomTalk(text='CanTheReminderBeDeleted'),\n\t\tintentFilter=['AnswerYesOrNo'],\n\t\tcurrentDialogState='askingToDeleteReminder'\n\t)\n\n\nTwo important things here:\n\n * intentFilter: This is used to limit the NLU on parsing the user answer on the specified intent. You don't want the user to answer with What time is it, but only with yes or no.\n * currentDialogState: This is the very important part! It tells Alice that she is in dialogue with the user and that the state or next turn, is askingToDeleteReminder. You can use literally whatever you want here, as long as you remember what you've declared.\n\nOk, so the user is going to answer with Yes!. Now we need an intent handler to take care of that!\n\n@IntentHandler(intent='AnswerYesOrNo', requiredState='askingToDeleteReminder')\ndef answerDeleteReminder(self, session: DialogSession):\n\tif self.Commons.isYes(session):\n\t\tself.endDialog(\n\t\t\tsessionId=session.sessionId,\n\t\t\ttext=self.randomTalk(text='okDeleted')\n\t\t)\n\telse:\n\t\tself.endDialog(\n\t\t\tsessionId=session.sessionId,\n\t\t\ttext=self.randomTalk(text='okKeepingIt')\n\t\t)\n\n\nThe important part here is that our IntentHandler decorator took one more important argument, the requiredState. This means that your skill supports the AnswerYesOrNo intent only if the current dialog state is askingToDeleteReminder! No more collision with other skills!\n\n# Manual mapping\nWe call mapping the declaration of intents vs dialog states. Same example as above, but not by using decorators and adding another intent. It is useful when you have a more complex structure of intents or skill.\n\nfrom core.base.model.AliceSkill import AliceSkill\nfrom core.base.model.Intent import Intent\nfrom core.dialog.model.DialogSession import DialogSession\n\n\nclass Reminder(AliceSkill):\n\t# Declare our intents\n\t_INTENT_ANSWER_YES_OR_NO = Intent('AnswerYesOrNo')\n\t_INTENT_ANSWER_ROOM = Intent('AnswerRoom')\n\t_INTENT_ADD_REMINDER = Intent('NewReminder')\n\n\n\tdef __init__(self):\n\t\t# Declare the skill's supported intents\n\t\t# The two first ones have no direct mapping, the last one directly declares its mapping\n\t\tself._INTENTS = [\n\t\t\tself._INTENT_ANSWER_YES_OR_NO,\n\t\t\tself._INTENT_ANSWER_ROOM,\n\t\t\t(self._INTENT_ADD_REMINDER, self.addReminder),\n\t\t]\n\n\t\t# Create a mapping for the intent YES_OR_NO\n\t\t# Depending on the dialogue state, either answerDeleteReminder or answerReminderIsCorrect will be called\n\t\tself._INTENT_ANSWER_YES_OR_NO.dialogMapping = {\n\t\t\t'askingToDeleteReminder': self.answerDeleteReminder,\n\t\t\t'askingIfCorrect': self.answerReminderIsCorrect,\n\t\t}\n\t\t\n\t\t# Create a mapping for the intent AnswerRoom\n\t\tself._INTENT_ANSWER_ROOM.dialogMapping = {\n\t\t\t'askingWhereToRemind': self.addReminder\n\t\t}\n\n\t\tsuper().__init__(self._INTENTS)\n\n\n\t# This is called directly by the mapping for intents AddReminder and AnswerRoom on lines 18 and 19\n\tdef addReminder(self, session: DialogSession):\n\t\tif 'Room' not in session.slots:\n\t\t\tself.continueDialog(\n\t\t\t\tsessionId=session.sessionId,\n\t\t\t\ttext=self.randomTalk(text='inWhichRoom'),\n\t\t\t\tintentFilter=['AnswerRoom'],\n\t\t\t\tcurrentDialogState='askingWhereToRemind'\n\t\t\t)\n\t\t\treturn\n\n\t\tself.continueDialog(\n\t\t\tsessionId=session.sessionId,\n\t\t\ttext=self.randomTalk(text='isItCorrect', replace=[session.slots['reminder']]),\n\t\t\tintentFilter=['AnswerYesOrNo'],\n\t\t\tcurrentDialogState='askingIfCorrect'\n\t\t)\n\n\n\t# This would be called after you've read out loud a reminder\n\t# It asks if the reminder can be deleted and sets the dialogue state to 'askingToDeleteReminder'\n\tdef askDeleteReminder(self, siteId):\n\t\tself.ask(\n\t\t\tsiteId=siteId,\n\t\t\ttext=self.randomTalk(text='CanTheReminderBeDeleted'),\n\t\t\tintentFilter=['AnswerYesOrNo'],\n\t\t\tcurrentDialogState='askingToDeleteReminder'\n\t\t)\n\n\n\t# This is called by the intent YesOrNo ONLY if the current dialogue state is 'askingToDeleteReminder'\n\t# As declared in our mapping on line 25\n\tdef answerDeleteReminder(self, session: DialogSession):\n\t\tif self.Commons.isYes(session):\n\t\t\tself.endDialog(\n\t\t\t\tsessionId=session.sessionId,\n\t\t\t\ttext=self.randomTalk(text='okDeleted')\n\t\t\t)\n\t\telse:\n\t\t\tself.endDialog(\n\t\t\t\tsessionId=session.sessionId,\n\t\t\t\ttext=self.randomTalk(text='okKeepingIt')\n\t\t\t)\n\n\t# This is called by the intent YesOrNo ONLY if the current dialogue state is 'askingIfCorrect'\n\t# As declared in our mapping on line 26\n\tdef answerReminderIsCorrect(self, session: DialogSession):\n\t\tif self.Commons.isYes(session):\n\t\t\tself.endDialog(\n\t\t\t\tsessionId=session.sessionId,\n\t\t\t\ttext=self.randomTalk(text='okAdded')\n\t\t\t)\n\t\telse:\n\t\t\tself.continueDialog(\n\t\t\t\tsessionId=session.sessionId,\n\t\t\t\ttext=self.randomTalk(text='sorryWhatIsItThen')\n\t\t\t\t.....\n\n\n\nThe important parts here are how we declare our mappings. You can add as many routes as you wish, just take a look at AliceCore skill. We are still declaring dialogue states the same in continueDialog. Keep in mind this manual approach is useful for complex structures, and you should take advantage of the decorator approach first!",contentLowercase:"# intro\nthere are that are already available for you to use due to the fact the alicecore needs to be loaded and run for alice to start. you should always check if the intents you are creating do not already exist. those intents are usually used for answering to missing information and are disabled by default. they take advantage of our built-in . let's list those intents here:\n\n# listing\n * userrandomanswer the user answers with random words. * type: alice/randomwords\n    * slotname: randomword\n   \n   \n * answeryesorno user answers yes or no. * type: alice/answeryesno\n    * slotname: answer\n    * note: did you know you can use self.commons.isyes(session)?\n   \n   \n * answerroom user answers with a room name. * type: alice/rooms\n    * slotname: room\n   \n   \n * answername user answers with a name. * type: alice/name\n    * slotname: name\n   \n   \n * answernumber user answers with a name. * type: snips/number\n    * slotname: number\n   \n   \n * spellword user answers with a name. * type: alice/letter\n    * slotname: letters\n    * notes: * you can use self.commons.isspelledword(thestring) to check if a string is a spelled word\n       * you can build a string from letters slots with string = ''.join([slot.value['value'] for slot in session.slotsasobjects['letters']])\n      \n      \n   \n   \n * answeraccesslevel user answers with access level * type: alice/useraccesslevel\n    * slotname: useraccesslevel\n   \n   \n * answerpercent user answers with access level * type: snips/number\n    * slotname: percent\n   \n   \n\nwe will implement more inbuilt intents over time, such as answering with time, dates etc.\n\n# how to use these intents\nnow comes the very important part, understanding the problematic behind using those intents and how to overcome those limitations\n\n# the problem\nlet's imagine you are building a skill that gives the user the ability to add reminders. at some point, you might want to ask the user if the reminder can be deleted, to which, the user is going to answer with either yes or no:\n\nhey, you told me to remind you this: buy some beer before weekend.can i now delete this reminder?yes thank youok, deletedto this point, nothing big or hard. what if i told you that the answeryesorno intent is already used by many skills? so if you have a little chance, your skill might by the first one to catch the intent but what if the yes the user is answering is not meant for your skill? see where i'm going? you need to make sure the answeryesorno is actually meant for your skill at this moment. it is important to understand that alice doesn't lock a skill while in dialogue. you could hypothetically answer what time is it instead of yes and she'd answer you, forgetting about the reminder question.\n\n# the solutions\nto solve these collision issues, we have implemented what we call dialogstates. you can either do the mapping in the __init__ method, or you can use the intenthandler decorator for easier cases.\n\n# the decorator way\nfirst thing, add your method for alice to ask if the reminder can be safely deleted. i'd imagine this method to be triggered if a reminder was just spoken.\n\ndef askdeletereminder(self, siteid):\n\tself.ask(\n\t\tsiteid=siteid,\n\t\ttext=self.randomtalk(text='canthereminderbedeleted'),\n\t\tintentfilter=['answeryesorno'],\n\t\tcurrentdialogstate='askingtodeletereminder'\n\t)\n\n\ntwo important things here:\n\n * intentfilter: this is used to limit the nlu on parsing the user answer on the specified intent. you don't want the user to answer with what time is it, but only with yes or no.\n * currentdialogstate: this is the very important part! it tells alice that she is in dialogue with the user and that the state or next turn, is askingtodeletereminder. you can use literally whatever you want here, as long as you remember what you've declared.\n\nok, so the user is going to answer with yes!. now we need an intent handler to take care of that!\n\n@intenthandler(intent='answeryesorno', requiredstate='askingtodeletereminder')\ndef answerdeletereminder(self, session: dialogsession):\n\tif self.commons.isyes(session):\n\t\tself.enddialog(\n\t\t\tsessionid=session.sessionid,\n\t\t\ttext=self.randomtalk(text='okdeleted')\n\t\t)\n\telse:\n\t\tself.enddialog(\n\t\t\tsessionid=session.sessionid,\n\t\t\ttext=self.randomtalk(text='okkeepingit')\n\t\t)\n\n\nthe important part here is that our intenthandler decorator took one more important argument, the requiredstate. this means that your skill supports the answeryesorno intent only if the current dialog state is askingtodeletereminder! no more collision with other skills!\n\n# manual mapping\nwe call mapping the declaration of intents vs dialog states. same example as above, but not by using decorators and adding another intent. it is useful when you have a more complex structure of intents or skill.\n\nfrom core.base.model.aliceskill import aliceskill\nfrom core.base.model.intent import intent\nfrom core.dialog.model.dialogsession import dialogsession\n\n\nclass reminder(aliceskill):\n\t# declare our intents\n\t_intent_answer_yes_or_no = intent('answeryesorno')\n\t_intent_answer_room = intent('answerroom')\n\t_intent_add_reminder = intent('newreminder')\n\n\n\tdef __init__(self):\n\t\t# declare the skill's supported intents\n\t\t# the two first ones have no direct mapping, the last one directly declares its mapping\n\t\tself._intents = [\n\t\t\tself._intent_answer_yes_or_no,\n\t\t\tself._intent_answer_room,\n\t\t\t(self._intent_add_reminder, self.addreminder),\n\t\t]\n\n\t\t# create a mapping for the intent yes_or_no\n\t\t# depending on the dialogue state, either answerdeletereminder or answerreminderiscorrect will be called\n\t\tself._intent_answer_yes_or_no.dialogmapping = {\n\t\t\t'askingtodeletereminder': self.answerdeletereminder,\n\t\t\t'askingifcorrect': self.answerreminderiscorrect,\n\t\t}\n\t\t\n\t\t# create a mapping for the intent answerroom\n\t\tself._intent_answer_room.dialogmapping = {\n\t\t\t'askingwheretoremind': self.addreminder\n\t\t}\n\n\t\tsuper().__init__(self._intents)\n\n\n\t# this is called directly by the mapping for intents addreminder and answerroom on lines 18 and 19\n\tdef addreminder(self, session: dialogsession):\n\t\tif 'room' not in session.slots:\n\t\t\tself.continuedialog(\n\t\t\t\tsessionid=session.sessionid,\n\t\t\t\ttext=self.randomtalk(text='inwhichroom'),\n\t\t\t\tintentfilter=['answerroom'],\n\t\t\t\tcurrentdialogstate='askingwheretoremind'\n\t\t\t)\n\t\t\treturn\n\n\t\tself.continuedialog(\n\t\t\tsessionid=session.sessionid,\n\t\t\ttext=self.randomtalk(text='isitcorrect', replace=[session.slots['reminder']]),\n\t\t\tintentfilter=['answeryesorno'],\n\t\t\tcurrentdialogstate='askingifcorrect'\n\t\t)\n\n\n\t# this would be called after you've read out loud a reminder\n\t# it asks if the reminder can be deleted and sets the dialogue state to 'askingtodeletereminder'\n\tdef askdeletereminder(self, siteid):\n\t\tself.ask(\n\t\t\tsiteid=siteid,\n\t\t\ttext=self.randomtalk(text='canthereminderbedeleted'),\n\t\t\tintentfilter=['answeryesorno'],\n\t\t\tcurrentdialogstate='askingtodeletereminder'\n\t\t)\n\n\n\t# this is called by the intent yesorno only if the current dialogue state is 'askingtodeletereminder'\n\t# as declared in our mapping on line 25\n\tdef answerdeletereminder(self, session: dialogsession):\n\t\tif self.commons.isyes(session):\n\t\t\tself.enddialog(\n\t\t\t\tsessionid=session.sessionid,\n\t\t\t\ttext=self.randomtalk(text='okdeleted')\n\t\t\t)\n\t\telse:\n\t\t\tself.enddialog(\n\t\t\t\tsessionid=session.sessionid,\n\t\t\t\ttext=self.randomtalk(text='okkeepingit')\n\t\t\t)\n\n\t# this is called by the intent yesorno only if the current dialogue state is 'askingifcorrect'\n\t# as declared in our mapping on line 26\n\tdef answerreminderiscorrect(self, session: dialogsession):\n\t\tif self.commons.isyes(session):\n\t\t\tself.enddialog(\n\t\t\t\tsessionid=session.sessionid,\n\t\t\t\ttext=self.randomtalk(text='okadded')\n\t\t\t)\n\t\telse:\n\t\t\tself.continuedialog(\n\t\t\t\tsessionid=session.sessionid,\n\t\t\t\ttext=self.randomtalk(text='sorrywhatisitthen')\n\t\t\t\t.....\n\n\n\nthe important parts here are how we declare our mappings. you can add as many routes as you wish, just take a look at alicecore skill. we are still declaring dialogue states the same in continuedialog. keep in mind this manual approach is useful for complex structures, and you should take advantage of the decorator approach first!",charsets:{}},{title:"Built-in slots",frontmatter:{title:"Built-in slots",sidebarDepth:2},regularPath:"/skill-development/builtin-slots.html",relativePath:"skill-development/builtin-slots.md",key:"v-7b7aed65",path:"/skill-development/builtin-slots.html",headers:[{level:2,title:"Alice slots",slug:"alice-slots",charIndex:342},{level:2,title:"Snips slots",slug:"snips-slots",charIndex:1092}],lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:"Alice slots Snips slots",content:"# Intro\nWe have some slots ready for you to use. You don't need to worry if they exist or not, they do, as they are coming from required skills! Beside former snips skills that are supported, the Alice/XXX skills are also available. Let's list them here! This listing is about the english version. Other languages might differ in numbers.\n\n# Alice slots\n * Alice/Countries: Contains all countries on the world, with country code 2 as master value and spoken name as synonyms\n * Alice/CityNames: Contains about 4500 city names\n * Alice/UserAccessLevel: The five supported access levels: admin, default, kid, worker, guest\n * Alice/Languages: A few languages: FR, EN, DE, SW, JP, FI, ES, RU, IT\n * Alice/Letters: Alphabet letter [A-Z]\n * Alice/Location: Contains about 130 location/room type names\n * Alice/AnswerYesNo: Yes or no, with synonyms\n * Alice/Name: Contains about 580 common names\n * Alice/RandomWords: Contains about 3200 common words\n * Alice/PersonalPronoun: I, you, he, she, it, we, you, they 😃\n * Alice/Colors: A collection of spoken colors, with RGB values as master value\n\n# Snips slots\nThese are only available with snips nlu\n\n * snips/date\n * snips/timePeriod\n * snips/datePeriod\n * snips/amountOfMoney\n * snips/time\n * snips/musicArtist\n * snips/musicTrack\n * snips/region\n * snips/musicAlbum\n * snips/country\n * snips/number\n * snips/percentage\n * snips/datetime\n * snips/city\n * snips/duration\n * snips/temperature\n * snips/ordinal",contentLowercase:"# intro\nwe have some slots ready for you to use. you don't need to worry if they exist or not, they do, as they are coming from required skills! beside former snips skills that are supported, the alice/xxx skills are also available. let's list them here! this listing is about the english version. other languages might differ in numbers.\n\n# alice slots\n * alice/countries: contains all countries on the world, with country code 2 as master value and spoken name as synonyms\n * alice/citynames: contains about 4500 city names\n * alice/useraccesslevel: the five supported access levels: admin, default, kid, worker, guest\n * alice/languages: a few languages: fr, en, de, sw, jp, fi, es, ru, it\n * alice/letters: alphabet letter [a-z]\n * alice/location: contains about 130 location/room type names\n * alice/answeryesno: yes or no, with synonyms\n * alice/name: contains about 580 common names\n * alice/randomwords: contains about 3200 common words\n * alice/personalpronoun: i, you, he, she, it, we, you, they 😃\n * alice/colors: a collection of spoken colors, with rgb values as master value\n\n# snips slots\nthese are only available with snips nlu\n\n * snips/date\n * snips/timeperiod\n * snips/dateperiod\n * snips/amountofmoney\n * snips/time\n * snips/musicartist\n * snips/musictrack\n * snips/region\n * snips/musicalbum\n * snips/country\n * snips/number\n * snips/percentage\n * snips/datetime\n * snips/city\n * snips/duration\n * snips/temperature\n * snips/ordinal",charsets:{}},{title:"Database Access",frontmatter:{title:"Database Access",sidebarDepth:3},regularPath:"/skill-development/database-access.html",relativePath:"skill-development/database-access.md",key:"v-66107445",path:"/skill-development/database-access.html",headers:[{level:2,title:"Setting up the database",slug:"setting-up-the-database",charIndex:330},{level:2,title:"Writing to your database",slug:"writing-to-your-database",charIndex:1074},{level:2,title:"Reading from your database",slug:"reading-from-your-database",charIndex:1328},{level:2,title:"Delete from your database",slug:"delete-from-your-database",charIndex:1796}],lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:"Setting up the database Writing to your database Reading from your database Delete from your database",content:"# Intro\nAlice comes with a built in SQLite database and offers a service provider for accessing the database. There are methods for creating, modifying and deleting a table built right into the skill constructor and there are methods available for adding, removing, modifying and of course reading the content of the database.\n\n# Setting up the database\nDefine the DB in your program as a dictionary and prepare the name of the database as a variable as best practice:\n\n    _TABLENAME = 'MyReminders'\n    _DATABASE = {\n        _TABLENAME: [\n            'message TEXT NOT NULL',\n            'timestamp INTEGER NOT NULL'\n        ]\n    }\n\n\nInclude the database definition into the constructor of your skill:\n\n    def __init__(self):\n        super().__init__(databaseSchema=self._DATABASE)\n\n\nNow your databas will be set up with the first load of your skill. If you later on decide to change the structure of your database, Alice will take care of that as well - just update the self._DATABASE variable and Alice will add or remove the correct fields on reload of the skill.\n\n# Writing to your database\nAdding an entry to your database is as easy as defining the new entry as dictonary and calling the DatabaseManager:\n\nself.databaseInsert(tableName=self._TABLENAME, values={'message': yourMessage, 'timestamp': yourTimestamp})\n\n\n# Reading from your database\nIf you want to read entries, you have to know a bit SQL for the selection criteria. With myMessage as a local python variable you can make the following call, to read a database entry with the message stored in myMessage:\n\nself.databaseFetch(\n            tableName=self._TABLENAME,\n            query='SELECT * FROM :__table__ WHERE message = :tmpMessage',\n            values={'tmpMessage': myMessage},\n            method='all'\n        )\n\n\n# Delete from your database\nAgain some SQL Syntax has to be known. In this example we delete all entries that are already in the past by comparing them to the python variable myTimestamp:\n\nself.DatabaseManager.delete(\n                tableName='MyReminders',\n                query='DELETE FROM :__table__ WHERE timestamp < :tmpTimestamp',\n                values={'tmpTimestamp': myTimestamp},\n                callerName=self.name)\n         ```",contentLowercase:"# intro\nalice comes with a built in sqlite database and offers a service provider for accessing the database. there are methods for creating, modifying and deleting a table built right into the skill constructor and there are methods available for adding, removing, modifying and of course reading the content of the database.\n\n# setting up the database\ndefine the db in your program as a dictionary and prepare the name of the database as a variable as best practice:\n\n    _tablename = 'myreminders'\n    _database = {\n        _tablename: [\n            'message text not null',\n            'timestamp integer not null'\n        ]\n    }\n\n\ninclude the database definition into the constructor of your skill:\n\n    def __init__(self):\n        super().__init__(databaseschema=self._database)\n\n\nnow your databas will be set up with the first load of your skill. if you later on decide to change the structure of your database, alice will take care of that as well - just update the self._database variable and alice will add or remove the correct fields on reload of the skill.\n\n# writing to your database\nadding an entry to your database is as easy as defining the new entry as dictonary and calling the databasemanager:\n\nself.databaseinsert(tablename=self._tablename, values={'message': yourmessage, 'timestamp': yourtimestamp})\n\n\n# reading from your database\nif you want to read entries, you have to know a bit sql for the selection criteria. with mymessage as a local python variable you can make the following call, to read a database entry with the message stored in mymessage:\n\nself.databasefetch(\n            tablename=self._tablename,\n            query='select * from :__table__ where message = :tmpmessage',\n            values={'tmpmessage': mymessage},\n            method='all'\n        )\n\n\n# delete from your database\nagain some sql syntax has to be known. in this example we delete all entries that are already in the past by comparing them to the python variable mytimestamp:\n\nself.databasemanager.delete(\n                tablename='myreminders',\n                query='delete from :__table__ where timestamp < :tmptimestamp',\n                values={'tmptimestamp': mytimestamp},\n                callername=self.name)\n         ```",charsets:{}},{title:"Dialog template file",frontmatter:{title:"Dialog template file",sidebarDepth:4},regularPath:"/skill-development/dialog-template.html",relativePath:"skill-development/dialog-template.md",key:"v-2e109aa5",path:"/skill-development/dialog-template.html",headers:[{level:2,title:"A basic file",slug:"a-basic-file",charIndex:285},{level:2,title:"Let's define an intent",slug:"let-s-define-an-intent",charIndex:886},{level:2,title:"Add some variable to our utterances, aka slots",slug:"add-some-variable-to-our-utterances-aka-slots",charIndex:2518},{level:3,title:"Slots declaration",slug:"slots-declaration",charIndex:3684},{level:3,title:"Utterances",slug:"utterances",charIndex:5002},{level:3,title:"Slot definition",slug:"slot-definition",charIndex:5878}],lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:"A basic file Let's define an intent Add some variable to our utterances, aka slots Slots declaration Utterances Slot definition",content:'# Intro\nThis is the "pièce of resistance", the beef! This defines your , and your in a readable way. Alice will then use this file to train the and components!\n\nPro tip\n\nIf you are using an IDE able to handle json schema, it is highly recommended using our Dialogue Template Schema\n\n# A basic file\nA basic template look fairly simple, without any defined slot or intent\n\n{\n\t"skill": "HelloWorld",\n\t"description": "This is my first skill",\n\t"slotTypes": [],\n\t"intents": []\n}\n\n\nFour mandatory fields:\n\n * skill: the name of your skill\n * description: the description of your skill, what users will be able to read before installing\n * slotTypes: a list of slot definition, in this case empty\n * intents: a list of intent definition, in this case empty\n\nAnd that\'s it! Every skill must ship with at least this. In this example, it would be a skill without any interaction User -> Alice\n\n# Let\'s define an intent\nOk, say we want the user to be able to say hello to Alice, we need to add an intent to our dialog template:\n\n{\n\t"skill": "HelloWorld",\n\t"description": "This is my first skill",\n\t"slotTypes": [],\n\t"intents": [\n\t\t{\n\t\t\t"name": "HelloWorld_Hello",\n\t\t\t"description": "The user says hello",\n\t\t\t"enabledByDefault": true,\n\t\t\t"utterances": [\n\t\t\t\t"hello alice",\n\t\t\t\t"hi alice",\n\t\t\t\t"konitchiwa alice",\n\t\t\t\t"hey alice",\n\t\t\t\t"aloha alice"\n\t\t\t],\n\t\t\t"slots": []\n\t\t}\t\n\t]\n}\n\n\n * This just defined an intent named HelloWorld_Hello. By standards, your intent names should always be prefixed with the skill name to avoid collisions with other skills.\n   \n   \n * There\'s then the description of that intent, what it does.\n   \n   \n * Comes enabledByDefault that can be either true or false. An intent that is enabled by default can be caught at any time. If disabled, it will only be caught if your script previously activates it. It makes sense to disable intents like "YesOrNo" per example, and only activate it when needed.\n   \n   \n * Next comes the utterances field, which are the ways of indicating your intent you teach to Alice. She will understand that you are using the intent HelloWorld_Hello if you say one of the four provided sentences. It is really important that you add up to at least 15 to 20 different ways of saying for a good training. The NLU then has enough data to start allowing small differences but still guess the correct intent at an acceptable percentage. Do not use punctuation signs and adding capital letters is of no use.\n   \n   \n * The last filed is slots and is empty in the example.\n   \n   \n\n# Add some variable to our utterances, aka slots\nImagine a shopping skill and an intent to add an item to your shopping list. For sure, you won\'t define 10\'000 utterances with all possible items to say. For that you will use slots\n\n{\n\t"skill": "HelloWorld",\n\t"description": "This is my first skill",\n\t"slotTypes": [\n\t\t{\n\t\t\t"name": "Item",\n\t\t\t"matchingStrictness": null,\n\t\t\t"automaticallyExtensible": true,\n\t\t\t"useSynonyms": true,\n\t\t\t"values": [\n\t\t\t\t{\n\t\t\t\t\t"value": "wheat"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"value": "hawaiian pizza",\n\t\t\t\t\t"synonyms": [\n\t\t\t\t\t\t"hawaii pizza",\n\t\t\t\t\t\t"pizza hawaii"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t"intents": [\n\t\t{\n\t\t\t"name": "HelloWorld_AddItem",\n\t\t\t"description": "The user adds item to his shopping list",\n\t\t\t"enabledByDefault": true,\n\t\t\t"utterances": [\n\t\t\t\t"add {hawaii pizza:=>Item} to my shopping list",\n\t\t\t\t"add {wheat:=>Item} to my shopping list please",\n\t\t\t\t"please add {wheat:=>Item} to my shopping list",\n\t\t\t\t"can you please add {hawaiian pizza:=>Item} to my shopping list"\n\t\t\t],\n\t\t\t"slots": [\n\t\t\t\t{\n\t\t\t\t\t"name": "shopItem",\n\t\t\t\t\t"description": null,\n\t\t\t\t\t"required": false,\n\t\t\t\t\t"type": "Item",\n\t\t\t\t\t"missingQuestion": ""\n\t\t\t\t}\n\t\t\t]\n\t\t}\t\n\t]\n}\n\n\n# Slots declaration\nOk, we went a little higher in our file and added a slot definition to our slotTypes\n\n{\n\t"name": "Item",\n\t"matchingStrictness": null,\n\t"automaticallyExtensible": true,\n\t"useSynonyms": true,\n\t"values": [\n\t\t{\n\t\t\t"value": "wheat"\n\t\t},\n\t\t{\n\t\t\t"value": "hawaiian pizza",\n\t\t\t"synonyms": [\n\t\t\t\t"hawaii pizza",\n\t\t\t\t"pizza hawaii"\n\t\t\t]\n\t\t}\n\t]\n}\n\n\n * name: This is the slot type, that should NEVER be translated\n   \n   \n * matchingStrictness: This is a float, from 0 to 1 or null on how strict the NLU will be on catching the word if small differences are detected.\n   \n   \n * automaticallyExtensible: This allows or forbids, an automatic attempt at catching other words that are not defined in your values.\n   \n   \n * useSynonyms: Allows or forbids the use of synonyms\n   \n   \n * values: Defines your slot possible values\n   \n    * The first one is defined without synonym and the value would be wheat\n    * The second one is defined with synonyms. The raw value would be hawaiian pizze even if you say hawaii pizza, hawaiian pizzaor pizza hawaii. This synonyms field only works if useSynonyms is set to true\n   \n   That\'s it for our definition! We have some Prebuilt slots available. Always check if your slot does not already exist before implementing yours!\n   \n   Now let\'s move to our intent:\n   \n   \n\n# Utterances\n{\n\t"name": "HelloWorld_AddItem",\n\t"description": "The user adds item to his shopping list",\n\t"enabledByDefault": true,\n\t"utterances": [\n\t\t"add {hawaii pizza:=>Item} to my shopping list",\n\t\t"add {wheat:=>Item} to my shopping list please",\n\t\t"please add {wheat:=>Item} to my shopping list",\n\t\t"can you please add {hawaiian pizza:=>Item} to my shopping list"\n\t],\n\t"slots": [\n\t\t{\n\t\t\t"name": "shopItem",\n\t\t\t"description": null,\n\t\t\t"required": false,\n\t\t\t"type": "Item",\n\t\t\t"missingQuestion": ""\n\t\t}\n\t]\n}\n\n\nTake a look at the utterances. You surely see that weird syntax made of curly braces {hawaii pizza:=>Item}. This is our slot! In this case you taught alice that hawaii pizza is of slot type Item, the one you defined just before! It is important to know that slots you use in your intents are first defined, but the value is also declared in the slot definition.\n\n# Slot definition\nWe also have now defined the intent slot itself:\n\n{\n\t"name": "ShopItem",\n\t"description": null,\n\t"required": false,\n\t"type": "Item",\n\t"missingQuestion": ""\n}\n\n\n * name: This is the name of the slot that is returned to your script and should never be translated\n * description: If you want to add a description of what that slot is\n * required: Leave it at false, or you\'ll loose the ability to have Alice random texts!\n * type: Also never to be translated, this defines of what type that slot is and refers to the slot definition on top of the file\n * missingQuestion: Defines what Alice would say if the slot is marked as required but is missing. To be left empty.',contentLowercase:'# intro\nthis is the "pièce of resistance", the beef! this defines your , and your in a readable way. alice will then use this file to train the and components!\n\npro tip\n\nif you are using an ide able to handle json schema, it is highly recommended using our dialogue template schema\n\n# a basic file\na basic template look fairly simple, without any defined slot or intent\n\n{\n\t"skill": "helloworld",\n\t"description": "this is my first skill",\n\t"slottypes": [],\n\t"intents": []\n}\n\n\nfour mandatory fields:\n\n * skill: the name of your skill\n * description: the description of your skill, what users will be able to read before installing\n * slottypes: a list of slot definition, in this case empty\n * intents: a list of intent definition, in this case empty\n\nand that\'s it! every skill must ship with at least this. in this example, it would be a skill without any interaction user -> alice\n\n# let\'s define an intent\nok, say we want the user to be able to say hello to alice, we need to add an intent to our dialog template:\n\n{\n\t"skill": "helloworld",\n\t"description": "this is my first skill",\n\t"slottypes": [],\n\t"intents": [\n\t\t{\n\t\t\t"name": "helloworld_hello",\n\t\t\t"description": "the user says hello",\n\t\t\t"enabledbydefault": true,\n\t\t\t"utterances": [\n\t\t\t\t"hello alice",\n\t\t\t\t"hi alice",\n\t\t\t\t"konitchiwa alice",\n\t\t\t\t"hey alice",\n\t\t\t\t"aloha alice"\n\t\t\t],\n\t\t\t"slots": []\n\t\t}\t\n\t]\n}\n\n\n * this just defined an intent named helloworld_hello. by standards, your intent names should always be prefixed with the skill name to avoid collisions with other skills.\n   \n   \n * there\'s then the description of that intent, what it does.\n   \n   \n * comes enabledbydefault that can be either true or false. an intent that is enabled by default can be caught at any time. if disabled, it will only be caught if your script previously activates it. it makes sense to disable intents like "yesorno" per example, and only activate it when needed.\n   \n   \n * next comes the utterances field, which are the ways of indicating your intent you teach to alice. she will understand that you are using the intent helloworld_hello if you say one of the four provided sentences. it is really important that you add up to at least 15 to 20 different ways of saying for a good training. the nlu then has enough data to start allowing small differences but still guess the correct intent at an acceptable percentage. do not use punctuation signs and adding capital letters is of no use.\n   \n   \n * the last filed is slots and is empty in the example.\n   \n   \n\n# add some variable to our utterances, aka slots\nimagine a shopping skill and an intent to add an item to your shopping list. for sure, you won\'t define 10\'000 utterances with all possible items to say. for that you will use slots\n\n{\n\t"skill": "helloworld",\n\t"description": "this is my first skill",\n\t"slottypes": [\n\t\t{\n\t\t\t"name": "item",\n\t\t\t"matchingstrictness": null,\n\t\t\t"automaticallyextensible": true,\n\t\t\t"usesynonyms": true,\n\t\t\t"values": [\n\t\t\t\t{\n\t\t\t\t\t"value": "wheat"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"value": "hawaiian pizza",\n\t\t\t\t\t"synonyms": [\n\t\t\t\t\t\t"hawaii pizza",\n\t\t\t\t\t\t"pizza hawaii"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t"intents": [\n\t\t{\n\t\t\t"name": "helloworld_additem",\n\t\t\t"description": "the user adds item to his shopping list",\n\t\t\t"enabledbydefault": true,\n\t\t\t"utterances": [\n\t\t\t\t"add {hawaii pizza:=>item} to my shopping list",\n\t\t\t\t"add {wheat:=>item} to my shopping list please",\n\t\t\t\t"please add {wheat:=>item} to my shopping list",\n\t\t\t\t"can you please add {hawaiian pizza:=>item} to my shopping list"\n\t\t\t],\n\t\t\t"slots": [\n\t\t\t\t{\n\t\t\t\t\t"name": "shopitem",\n\t\t\t\t\t"description": null,\n\t\t\t\t\t"required": false,\n\t\t\t\t\t"type": "item",\n\t\t\t\t\t"missingquestion": ""\n\t\t\t\t}\n\t\t\t]\n\t\t}\t\n\t]\n}\n\n\n# slots declaration\nok, we went a little higher in our file and added a slot definition to our slottypes\n\n{\n\t"name": "item",\n\t"matchingstrictness": null,\n\t"automaticallyextensible": true,\n\t"usesynonyms": true,\n\t"values": [\n\t\t{\n\t\t\t"value": "wheat"\n\t\t},\n\t\t{\n\t\t\t"value": "hawaiian pizza",\n\t\t\t"synonyms": [\n\t\t\t\t"hawaii pizza",\n\t\t\t\t"pizza hawaii"\n\t\t\t]\n\t\t}\n\t]\n}\n\n\n * name: this is the slot type, that should never be translated\n   \n   \n * matchingstrictness: this is a float, from 0 to 1 or null on how strict the nlu will be on catching the word if small differences are detected.\n   \n   \n * automaticallyextensible: this allows or forbids, an automatic attempt at catching other words that are not defined in your values.\n   \n   \n * usesynonyms: allows or forbids the use of synonyms\n   \n   \n * values: defines your slot possible values\n   \n    * the first one is defined without synonym and the value would be wheat\n    * the second one is defined with synonyms. the raw value would be hawaiian pizze even if you say hawaii pizza, hawaiian pizzaor pizza hawaii. this synonyms field only works if usesynonyms is set to true\n   \n   that\'s it for our definition! we have some prebuilt slots available. always check if your slot does not already exist before implementing yours!\n   \n   now let\'s move to our intent:\n   \n   \n\n# utterances\n{\n\t"name": "helloworld_additem",\n\t"description": "the user adds item to his shopping list",\n\t"enabledbydefault": true,\n\t"utterances": [\n\t\t"add {hawaii pizza:=>item} to my shopping list",\n\t\t"add {wheat:=>item} to my shopping list please",\n\t\t"please add {wheat:=>item} to my shopping list",\n\t\t"can you please add {hawaiian pizza:=>item} to my shopping list"\n\t],\n\t"slots": [\n\t\t{\n\t\t\t"name": "shopitem",\n\t\t\t"description": null,\n\t\t\t"required": false,\n\t\t\t"type": "item",\n\t\t\t"missingquestion": ""\n\t\t}\n\t]\n}\n\n\ntake a look at the utterances. you surely see that weird syntax made of curly braces {hawaii pizza:=>item}. this is our slot! in this case you taught alice that hawaii pizza is of slot type item, the one you defined just before! it is important to know that slots you use in your intents are first defined, but the value is also declared in the slot definition.\n\n# slot definition\nwe also have now defined the intent slot itself:\n\n{\n\t"name": "shopitem",\n\t"description": null,\n\t"required": false,\n\t"type": "item",\n\t"missingquestion": ""\n}\n\n\n * name: this is the name of the slot that is returned to your script and should never be translated\n * description: if you want to add a description of what that slot is\n * required: leave it at false, or you\'ll loose the ability to have alice random texts!\n * type: also never to be translated, this defines of what type that slot is and refers to the slot definition on top of the file\n * missingquestion: defines what alice would say if the slot is marked as required but is missing. to be left empty.',charsets:{}},{title:"Events",frontmatter:{title:"Events",sidebarDepth:3},regularPath:"/skill-development/events.html",relativePath:"skill-development/events.md",key:"v-0889ef1f",path:"/skill-development/events.html",headers:[{level:2,title:"Core events",slug:"core-events",charIndex:429},{level:3,title:"def onStart(self)",slug:"def-onstart-self",charIndex:534},{level:3,title:"def onStop(self)",slug:"def-onstop-self",charIndex:599},{level:3,title:"def onBooted(self)",slug:"def-onbooted-self",charIndex:734},{level:3,title:"def onHotword(self, siteId: str, user: str = constants.UNKNOWN_USER)",slug:"def-onhotword-self-siteid-str-user-str-constants-unknown-user",charIndex:815},{level:3,title:"def onWakeword(self, siteId: str, user: str = constants.UNKNOWN_USER)",slug:"def-onwakeword-self-siteid-str-user-str-constants-unknown-user",charIndex:985},{level:3,title:"def onHotwordToggleOn(self, siteId: str)",slug:"def-onhotwordtoggleon-self-siteid-str",charIndex:1141},{level:3,title:"def onHotwordToggleOff(self, siteId: str)",slug:"def-onhotwordtoggleoff-self-siteid-str",charIndex:1323},{level:3,title:"def onSessionStarted(self, session)",slug:"def-onsessionstarted-self-session",charIndex:1464},{level:3,title:"def onStartListening(self, session)",slug:"def-onstartlistening-self-session",charIndex:1539},{level:3,title:"def onCaptured(self, session)",slug:"def-oncaptured-self-session",charIndex:1659},{level:3,title:"def onPartialTextCaptured(self, session, text: str, likelihood: float, seconds: float):",slug:"def-onpartialtextcaptured-self-session-text-str-likelihood-float-seconds-float",charIndex:1770},{level:3,title:"def onUserCancel(self, session)",slug:"def-onusercancel-self-session",charIndex:1958},{level:3,title:"def onSessionTimeout(self, session)",slug:"def-onsessiontimeout-self-session",charIndex:2093},{level:3,title:"def onIntentNotRecognized(self, session)",slug:"def-onintentnotrecognized-self-session",charIndex:2167},{level:3,title:"def onSessionError(self, session)",slug:"def-onsessionerror-self-session",charIndex:2315},{level:3,title:"def onSessionEnded(self, session)",slug:"def-onsessionended-self-session",charIndex:2396},{level:3,title:"def onSay(self, session)",slug:"def-onsay-self-session",charIndex:2465},{level:3,title:"def onSayFinished(self, session)",slug:"def-onsayfinished-self-session",charIndex:2538},{level:3,title:"def onSessionQueued(self, session)",slug:"def-onsessionqueued-self-session",charIndex:2617},{level:3,title:"def onMessage(self, session)",slug:"def-onmessage-self-session",charIndex:2740},{level:3,title:"def onSkillInstalled(self, **kwargs)",slug:"def-onskillinstalled-self-kwargs",charIndex:2825},{level:3,title:"def onSkillUpdated(self, **kwargs)",slug:"def-onskillupdated-self-kwargs",charIndex:2954},{level:3,title:"def onSkillInstallFailed(self, **kwargs)",slug:"def-onskillinstallfailed-self-kwargs",charIndex:3079},{level:3,title:"def onInternetConnected(self)",slug:"def-oninternetconnected-self",charIndex:3164},{level:3,title:"def onInternetLost(self)",slug:"def-oninternetlost-self",charIndex:3281},{level:3,title:"def onBroadcastingForNewDeviceStart(self, session)",slug:"def-onbroadcastingfornewdevicestart-self-session",charIndex:3353},{level:3,title:"def onBroadcastingForNewDeviceStop(self)",slug:"def-onbroadcastingfornewdevicestop-self",charIndex:3483},{level:3,title:"def onAuthenticated(self, session)",slug:"def-onauthenticated-self-session",charIndex:3649},{level:3,title:"def onAuthenticationFailed(self, session)",slug:"def-onauthenticationfailed-self-session",charIndex:3757},{level:3,title:"def onAudioFrame(self, message)",slug:"def-onaudioframe-self-message",charIndex:3864},{level:3,title:"def onDeviceConnecting(self)",slug:"def-ondeviceconnecting-self",charIndex:3977},{level:3,title:"def onDeviceDisconnecting(self)",slug:"def-ondevicedisconnecting-self",charIndex:4073},{level:3,title:"def onVadUp(self, **kwargs):",slug:"def-onvadup-self-kwargs",charIndex:4170},{level:3,title:"def onVadDown(self, **kwargs):",slug:"def-onvaddown-self-kwargs",charIndex:4241},{level:3,title:"def onNluTrained(self, **kwargs):",slug:"def-onnlutrained-self-kwargs",charIndex:4317},{level:3,title:"def onSnipsAssistantInstalled(self, **kwargs):",slug:"def-onsnipsassistantinstalled-self-kwargs",charIndex:4399},{level:3,title:"def onSnipsAssistantFailedTraining(self, **kwargs):",slug:"def-onsnipsassistantfailedtraining-self-kwargs",charIndex:4517},{level:2,title:"User states",slug:"user-states",charIndex:4627},{level:3,title:"def onGoingBed(self)",slug:"def-ongoingbed-self",charIndex:4813},{level:3,title:"def onSleep(self)",slug:"def-onsleep-self",charIndex:4886},{level:3,title:"def onWakeup(self)",slug:"def-onwakeup-self",charIndex:4952},{level:3,title:"def onLeavingHome(self)",slug:"def-onleavinghome-self",charIndex:5021},{level:3,title:"def onReturningHome(self)",slug:"def-onreturninghome-self",charIndex:5100},{level:3,title:"def onEating(self)",slug:"def-oneating-self",charIndex:5182},{level:3,title:"def onWatchingTV(self)",slug:"def-onwatchingtv-self",charIndex:5250},{level:3,title:"def onCooking(self)",slug:"def-oncooking-self",charIndex:5327},{level:3,title:"def onMakeup(self)",slug:"def-onmakeup-self",charIndex:5397},{level:3,title:"def onContextSensitiveDelete(self, sessionId: str)",slug:"def-oncontextsensitivedelete-self-sessionid-str",charIndex:5473},{level:3,title:"def onContextSensitiveEdit(self, sessionId: str)",slug:"def-oncontextsensitiveedit-self-sessionid-str",charIndex:5673},{level:2,title:"Timed events",slug:"timed-events",charIndex:5921},{level:3,title:"def onFullMinute(self)",slug:"def-onfullminute-self",charIndex:6303},{level:3,title:"def onFiveMinute(self)",slug:"def-onfiveminute-self",charIndex:6368},{level:3,title:"def onQuarterHour(self)",slug:"def-onquarterhour-self",charIndex:6463},{level:3,title:"def onFullHour(self)",slug:"def-onfullhour-self",charIndex:6561},{level:2,title:"Telemetry reports",slug:"telemetry-reports",charIndex:6617},{level:3,title:"def onUVIndexAlert(self, deviceList: list)",slug:"def-onuvindexalert-self-devicelist-list",charIndex:6768},{level:3,title:"def onRaining(self, deviceList: list)",slug:"def-onraining-self-devicelist-list",charIndex:6890},{level:3,title:"def onTooMuchRain(self, deviceList: list)",slug:"def-ontoomuchrain-self-devicelist-list",charIndex:6968},{level:3,title:"def onWindy(self, deviceList: list)",slug:"def-onwindy-self-devicelist-list",charIndex:7090},{level:3,title:"def onFreezing(self, deviceList: list)",slug:"def-onfreezing-self-devicelist-list",charIndex:7209},{level:3,title:"def onTemperatureHighAlert(self, deviceList: list)",slug:"def-ontemperaturehighalert-self-devicelist-list",charIndex:7305},{level:3,title:"def onTemperatureLowAlert(self, deviceList: list)",slug:"def-ontemperaturelowalert-self-devicelist-list",charIndex:7437},{level:3,title:"def onCO2Alert(self, deviceList: list)",slug:"def-onco2alert-self-devicelist-list",charIndex:7568},{level:3,title:"def onHumidityHighAlert(self, deviceList: list)",slug:"def-onhumidityhighalert-self-devicelist-list",charIndex:7686},{level:3,title:"def onHumidityLowAlert(self, deviceList: list)",slug:"def-onhumiditylowalert-self-devicelist-list",charIndex:7818},{level:3,title:"def onNoiseAlert(self, deviceList: list)",slug:"def-onnoisealert-self-devicelist-list",charIndex:7949},{level:3,title:"def onPressureHighAlert(self, deviceList: list)",slug:"def-onpressurehighalert-self-devicelist-list",charIndex:8071},{level:3,title:"def onPressureLowAlert(self, deviceList: list)",slug:"def-onpressurelowalert-self-devicelist-list",charIndex:8216}],lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:"Core events def onStart(self) def onStop(self) def onBooted(self) def onHotword(self, siteId: str, user: str = constants.UNKNOWN_USER) def onWakeword(self, siteId: str, user: str = constants.UNKNOWN_USER) def onHotwordToggleOn(self, siteId: str) def onHotwordToggleOff(self, siteId: str) def onSessionStarted(self, session) def onStartListening(self, session) def onCaptured(self, session) def onPartialTextCaptured(self, session, text: str, likelihood: float, seconds: float): def onUserCancel(self, session) def onSessionTimeout(self, session) def onIntentNotRecognized(self, session) def onSessionError(self, session) def onSessionEnded(self, session) def onSay(self, session) def onSayFinished(self, session) def onSessionQueued(self, session) def onMessage(self, session) def onSkillInstalled(self, **kwargs) def onSkillUpdated(self, **kwargs) def onSkillInstallFailed(self, **kwargs) def onInternetConnected(self) def onInternetLost(self) def onBroadcastingForNewDeviceStart(self, session) def onBroadcastingForNewDeviceStop(self) def onAuthenticated(self, session) def onAuthenticationFailed(self, session) def onAudioFrame(self, message) def onDeviceConnecting(self) def onDeviceDisconnecting(self) def onVadUp(self, **kwargs): def onVadDown(self, **kwargs): def onNluTrained(self, **kwargs): def onSnipsAssistantInstalled(self, **kwargs): def onSnipsAssistantFailedTraining(self, **kwargs): User states def onGoingBed(self) def onSleep(self) def onWakeup(self) def onLeavingHome(self) def onReturningHome(self) def onEating(self) def onWatchingTV(self) def onCooking(self) def onMakeup(self) def onContextSensitiveDelete(self, sessionId: str) def onContextSensitiveEdit(self, sessionId: str) Timed events def onFullMinute(self) def onFiveMinute(self) def onQuarterHour(self) def onFullHour(self) Telemetry reports def onUVIndexAlert(self, deviceList: list) def onRaining(self, deviceList: list) def onTooMuchRain(self, deviceList: list) def onWindy(self, deviceList: list) def onFreezing(self, deviceList: list) def onTemperatureHighAlert(self, deviceList: list) def onTemperatureLowAlert(self, deviceList: list) def onCO2Alert(self, deviceList: list) def onHumidityHighAlert(self, deviceList: list) def onHumidityLowAlert(self, deviceList: list) def onNoiseAlert(self, deviceList: list) def onPressureHighAlert(self, deviceList: list) def onPressureLowAlert(self, deviceList: list)",content:"# Intro\nProject Alice is driven by . What are events you might ask, or what do we mean with it? Ever heard of \"action -> reaction\"? That's exactly it! When something happens, something occurs! Events are by convention prefixed with \"on\", like \"onStormyWeather\" or \"onDoorOpened\".\n\nWe provide a load of pre-made system events you can override in your skills. Lemme try to list them all, more are added on regular bases though!\n\n# Core events\nDescription\n\nCore events report what's happening under the hood, what the system is doing\n\n# def onStart(self)\nTriggered when Alice is starting the skills\n\n# def onStop(self)\nTriggered when Alice is stopping the skill. The skill is typically stopped when Alice reboots, or after and update\n\n# def onBooted(self)\nTriggered when everything has started. Comes after onStart\n\n# def onHotword(self, siteId: str, user: str = constants.UNKNOWN_USER)\nTriggered when a hotword is heard. A hotword is a universal wakeword that doesn't identify a user\n\n# def onWakeword(self, siteId: str, user: str = constants.UNKNOWN_USER)\nTriggered when a wakeword is heard. A wakeword is a hotword that identifies a user\n\n# def onHotwordToggleOn(self, siteId: str)\nTriggered when the hotword triggers itself on again. Typically, the hotword is turned off once it's been heard, until the dialog is over.\n\n# def onHotwordToggleOff(self, siteId: str)\nTriggered when the hotword goes off. Typically, the hotword is turned off once it's been heard.\n\n# def onSessionStarted(self, session)\nTriggered when a session is started\n\n# def onStartListening(self, session)\nTriggered when Alice starts listening to you, right after the hotword was caught\n\n# def onCaptured(self, session)\nTriggered when Alice captured what you said, when you finished talking to her\n\n# def onPartialTextCaptured(self, session, text: str, likelihood: float, seconds: float):\nTriggered every time the ASR spits out a part of the utterance it is actively trying to capture.\n\n# def onUserCancel(self, session)\nTriggered when the user cancels a dialog. This ends the session and doesn't trigger onIntentParsed!\n\n# def onSessionTimeout(self, session)\nTriggered when a session times out\n\n# def onIntentNotRecognized(self, session)\nTriggered when the NLU couldn't understand the intent or your saying. Typically occurs after onCaptured\n\n# def onSessionError(self, session)\nTriggered if the session ends with an error\n\n# def onSessionEnded(self, session)\nTriggered when the session ends\n\n# def onSay(self, session)\nTriggered when Alice starts to say something\n\n# def onSayFinished(self, session)\nTriggered when Alice has finished speaking\n\n# def onSessionQueued(self, session)\nTriggered when a new session is queued due to the fact there is already one on going\n\n# def onMessage(self, session)\nTriggered when a subscribed MQTT message is received\n\n# def onSkillInstalled(self, **kwargs)\nTriggered when a skill has installed. Info about what skill can be extracted from kwargs\n\n# def onSkillUpdated(self, **kwargs)\nTriggered when a skill has updated. Info about what skill can be extracted from kwargs\n\n# def onSkillInstallFailed(self, **kwargs)\nTriggered when a skill failed installing\n\n# def onInternetConnected(self)\nTriggered when internet connection is back, after a failure. Won't trigger on boot!\n\n# def onInternetLost(self)\nTriggered when internet connection is lost.\n\n# def onBroadcastingForNewDeviceStart(self, session)\nTriggered when Alice starts broadcasting her IP for new devices to discover\n\n# def onBroadcastingForNewDeviceStop(self)\nTriggered when Alice stops broadcasting her IP for new devices to discover. Typically happens when a new device was added\n\n# def onAuthenticated(self, session)\nTriggered when a user successfully authenticated through his pin code\n\n# def onAuthenticationFailed(self, session)\nTriggered when a user failed authentication with his pin code\n\n# def onAudioFrame(self, message)\nTriggered when audio frame are coming in through MQTT. Can be very consuming!\n\n# def onDeviceConnecting(self)\nTriggered when a device is trying to connect to Alice's network\n\n# def onDeviceDisconnecting(self)\nTriggered when a device is disconnecting from Alice's network\n\n# def onVadUp(self, **kwargs):\nTriggered when voice activity is heard\n\n# def onVadDown(self, **kwargs):\nTriggered when voice activity has stopped\n\n# def onNluTrained(self, **kwargs):\nTriggered when the NLU has finished training\n\n# def onSnipsAssistantInstalled(self, **kwargs):\nTriggered when the assistant.json file has installed after training\n\n# def onSnipsAssistantFailedTraining(self, **kwargs):\nTriggered when the assistant.json file failed training\n\n# User states\nDescription\n\nUser states events report a change of state for a user. Example: \"Hey Alice? I'm going bed!\" would trigger \"onGoingBed\" and change the user state accordingly\n\n# def onGoingBed(self)\nTriggered when a user tells Alice he's going bed\n\n# def onSleep(self)\nTriggered when a user tells Alice good night\n\n# def onWakeup(self)\nTriggered when a user tells Alice good morning\n\n# def onLeavingHome(self)\nTriggered when a user tells Alice he's leaving home\n\n# def onReturningHome(self)\nTriggered when a user tells Alice he's returned home\n\n# def onEating(self)\nTriggered when a user tells Alice he's eating\n\n# def onWatchingTV(self)\nTriggered when a user tells Alice he's watching TV\n\n# def onCooking(self)\nTriggered when a user tells Alice he's cooking\n\n# def onMakeup(self)\nTriggered when a user tells Alice he's putting makeup\n\n# def onContextSensitiveDelete(self, sessionId: str)\nTriggered when the user asks, in a context sensitive scenario, to delete or forget something. Example:What's my favorite color?blueForget this!ok\n\n# def onContextSensitiveEdit(self, sessionId: str)\nTriggered when the user asks, in a context sensitive scenario, to change something. Example:What's my favorite color?blueChange this pleaseSure, so tell me, what's your new favorite color?greenok\n\n# Timed events\nDescription\n\nWhen Alice starts, the following events are scheduled. Alice does calculate for them to start at the correct time so it reflects real life clock. Thus onFullHour doesn't mean Alice was running an hour on the first round, as if Alice start at 9:47, onFullMinute would trigger at 900, onFiveMinutes at 900, onFullHour and all the others at precisely 1000\n\n# def onFullMinute(self)\nTriggered every real time full minute.\n\n# def onFiveMinute(self)\nTriggered every real time five minutes. Example: 10:15, 10:35; 12:55\n\n# def onQuarterHour(self)\nTriggered every real time fifteen minutes. Example: 10:15, 7:30; 12:00\n\n# def onFullHour(self)\nTriggered every real time hour.\n\n# Telemetry reports\nDescription\n\nAlice comes with a telemetry manager skill can use to store weather data. The following events reflect these reports\n\n# def onUVIndexAlert(self, deviceList: list)\nTriggered when a device reports a UV index out of the limit set by the user\n\n# def onRaining(self, deviceList: list)\nTriggered when a device reports rain\n\n# def onTooMuchRain(self, deviceList: list)\nTriggered when a device reports a rain level above the limit set by the user\n\n# def onWindy(self, deviceList: list)\nTriggered when a device reports a wind strength above the limit set by the user\n\n# def onFreezing(self, deviceList: list)\nTriggered when a device reports temperature below 0°C\n\n# def onTemperatureHighAlert(self, deviceList: list)\nTriggered when a device reports a temperature above the limit set by the user\n\n# def onTemperatureLowAlert(self, deviceList: list)\nTriggered when a device reports a temperature under the limit set by the user\n\n# def onCO2Alert(self, deviceList: list)\nTriggered when a device reports a CO2 level above the limit set by the user\n\n# def onHumidityHighAlert(self, deviceList: list)\nTriggered when a device reports a humidity level above the limit set by the user\n\n# def onHumidityLowAlert(self, deviceList: list)\nTriggered when a device reports a humidity level under the limit set by the user\n\n# def onNoiseAlert(self, deviceList: list)\nTriggered when a device reports a sound level above the limit set by the user\n\n# def onPressureHighAlert(self, deviceList: list)\nTriggered when a device reports an atmospheric pressure level above the limit set by the user\n\n# def onPressureLowAlert(self, deviceList: list)\nTriggered when a device reports an atmospheric pressure level under the limit set by the user",contentLowercase:"# intro\nproject alice is driven by . what are events you might ask, or what do we mean with it? ever heard of \"action -> reaction\"? that's exactly it! when something happens, something occurs! events are by convention prefixed with \"on\", like \"onstormyweather\" or \"ondooropened\".\n\nwe provide a load of pre-made system events you can override in your skills. lemme try to list them all, more are added on regular bases though!\n\n# core events\ndescription\n\ncore events report what's happening under the hood, what the system is doing\n\n# def onstart(self)\ntriggered when alice is starting the skills\n\n# def onstop(self)\ntriggered when alice is stopping the skill. the skill is typically stopped when alice reboots, or after and update\n\n# def onbooted(self)\ntriggered when everything has started. comes after onstart\n\n# def onhotword(self, siteid: str, user: str = constants.unknown_user)\ntriggered when a hotword is heard. a hotword is a universal wakeword that doesn't identify a user\n\n# def onwakeword(self, siteid: str, user: str = constants.unknown_user)\ntriggered when a wakeword is heard. a wakeword is a hotword that identifies a user\n\n# def onhotwordtoggleon(self, siteid: str)\ntriggered when the hotword triggers itself on again. typically, the hotword is turned off once it's been heard, until the dialog is over.\n\n# def onhotwordtoggleoff(self, siteid: str)\ntriggered when the hotword goes off. typically, the hotword is turned off once it's been heard.\n\n# def onsessionstarted(self, session)\ntriggered when a session is started\n\n# def onstartlistening(self, session)\ntriggered when alice starts listening to you, right after the hotword was caught\n\n# def oncaptured(self, session)\ntriggered when alice captured what you said, when you finished talking to her\n\n# def onpartialtextcaptured(self, session, text: str, likelihood: float, seconds: float):\ntriggered every time the asr spits out a part of the utterance it is actively trying to capture.\n\n# def onusercancel(self, session)\ntriggered when the user cancels a dialog. this ends the session and doesn't trigger onintentparsed!\n\n# def onsessiontimeout(self, session)\ntriggered when a session times out\n\n# def onintentnotrecognized(self, session)\ntriggered when the nlu couldn't understand the intent or your saying. typically occurs after oncaptured\n\n# def onsessionerror(self, session)\ntriggered if the session ends with an error\n\n# def onsessionended(self, session)\ntriggered when the session ends\n\n# def onsay(self, session)\ntriggered when alice starts to say something\n\n# def onsayfinished(self, session)\ntriggered when alice has finished speaking\n\n# def onsessionqueued(self, session)\ntriggered when a new session is queued due to the fact there is already one on going\n\n# def onmessage(self, session)\ntriggered when a subscribed mqtt message is received\n\n# def onskillinstalled(self, **kwargs)\ntriggered when a skill has installed. info about what skill can be extracted from kwargs\n\n# def onskillupdated(self, **kwargs)\ntriggered when a skill has updated. info about what skill can be extracted from kwargs\n\n# def onskillinstallfailed(self, **kwargs)\ntriggered when a skill failed installing\n\n# def oninternetconnected(self)\ntriggered when internet connection is back, after a failure. won't trigger on boot!\n\n# def oninternetlost(self)\ntriggered when internet connection is lost.\n\n# def onbroadcastingfornewdevicestart(self, session)\ntriggered when alice starts broadcasting her ip for new devices to discover\n\n# def onbroadcastingfornewdevicestop(self)\ntriggered when alice stops broadcasting her ip for new devices to discover. typically happens when a new device was added\n\n# def onauthenticated(self, session)\ntriggered when a user successfully authenticated through his pin code\n\n# def onauthenticationfailed(self, session)\ntriggered when a user failed authentication with his pin code\n\n# def onaudioframe(self, message)\ntriggered when audio frame are coming in through mqtt. can be very consuming!\n\n# def ondeviceconnecting(self)\ntriggered when a device is trying to connect to alice's network\n\n# def ondevicedisconnecting(self)\ntriggered when a device is disconnecting from alice's network\n\n# def onvadup(self, **kwargs):\ntriggered when voice activity is heard\n\n# def onvaddown(self, **kwargs):\ntriggered when voice activity has stopped\n\n# def onnlutrained(self, **kwargs):\ntriggered when the nlu has finished training\n\n# def onsnipsassistantinstalled(self, **kwargs):\ntriggered when the assistant.json file has installed after training\n\n# def onsnipsassistantfailedtraining(self, **kwargs):\ntriggered when the assistant.json file failed training\n\n# user states\ndescription\n\nuser states events report a change of state for a user. example: \"hey alice? i'm going bed!\" would trigger \"ongoingbed\" and change the user state accordingly\n\n# def ongoingbed(self)\ntriggered when a user tells alice he's going bed\n\n# def onsleep(self)\ntriggered when a user tells alice good night\n\n# def onwakeup(self)\ntriggered when a user tells alice good morning\n\n# def onleavinghome(self)\ntriggered when a user tells alice he's leaving home\n\n# def onreturninghome(self)\ntriggered when a user tells alice he's returned home\n\n# def oneating(self)\ntriggered when a user tells alice he's eating\n\n# def onwatchingtv(self)\ntriggered when a user tells alice he's watching tv\n\n# def oncooking(self)\ntriggered when a user tells alice he's cooking\n\n# def onmakeup(self)\ntriggered when a user tells alice he's putting makeup\n\n# def oncontextsensitivedelete(self, sessionid: str)\ntriggered when the user asks, in a context sensitive scenario, to delete or forget something. example:what's my favorite color?blueforget this!ok\n\n# def oncontextsensitiveedit(self, sessionid: str)\ntriggered when the user asks, in a context sensitive scenario, to change something. example:what's my favorite color?bluechange this pleasesure, so tell me, what's your new favorite color?greenok\n\n# timed events\ndescription\n\nwhen alice starts, the following events are scheduled. alice does calculate for them to start at the correct time so it reflects real life clock. thus onfullhour doesn't mean alice was running an hour on the first round, as if alice start at 9:47, onfullminute would trigger at 900, onfiveminutes at 900, onfullhour and all the others at precisely 1000\n\n# def onfullminute(self)\ntriggered every real time full minute.\n\n# def onfiveminute(self)\ntriggered every real time five minutes. example: 10:15, 10:35; 12:55\n\n# def onquarterhour(self)\ntriggered every real time fifteen minutes. example: 10:15, 7:30; 12:00\n\n# def onfullhour(self)\ntriggered every real time hour.\n\n# telemetry reports\ndescription\n\nalice comes with a telemetry manager skill can use to store weather data. the following events reflect these reports\n\n# def onuvindexalert(self, devicelist: list)\ntriggered when a device reports a uv index out of the limit set by the user\n\n# def onraining(self, devicelist: list)\ntriggered when a device reports rain\n\n# def ontoomuchrain(self, devicelist: list)\ntriggered when a device reports a rain level above the limit set by the user\n\n# def onwindy(self, devicelist: list)\ntriggered when a device reports a wind strength above the limit set by the user\n\n# def onfreezing(self, devicelist: list)\ntriggered when a device reports temperature below 0°c\n\n# def ontemperaturehighalert(self, devicelist: list)\ntriggered when a device reports a temperature above the limit set by the user\n\n# def ontemperaturelowalert(self, devicelist: list)\ntriggered when a device reports a temperature under the limit set by the user\n\n# def onco2alert(self, devicelist: list)\ntriggered when a device reports a co2 level above the limit set by the user\n\n# def onhumidityhighalert(self, devicelist: list)\ntriggered when a device reports a humidity level above the limit set by the user\n\n# def onhumiditylowalert(self, devicelist: list)\ntriggered when a device reports a humidity level under the limit set by the user\n\n# def onnoisealert(self, devicelist: list)\ntriggered when a device reports a sound level above the limit set by the user\n\n# def onpressurehighalert(self, devicelist: list)\ntriggered when a device reports an atmospheric pressure level above the limit set by the user\n\n# def onpressurelowalert(self, devicelist: list)\ntriggered when a device reports an atmospheric pressure level under the limit set by the user",charsets:{}},{title:"Logging",frontmatter:{title:"Logging",sidebarDepth:2},regularPath:"/skill-development/logging.html",relativePath:"skill-development/logging.md",key:"v-721cf0b6",path:"/skill-development/logging.html",headers:[{level:2,title:"Basic Usage",slug:"basic-usage",charIndex:438},{level:2,title:"Logging Levels",slug:"logging-levels",charIndex:1252},{level:3,title:"Debug",slug:"debug",charIndex:1355},{level:3,title:"Info",slug:"info",charIndex:1133},{level:3,title:"Warning",slug:"warning",charIndex:1885},{level:3,title:"Error",slug:"error",charIndex:2141},{level:3,title:"Critical",slug:"critical",charIndex:2309},{level:3,title:"Fatal",slug:"fatal",charIndex:2497},{level:2,title:"Where do these messages get logged?",slug:"where-do-these-messages-get-logged",charIndex:2629},{level:2,title:"Styling your logs",slug:"styling-your-logs",charIndex:2885},{level:3,title:"Bold:",slug:"bold",charIndex:3121},{level:3,title:"Underlined:",slug:"underlined",charIndex:3147},{level:3,title:"Dimmed:",slug:"dimmed",charIndex:3185},{level:3,title:"Colored:",slug:"colored",charIndex:3215},{level:2,title:"Using the logger outside the skill class",slug:"using-the-logger-outside-the-skill-class",charIndex:3305}],lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:"Basic Usage Logging Levels Debug Info Warning Error Critical Fatal Where do these messages get logged? Styling your logs Bold: Underlined: Dimmed: Colored: Using the logger outside the skill class",content:'# Intro\nTo track events and data within your skill we can use logging. If you are new to programming, this is a way to output a message that can tell you the state of your skill at a particular point in time, details about an error that has occurred, or simply noting that a program reached a particular point in the code.\n\nTIP\n\nLogging is useful during skill development, as well as to help end-users diagnose problems in the future.\n\n# Basic Usage\nA logger is available through the AliceSkill base class. This means that you can use it within a skill without needing to import the logging package.\n\nHere is a quick example of an info level message used in a skill. We will learn more about different levels shortly.\n\nfrom core.base.model.AliceSkill import AliceSkill\nfrom core.dialog.model.DialogSession import DialogSession\nfrom core.util.Decorators import IntentHandler\n\nclass HelloWorldskill(AliceSkill):\n\n\n\t@IntentHandler(\'HelloWorldIntent\')\n\tdef helloWorldIntent(self, session: DialogSession, **_kwargs):\n\t\t"""\n\t\t\tskills can log useful information.\n\t\t\tThese will appear in the Web Interface and the logs file.\n\t\t"""\n\t\tself.logInfo("This is an info level log message.")\n\t\tself.endDialog(session.sessionId, self.randomTalk(text=\'helloWorld\'))\n\n\n# Logging Levels\nThere are five types of log messages available that are used for different purposes.\n\n# Debug\nself.logDebug\n\n\nDebug messages are used for information that will help to diagnose problems. These are particularly useful if there is anything that has the potential to break in the future. They will only show if debug is set to true in the settings.\n\n# Info\nself.logInfo\n\n\nInfo messages provide general information when the skill is running as expected. These messages will always be logged so are useful when actively developing a skill, but should be used sparingly once a skill is published for other people to use.\n\n# Warning\nself.logWarning\n\n\nWarning messages are used to indicate that something has gone wrong, but the skill will continue to function. It is possible to output a stack trace when needed using:\n\nself.logWarning(msg=\'warning message\', printStack=True):\n\n\n# Error\nself.logError\n\n\nError messages indicate that a serious problem has occurred and the skill will not be able to function. They will always output a stack trace.\n\n# Critical\nself.logCritical\n\n\nCritical error messages indicate that a very serious problem has occurred and the skill will not be able to function. They will always output a stack trace.\n\n# Fatal\nself.logFatal\n\n\nlogFatal is an unrecoverable error that forces Alice to shut down. It is not recommended to use in skills!\n\n# Where do these messages get logged?\nLog messages from a skill are displayed in the ProjectAlice Web Interface so that a User can see in real-time what is happening in the skill. They are also written to the logs file located at: ~/ProjectAlice/var/logs\n\n# Styling your logs\nLogs support a similar to markdown syntax. You can output bold text, underlined, dimmed and even colored text! These formatted logs will only show on stdout and on the interface. Here\'s how you can style your logs:\n\n# Bold:\n**My bold text**\n\n# Underlined:\n__My underlined text__\n\n# Dimmed:\n--My dimmed text--\n\n# Colored:\n![red](My colored text)\n\nAvailable colors are: red, green, yellow, blue, grey\n\n# Using the logger outside the skill class\nAs the logger is provided by the skill class, it is only available within that scope. If you need to log messages from outside of this class, you can import the logger manually.\n\nfrom core.util.model.Logger import Logger\n\n\nThis can then be used outside your skill\'s class. Extending our first example:\n\nfrom core.base.model.AliceSkill import AliceSkill\nfrom core.dialog.model.DialogSession import DialogSession\nfrom core.util.Decorators import IntentHandler\nfrom core.util.model.Logger import Logger\n\nLogger().logInfo(\n\t"This is a logged info level message outside of the skill class scope"\n)\n\ndef my_special_function():\n\tLogger().logInfo("Another usage of logging.")\n\nclass HelloWorldskill(AliceSkill):\n\t@IntentHandler(\'HelloWorldIntent\')\n\tdef helloWorldIntent(self, session: DialogSession, **_kwargs):\n\t\t"""\n\t\t\tskills can log useful information.\n\t\t\tThese will appear in the Web Interface and the logs file.\n\t\t"""\n\t\tself.logInfo("This is an info level log message.")\n\t\tself.endDialog(session.sessionId, self.randomTalk(text=\'helloWorld\'))\n\t\tmy_special_function()\n\n\nWARNING\n\nWhen you want to print stack traces when logging outside of the skill\'s class it might be required to provide a different depth for the stack trace to the Logger class, since the default depth of the stack trace is 4.\n\nLogger(depth=6).logError(\'log message with stack trace\')',contentLowercase:'# intro\nto track events and data within your skill we can use logging. if you are new to programming, this is a way to output a message that can tell you the state of your skill at a particular point in time, details about an error that has occurred, or simply noting that a program reached a particular point in the code.\n\ntip\n\nlogging is useful during skill development, as well as to help end-users diagnose problems in the future.\n\n# basic usage\na logger is available through the aliceskill base class. this means that you can use it within a skill without needing to import the logging package.\n\nhere is a quick example of an info level message used in a skill. we will learn more about different levels shortly.\n\nfrom core.base.model.aliceskill import aliceskill\nfrom core.dialog.model.dialogsession import dialogsession\nfrom core.util.decorators import intenthandler\n\nclass helloworldskill(aliceskill):\n\n\n\t@intenthandler(\'helloworldintent\')\n\tdef helloworldintent(self, session: dialogsession, **_kwargs):\n\t\t"""\n\t\t\tskills can log useful information.\n\t\t\tthese will appear in the web interface and the logs file.\n\t\t"""\n\t\tself.loginfo("this is an info level log message.")\n\t\tself.enddialog(session.sessionid, self.randomtalk(text=\'helloworld\'))\n\n\n# logging levels\nthere are five types of log messages available that are used for different purposes.\n\n# debug\nself.logdebug\n\n\ndebug messages are used for information that will help to diagnose problems. these are particularly useful if there is anything that has the potential to break in the future. they will only show if debug is set to true in the settings.\n\n# info\nself.loginfo\n\n\ninfo messages provide general information when the skill is running as expected. these messages will always be logged so are useful when actively developing a skill, but should be used sparingly once a skill is published for other people to use.\n\n# warning\nself.logwarning\n\n\nwarning messages are used to indicate that something has gone wrong, but the skill will continue to function. it is possible to output a stack trace when needed using:\n\nself.logwarning(msg=\'warning message\', printstack=true):\n\n\n# error\nself.logerror\n\n\nerror messages indicate that a serious problem has occurred and the skill will not be able to function. they will always output a stack trace.\n\n# critical\nself.logcritical\n\n\ncritical error messages indicate that a very serious problem has occurred and the skill will not be able to function. they will always output a stack trace.\n\n# fatal\nself.logfatal\n\n\nlogfatal is an unrecoverable error that forces alice to shut down. it is not recommended to use in skills!\n\n# where do these messages get logged?\nlog messages from a skill are displayed in the projectalice web interface so that a user can see in real-time what is happening in the skill. they are also written to the logs file located at: ~/projectalice/var/logs\n\n# styling your logs\nlogs support a similar to markdown syntax. you can output bold text, underlined, dimmed and even colored text! these formatted logs will only show on stdout and on the interface. here\'s how you can style your logs:\n\n# bold:\n**my bold text**\n\n# underlined:\n__my underlined text__\n\n# dimmed:\n--my dimmed text--\n\n# colored:\n![red](my colored text)\n\navailable colors are: red, green, yellow, blue, grey\n\n# using the logger outside the skill class\nas the logger is provided by the skill class, it is only available within that scope. if you need to log messages from outside of this class, you can import the logger manually.\n\nfrom core.util.model.logger import logger\n\n\nthis can then be used outside your skill\'s class. extending our first example:\n\nfrom core.base.model.aliceskill import aliceskill\nfrom core.dialog.model.dialogsession import dialogsession\nfrom core.util.decorators import intenthandler\nfrom core.util.model.logger import logger\n\nlogger().loginfo(\n\t"this is a logged info level message outside of the skill class scope"\n)\n\ndef my_special_function():\n\tlogger().loginfo("another usage of logging.")\n\nclass helloworldskill(aliceskill):\n\t@intenthandler(\'helloworldintent\')\n\tdef helloworldintent(self, session: dialogsession, **_kwargs):\n\t\t"""\n\t\t\tskills can log useful information.\n\t\t\tthese will appear in the web interface and the logs file.\n\t\t"""\n\t\tself.loginfo("this is an info level log message.")\n\t\tself.enddialog(session.sessionid, self.randomtalk(text=\'helloworld\'))\n\t\tmy_special_function()\n\n\nwarning\n\nwhen you want to print stack traces when logging outside of the skill\'s class it might be required to provide a different depth for the stack trace to the logger class, since the default depth of the stack trace is 4.\n\nlogger(depth=6).logerror(\'log message with stack trace\')',charsets:{}},{title:"Missing slot information",frontmatter:{title:"Missing slot information",sidebarDepth:3},regularPath:"/skill-development/missing-slot-info.html",relativePath:"skill-development/missing-slot-info.md",key:"v-1477b745",path:"/skill-development/missing-slot-info.html",headers:[{level:2,title:"Study case",slug:"study-case",charIndex:78},{level:2,title:"The potential problem",slug:"the-potential-problem",charIndex:711},{level:2,title:"The bad solution",slug:"the-bad-solution",charIndex:956},{level:2,title:"The good solution",slug:"the-good-solution",charIndex:1587}],lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:"Study case The potential problem The bad solution The good solution",content:"# Intro\nSometimes you need more information than what the user provided...\n\n# Study case\nLet's take an intent with a few slots, highlighted in the example.\n\nHey Alice?Yes?Can you book me a flight from Geneva to New York for tuesday 23 third of april around midday please?Of course, let me check that!For this example (and also in reality) a flight can only be booked if\n\n * The user has the intention to book a ticket, which requires the intent to be correctly detected\n * The user provided the following information, aka slots: * origin: Where the user wants to depart from\n    * destination: Where the user wants to travel to\n    * date: A date and possibly a time at which the user wants to leave\n   \n   \n\n# The potential problem\nNow, let's imagine the following:\n\nHey Alice?Yes?Can you book me a flight from Geneva please?The problem is that the user did not provide a destination or a date, for which Alice will have to query the user for details.\n\n# The bad solution\nYou could use the classic intent decorators with 4 separate methods, which is not recommended but written here to demonstrate:\n\n@IntentHandler('AnswerFrom')\ndef answerFrom(self, session: DialogSession):\n\tpass\n\n\n@IntentHandler('AnswerTo')\ndef answerTo(self, session: DialogSession):\n\tpass\n\t\n\t\n@IntentHandler('AnswerDate')\ndef answerDate(self, session: DialogSession):\n\tpass\n\n\n@IntentHandler('BookFlight')\ndef bookFlight(self, session: DialogSession):\n\tpass\n\n\nWell, not that effective, is it? lots of writing only to declare the methods, imagine the work in each of the methods to finally get to book the ticket.\n\n# The good solution\nThis is what I call the Fill the glass method, because we come always at the same method until everything is filled.\n\n@IntentHandler('AnswerFrom')\n@IntentHandler('AnswerTo')\n@IntentHandler('AnswerDate')\n@IntentHandler('BookFlight')\ndef bookFlight(self, session: DialogSession):\n\tif 'From' not in session.slots:\n\t\tself.continueDialog(\n\t\t\tsessionId=session.sessionId,\n\t\t\ttext=self.randomTalk(text='WhereFrom'),\n\t\t\tintentFilter=['AnswerFrom'],\n\t\t\tslot='From'\n\t\t)\n\t\treturn\n\telif 'To' not in session.slots:\n\t\tself.continueDialog(\n\t\t\tsessionId=session.sessionId,\n\t\t\ttext=self.randomTalk(text='WhereTo'),\n\t\t\tintentFilter=['AnswerTo']\n\t\t)\n\t\treturn\n\telif 'Date' not in session.slots:\n\t\tself.continueDialog(\n\t\t\tsessionId=session.sessionId,\n\t\t\ttext=self.randomTalk(text='WhatDate'),\n\t\t\tintentFilter=['AnswerDate']\n\t\t)\n\t\treturn\n\n\t# If we got here, we are sure to have all three required information!\n\t# So we can continue and proceed to the booking!\n\n\nWhat we did here is link our 4 intents to the same method bookFlight and we check if all our slots are filled. If not, we ask the user for the information and limit the NLU on the intent that interests us using intentFilter. In the first if condition I even mentioned the slot the NLU should focus on extracting!\n\nAs the answer will come back to the same method, the checks will naturally continue until all three are False and we can proceed to the booking!\n\nMake sure to read builtin intents to understand dialogue state or you will end up having collisions with other skills!",contentLowercase:"# intro\nsometimes you need more information than what the user provided...\n\n# study case\nlet's take an intent with a few slots, highlighted in the example.\n\nhey alice?yes?can you book me a flight from geneva to new york for tuesday 23 third of april around midday please?of course, let me check that!for this example (and also in reality) a flight can only be booked if\n\n * the user has the intention to book a ticket, which requires the intent to be correctly detected\n * the user provided the following information, aka slots: * origin: where the user wants to depart from\n    * destination: where the user wants to travel to\n    * date: a date and possibly a time at which the user wants to leave\n   \n   \n\n# the potential problem\nnow, let's imagine the following:\n\nhey alice?yes?can you book me a flight from geneva please?the problem is that the user did not provide a destination or a date, for which alice will have to query the user for details.\n\n# the bad solution\nyou could use the classic intent decorators with 4 separate methods, which is not recommended but written here to demonstrate:\n\n@intenthandler('answerfrom')\ndef answerfrom(self, session: dialogsession):\n\tpass\n\n\n@intenthandler('answerto')\ndef answerto(self, session: dialogsession):\n\tpass\n\t\n\t\n@intenthandler('answerdate')\ndef answerdate(self, session: dialogsession):\n\tpass\n\n\n@intenthandler('bookflight')\ndef bookflight(self, session: dialogsession):\n\tpass\n\n\nwell, not that effective, is it? lots of writing only to declare the methods, imagine the work in each of the methods to finally get to book the ticket.\n\n# the good solution\nthis is what i call the fill the glass method, because we come always at the same method until everything is filled.\n\n@intenthandler('answerfrom')\n@intenthandler('answerto')\n@intenthandler('answerdate')\n@intenthandler('bookflight')\ndef bookflight(self, session: dialogsession):\n\tif 'from' not in session.slots:\n\t\tself.continuedialog(\n\t\t\tsessionid=session.sessionid,\n\t\t\ttext=self.randomtalk(text='wherefrom'),\n\t\t\tintentfilter=['answerfrom'],\n\t\t\tslot='from'\n\t\t)\n\t\treturn\n\telif 'to' not in session.slots:\n\t\tself.continuedialog(\n\t\t\tsessionid=session.sessionid,\n\t\t\ttext=self.randomtalk(text='whereto'),\n\t\t\tintentfilter=['answerto']\n\t\t)\n\t\treturn\n\telif 'date' not in session.slots:\n\t\tself.continuedialog(\n\t\t\tsessionid=session.sessionid,\n\t\t\ttext=self.randomtalk(text='whatdate'),\n\t\t\tintentfilter=['answerdate']\n\t\t)\n\t\treturn\n\n\t# if we got here, we are sure to have all three required information!\n\t# so we can continue and proceed to the booking!\n\n\nwhat we did here is link our 4 intents to the same method bookflight and we check if all our slots are filled. if not, we ask the user for the information and limit the nlu on the intent that interests us using intentfilter. in the first if condition i even mentioned the slot the nlu should focus on extracting!\n\nas the answer will come back to the same method, the checks will naturally continue until all three are false and we can proceed to the booking!\n\nmake sure to read builtin intents to understand dialogue state or you will end up having collisions with other skills!",charsets:{}},{title:"Adding a new language support",frontmatter:{title:"Adding a new language support",sidebarDepth:4,tags:["language support","translate"]},regularPath:"/skill-development/new-language-support.html",relativePath:"skill-development/new-language-support.md",key:"v-a71cd67a",path:"/skill-development/new-language-support.html",headers:[{level:2,title:'What means "Adding a new language support"',slug:"what-means-adding-a-new-language-support",charIndex:null},{level:2,title:"How to add a new language support",slug:"how-to-add-a-new-language-support",charIndex:1290},{level:2,title:"Adding a new system language support",slug:"adding-a-new-system-language-support",charIndex:2014},{level:3,title:"Basic skills",slug:"basic-skills",charIndex:2474},{level:3,title:"System",slug:"system",charIndex:2701},{level:3,title:"Interface",slug:"interface",charIndex:2820}],lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:'What means "Adding a new language support" How to add a new language support Adding a new system language support Basic skills System Interface',content:'# Intro\nWe currently natively support the following languages:\n\n * English\n * French\n * German\n * Italian\n\nThis means those languages are available as a configuration, and the entire system can run with them.\n\nBeside these languages, we provide support for nearly all languages in the world, for skills only, for as long as you do not set Alice as offline only. We can use Google Translate free services to obtain a good result when sending the request to our NLU.\n\nYou can add easily add a new language support for either the entire system or some skills or both\n\nWARNING\n\nAlice is a friend of yours, she\'s familiar and not impersonal. She uses the familiar "you" and not the formal "you". In french she uses "tu" and not "vous", in german "du" and not "Sie" etc etc\n\n# What means "Adding a new language support"\nWe speak of translation, but it\'s not really a translation, it\'s basically adding the language support. It\'s of no use to translate word for word what\'s in the files. It\'s really about creating a new language support for the skill. Don\'t just translate, but add new ways of saying, remove those that are not used in your language, turn utterances around, make it lively. Same goes for the talk files, just use your imagination to make Alice sound natural in your language!\n\n# How to add a new language support\nYou will need a Github account to translate skills or the system. Once you have your account and are logged in, simply Fork the skill you want to translate. Clone your fork on your computer and do the translation.\n\nCommit your changes every now and then and Push them on your repository. When translated, do not forget to increment the version number in the .installfile. Once everything is done, and you successfully ran the basic verifications, you can create a Pull request which we will review and merge if possible and otherwise inform you of what\'s still needed.\n\nThe sections talk files and dialog templates provide further information about the files that need to be translated.\n\n# Adding a new system language support\nIf you feel like adding a new system language support, we strongly encourage you to first get in touch with us. It\'s easy to add a new language support, but requires some Alice knowledge to better grasp the context in which the language strings are used. Again, it\'s not about translating, it\'s about adding a new language. Make it feel real, lively, familiar! There are quite a few files to translate, let\'s list them!\n\n# Basic skills\n * AliceCore\n * ContextSensitive\n * DateDayTimeYear\n * RedQueen\n * Telemetry\n\nDon\'t forget to:\n\n * Add yourself in the maintainers in the install file\n * Add your language code as supported in the language file\n\n# System\n * ProjectAlice/system/manager/LanguageManager/strings.json\n * ProjectAlice/system/manager/TalkManager/talks\n\n# Interface\n * ProjectAlice/core/interface/languages\n\nOnce these files are made, please contact us so that we can add the language as supported on the core side!',contentLowercase:'# intro\nwe currently natively support the following languages:\n\n * english\n * french\n * german\n * italian\n\nthis means those languages are available as a configuration, and the entire system can run with them.\n\nbeside these languages, we provide support for nearly all languages in the world, for skills only, for as long as you do not set alice as offline only. we can use google translate free services to obtain a good result when sending the request to our nlu.\n\nyou can add easily add a new language support for either the entire system or some skills or both\n\nwarning\n\nalice is a friend of yours, she\'s familiar and not impersonal. she uses the familiar "you" and not the formal "you". in french she uses "tu" and not "vous", in german "du" and not "sie" etc etc\n\n# what means "adding a new language support"\nwe speak of translation, but it\'s not really a translation, it\'s basically adding the language support. it\'s of no use to translate word for word what\'s in the files. it\'s really about creating a new language support for the skill. don\'t just translate, but add new ways of saying, remove those that are not used in your language, turn utterances around, make it lively. same goes for the talk files, just use your imagination to make alice sound natural in your language!\n\n# how to add a new language support\nyou will need a github account to translate skills or the system. once you have your account and are logged in, simply fork the skill you want to translate. clone your fork on your computer and do the translation.\n\ncommit your changes every now and then and push them on your repository. when translated, do not forget to increment the version number in the .installfile. once everything is done, and you successfully ran the basic verifications, you can create a pull request which we will review and merge if possible and otherwise inform you of what\'s still needed.\n\nthe sections talk files and dialog templates provide further information about the files that need to be translated.\n\n# adding a new system language support\nif you feel like adding a new system language support, we strongly encourage you to first get in touch with us. it\'s easy to add a new language support, but requires some alice knowledge to better grasp the context in which the language strings are used. again, it\'s not about translating, it\'s about adding a new language. make it feel real, lively, familiar! there are quite a few files to translate, let\'s list them!\n\n# basic skills\n * alicecore\n * contextsensitive\n * datedaytimeyear\n * redqueen\n * telemetry\n\ndon\'t forget to:\n\n * add yourself in the maintainers in the install file\n * add your language code as supported in the language file\n\n# system\n * projectalice/system/manager/languagemanager/strings.json\n * projectalice/system/manager/talkmanager/talks\n\n# interface\n * projectalice/core/interface/languages\n\nonce these files are made, please contact us so that we can add the language as supported on the core side!',charsets:{}},{title:"Publishing your skill",frontmatter:{title:"Publishing your skill",sidebarDepth:3},regularPath:"/skill-development/publishing-to-skill-store.html",relativePath:"skill-development/publishing-to-skill-store.md",key:"v-88c0dfb6",path:"/skill-development/publishing-to-skill-store.html",headers:[{level:2,title:"Checking your skill",slug:"checking-your-skill",charIndex:256},{level:3,title:"Code guideline",slug:"code-guideline",charIndex:342},{level:3,title:"Skill validation",slug:"skill-validation",charIndex:770},{level:2,title:"Publishing",slug:"publishing",charIndex:1492},{level:2,title:"After publishing",slug:"after-publishing",charIndex:2061}],lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:"Checking your skill Code guideline Skill validation Publishing After publishing",content:"# Intro\nSo you think your freshly written skill is ready to be shared with the rest of the world? That's great! Here are the steps to have your skill published, from checking that everything is ok to have it published, let's review the remaining steps.\n\n# Checking your skill\nBecause we like things clean and following a strict guideline!\n\n# Code guideline\nVery first step, to make sure the demon Psycho doesn't eat you alive, you want to check your syntax and code formatting. Are they following our code guidelines? Did you indent your code with tabs and not 4 spaces? Did you strong type your methods, adding variable type hints and return type hint? Your methods names are following camelCase and so do your variables? Check the guidelines and you'll be all set!\n\n# Skill validation\nThen we want to make sure your skill is operational and clean. For that, your need a handy tool that we provide, called projectalice-sk. Let's first install it:\n\npip3 install projectalice-sk\n\nNavigate to the parent directory where you have your skill. If we continue our HelloWorld example:\n\ncd ~/ProjectAlice/skills\n\nAnd start the check!\n\nprojectalice-sk validate --paths HelloWorld\n\nThis will output a few things while checking your talk files, your dialog templates, your install file and others. If everything comes out clean it will tell you the skill is valid. Keep in mind it still doesn't mean it is working but at least it won't crash Alice's start if deployed on an existing assistant. Great\n\n# Publishing\nAs of now, I'm still thinking on how people are going to publish their skills to our store. I want to keep an eye on the proposed skills and make sure it's not malicious code and that it is of quality. I'm a real pain, I can tell you, but that's only for the good of the many. Knowing this, you understand that the publishing is made exclusively by the Project Alice team, after some checking and deployments on our side, in fact, we have several things to do to make your skill available.\n\nWhat you want to do though, is propose your skill for the store\n\n# After publishing\nOnce we get your request, we'll fork your repository into Project Alice organisation, review your skill and make sure everything's ok. If there's something not ok, we'll let you know. Once we have forked your skill, you'll need to open Pull Requests onto it to keep it updated!\n\nOnce we have forked it and added it to our quality and store control Continuous integration, you can check it's status by going to:\n\nhttps://projectalice.io/skill_YOUR_SKILL_NAME\n\nOn top of the readme, you will find two badges:\n\nThe pipeline badge should say \"passed\" and be green. In case not, something went wrong publishing the skill. Simply click on the badge to be redirected to gitlab where you will be able to understand what failed. We have 5 jobs that run before a skill is available and you can influence the 3 first ones because they test your code and react to your changes in files:\n\nThe third one, the sonarcube check won't stop a deployment but reflects the quality of your code. It is allowed to fail. The first 2 jobs though cannot fail or your skill won't get published. If either one of them or both failed, click on their icons to navigate to the test and a report of what failed. You'll need to correct those and submit pull requests to fix the issues. Once the first 2 tests succeeded and the third ran, the deployment will beginning and should take about 2 minutes.\n\nThe second badge on the readme is the \"Quality gate\" status, run by Sonarcube. This test evaluates your code quality and should be green too. If not, you can click on it to be redirected to Sonarcloud where you will find the issues related to your skill code.\n\nSubscribe\n\nPlease subscribe to the fork of your skill so you get alerted when someone reports a bug on your skill.\n\nPlease subscribe to the repository on Gitlab so you get email alerted if a job fails for your skill.",contentLowercase:"# intro\nso you think your freshly written skill is ready to be shared with the rest of the world? that's great! here are the steps to have your skill published, from checking that everything is ok to have it published, let's review the remaining steps.\n\n# checking your skill\nbecause we like things clean and following a strict guideline!\n\n# code guideline\nvery first step, to make sure the demon psycho doesn't eat you alive, you want to check your syntax and code formatting. are they following our code guidelines? did you indent your code with tabs and not 4 spaces? did you strong type your methods, adding variable type hints and return type hint? your methods names are following camelcase and so do your variables? check the guidelines and you'll be all set!\n\n# skill validation\nthen we want to make sure your skill is operational and clean. for that, your need a handy tool that we provide, called projectalice-sk. let's first install it:\n\npip3 install projectalice-sk\n\nnavigate to the parent directory where you have your skill. if we continue our helloworld example:\n\ncd ~/projectalice/skills\n\nand start the check!\n\nprojectalice-sk validate --paths helloworld\n\nthis will output a few things while checking your talk files, your dialog templates, your install file and others. if everything comes out clean it will tell you the skill is valid. keep in mind it still doesn't mean it is working but at least it won't crash alice's start if deployed on an existing assistant. great\n\n# publishing\nas of now, i'm still thinking on how people are going to publish their skills to our store. i want to keep an eye on the proposed skills and make sure it's not malicious code and that it is of quality. i'm a real pain, i can tell you, but that's only for the good of the many. knowing this, you understand that the publishing is made exclusively by the project alice team, after some checking and deployments on our side, in fact, we have several things to do to make your skill available.\n\nwhat you want to do though, is propose your skill for the store\n\n# after publishing\nonce we get your request, we'll fork your repository into project alice organisation, review your skill and make sure everything's ok. if there's something not ok, we'll let you know. once we have forked your skill, you'll need to open pull requests onto it to keep it updated!\n\nonce we have forked it and added it to our quality and store control continuous integration, you can check it's status by going to:\n\nhttps://projectalice.io/skill_your_skill_name\n\non top of the readme, you will find two badges:\n\nthe pipeline badge should say \"passed\" and be green. in case not, something went wrong publishing the skill. simply click on the badge to be redirected to gitlab where you will be able to understand what failed. we have 5 jobs that run before a skill is available and you can influence the 3 first ones because they test your code and react to your changes in files:\n\nthe third one, the sonarcube check won't stop a deployment but reflects the quality of your code. it is allowed to fail. the first 2 jobs though cannot fail or your skill won't get published. if either one of them or both failed, click on their icons to navigate to the test and a report of what failed. you'll need to correct those and submit pull requests to fix the issues. once the first 2 tests succeeded and the third ran, the deployment will beginning and should take about 2 minutes.\n\nthe second badge on the readme is the \"quality gate\" status, run by sonarcube. this test evaluates your code quality and should be green too. if not, you can click on it to be redirected to sonarcloud where you will find the issues related to your skill code.\n\nsubscribe\n\nplease subscribe to the fork of your skill so you get alerted when someone reports a bug on your skill.\n\nplease subscribe to the repository on gitlab so you get email alerted if a job fails for your skill.",charsets:{}},{title:"Room configuration",frontmatter:{title:"Room configuration",sidebarDepth:3},regularPath:"/skill-development/room-configuration.html",relativePath:"skill-development/room-configuration.md",key:"v-e13174ee",path:"/skill-development/room-configuration.html",lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:null,content:"# WIP CONCEPT: Room configuration\nIf you develop a skill that introduces a new device type, that skill can provide two types of configs.\n\n * The device configuration (e.g. IP, token, secret)\n * The room specific configuration (e.g. roborock room ID)\n\nThese configurations will be filled in the room interface.\n\nIn addition two methods can be implemented:\n\n * getStatusIcon(room)\n * toggleMainFunction(room)\n\n# Databases:\n# rooms:\n * UUID\n * name\n * synonym\n\n# devicesTypes:\n * type name\n * ?synonyms\n * config (custom json)\n * room config (custom json)\n * ?hasMainFunction\n\n# deviceLinks:\n * UUID\n * device_UUID\n * room_UUID\n * roomConfig (filled json defined by deviceTypes)\n * ?onlyUser (user specific devices?)\n * ?AIcreated (future: was that entry created because Alice detected a pattern?)",contentLowercase:"# wip concept: room configuration\nif you develop a skill that introduces a new device type, that skill can provide two types of configs.\n\n * the device configuration (e.g. ip, token, secret)\n * the room specific configuration (e.g. roborock room id)\n\nthese configurations will be filled in the room interface.\n\nin addition two methods can be implemented:\n\n * getstatusicon(room)\n * togglemainfunction(room)\n\n# databases:\n# rooms:\n * uuid\n * name\n * synonym\n\n# devicestypes:\n * type name\n * ?synonyms\n * config (custom json)\n * room config (custom json)\n * ?hasmainfunction\n\n# devicelinks:\n * uuid\n * device_uuid\n * room_uuid\n * roomconfig (filled json defined by devicetypes)\n * ?onlyuser (user specific devices?)\n * ?aicreated (future: was that entry created because alice detected a pattern?)",charsets:{}},{title:"Skill configuration file",frontmatter:{title:"Skill configuration file",sidebarDepth:2},regularPath:"/skill-development/skill-configuration-file.html",relativePath:"skill-development/skill-configuration-file.md",key:"v-00da6733",path:"/skill-development/skill-configuration-file.html",headers:[{level:2,title:"The template file",slug:"the-template-file",charIndex:720},{level:2,title:"The generated config file",slug:"the-generated-config-file",charIndex:5145},{level:2,title:"Using the settings in my skill",slug:"using-the-settings-in-my-skill",charIndex:5658},{level:2,title:"Accessing system settings from my skill",slug:"accessing-system-settings-from-my-skill",charIndex:6337},{level:2,title:"Update a config value",slug:"update-a-config-value",charIndex:6738},{level:2,title:"What we learned",slug:"what-we-learned",charIndex:7458}],lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:"The template file The generated config file Using the settings in my skill Accessing system settings from my skill Update a config value What we learned",content:'# Intro\nAt some point, your skill will need some user dependant configuration, per example an api key, a threshold, login or a password. This is where skill configuration files come in the game!\n\nAs a dev you have to provide a skill configuration template file. Based on this file, when Project Alice installs your skill, a config file will be automatically created with your default provided values. If you happen to update your config template, let\'s say, to drop a login and password field in favour of an api key field, Project Alice will detect it and update the configuration file accordingly.\n\nPro tip\n\nIf you are using an IDE able to handle json schema, it is highly recommended to use our Config file Schema\n\n# The template file\nThe name of the file must be config.json.template. Let\'s take a look at our HelloWorld skill that requires some configuration from the user:\n\n{\n\t"login": {\n\t\t"defaultValue": "",\n\t\t"dataType": "string",\n\t\t"isSensitive": false,\n\t\t"description": "Login for the HelloWorld database",\n\t\t"beforeUpdate": "tryConnection",\n\t\t"onUpdate": "reconnect"\n\t},\n\t"password": {\n\t\t"defaultValue": "",\n\t\t"dataType": "string",\n\t\t"isSensitive": true,\n\t\t"description": "Password for the HelloWorld database",\n\t\t"beforeUpdate": "tryConnection",\n\t\t"onUpdate": "reconnect"\n\t},\n\t"autoConnect": {\n\t\t"defaultValue": true,\n\t\t"dataType": "boolean",\n\t\t"isSensitive": false,\n\t\t"description": "Check this is you want HelloWorld to automatically connect to the database"\n\t},\n\t"retries": {\n\t\t"defaultValue": 3,\n\t\t"dataType": "integer",\n\t\t"isSensitive": false,\n\t\t"description": "How many times should the skill retry to connect in case of failure before giving up"\n\t},\n\t"databaseToUse": {\n\t\t"defaultValue": "HelloWorld",\n\t\t"dataType": "list",\n\t\t"isSensitive": false,\n\t\t"values": ["HelloWord", "ByeByeWorld", "HelloKitty"],\n\t\t"description": "Choose which database to connect to"\n\t},\n\t"language": {\n\t\t"defaultValue": "en",\n\t\t"dataType": "list",\n\t\t"isSensitive": false,\n\t\t"values": {"English": "en", "Français": "fr", "Deutsch":  "de"},\n\t\t"description": "Choose what language to use"\n\t},\n\t"maxTries": {\n\t\t"defaultValue": 3,\n\t\t"dataType": "range",\n\t\t"min": 1,\n\t\t"max": 5,\n\t\t"step": 1,\n\t\t"isSensitive": false,\n\t\t"description": "How many times should a user be allowed to fail authentication"\n\t},\n\t"notes": {\n\t\t"defaultValue": "",\n\t\t"dataType": "longstring",\n\t\t"isSensitive": false,\n\t\t"description": "Anything you would like to add?"\n\t}\n}\n\n\nWith the above example you have the full overview of what is supported. As you might have understood, we define each config by a name, this is the name you will use then in code to get the set value. We can then define a default value to use, a datatype and in case of lists, a list of value.\n\nIn our example:\n\n * login is a string, the text will be visible to the user.\n * password is a string, the text won\'t be visible thanks to the "isSensitive" option.\n * autoConnect is a boolean, true or false, or on or off. This will display a checkbox.\n * retries is an integer. An integer is a full number, such as 1, 5, 9563, with no trailing decimals.\n * databaseToUse is a list of type list. It means it will display a dropdown field containing the defined values.\n * language is a list of type dictionary. The difference with the above list, is that it will display the key (in this case "English" / "Français" / "Deutsch") in a dropdown field, but the value selected will be "en" or "fr" or "de". Useful when you have values to set that are not natural, the language example shows it well enough, it is nicer to display the full language name for the user to choose than a list with language codes.\n * maxTries is a slider. It needs to have a default value, a minimum allowed value, a maximum allowed value and a step which defines the increment by which the value is modified by each slider step. This setting cannot be made sensitive.\n * notes is a textarea, a text input that handles multiple lines.\n\nSo we have, as setting types:\n\n * string\n * longstring\n * boolean\n * integer\n * list\n * range\n\nThere are three more options you can add to any configuration!\n\n * "isSensitive": true|false: If true, the setting\'s value won\'t be shown, but replaced with * as passwords do per exemple. Cannot be applied to range configuration.\n   \n   \n * "display": "hidden": Hides the configuration field for the user. What\'s the use then? Well, imagine a skill that requires an API key but to retrieve this api key, one needs his login and password. I\'d make "login" and "password" visible configurations, so the user can fill them, and the api key be hidden. My skill would use the login and password fields to automatically retrieve the api key and set it for next uses. The user doesn\'t need to change or see that api configuration.\n   \n   \n * "beforeUpdate": "checkValue": Replace "checkValue" with any method name in your skill and that method will be triggered before the value update passes. The method must return a boolean.\n   \n   \n * "onUpdate": "reconnect": Replace "reconnect" with any method name in your skill and that method will be triggered every time the user updates that configuration field.\n   \n   \n\n# The generated config file\nWhen Alice loads her configuration she also loads all her active skills configurations. If there\'s a config template file available but no config file (config.json), she\'ll auto generate that said file! That file is git ignored so it cannot be pushed on your repository, keeping your personal data safe. This is how the template example would look like:\n\n{\n  "login": "",\n  "password": "",\n  "autoConnect": true,\n  "retries": 3,\n  "databaseToUse": "HelloWorld",\n  "language": "en"\n}\n\n\n# Using the settings in my skill\nNow that you have created your template, it\'s time to use those settings in your skill! Happy you, it\'s very easy!\n\nconfigValue = self.getConfig(\'login\')\n\n\nThat all! This will grab the login setting value!\n\nAnother way to access the settings, for another skill per example:\n\nconfigValue = self.ConfigManager.getSkillConfigByName(\'skillName\', \'configName\')\n\n\nThis will grab the setting configName from the skill skillName\n\nAnd if you don\'t have access to self, in a class method per example:\n\nconfigValue = SuperManager.getInstance().configManager.getSkillConfigByName(\'skillName\', \'configName\')\n\n\nI let you guess what it does.... Same as above!\n\n# Accessing system settings from my skill\nBeside your skill settings, you can also access Alice\'s settings from within your skill!\n\nAgain, we have the same three methods as above:\n\nconfigValue = self.getAliceConfig(\'configName\')\n\n\nor\n\nconfigValue = self.ConfigManager.getAliceConfigByName(\'configName\')\n\n\nor\n\nconfigValue = SuperManager.getInstance().configManager.getAliceConfigByName(\'configName\')\n\n\n# Update a config value\nIf for some reason you need to programmatically update a setting value, say the api key is not valid anymore, you can it easily!\n\nself.updateConfig(\'configName\', \'configNewValue\')\n\n\nor\n\nself.ConfigManager.updateSkillConfigurationFile(\'skillName\', \'configName\', \'configNewValue\')\n\n\nor\n\nSuperManager.getInstance().configManager.updateSkillConfigurationFile(\'skillName\', \'configName\', \'configNewValue\')\n\n\nAaaand of course, same goes for Alice\'s settings!\n\nself.updateAliceConfig(\'configName\', \'configNewValue\')\n\n\nor\n\nself.ConfigManager.updateAliceConfiguration(\'configName\', \'configNewValue\')\n\n\nor\n\nSuperManager.getInstance().configManager.updateAliceConfiguration(\'configName\', \'configNewValue\')\n\n\n# What we learned\nWe learned to create a skill configuration template file and which different data types this file can contain. We also learned how to access those settings from within your skill as well as how to access Alice\'s settings! Oh, and also how to update those settings programmatically! No more excuses for hardcoded variables in your skills!',contentLowercase:'# intro\nat some point, your skill will need some user dependant configuration, per example an api key, a threshold, login or a password. this is where skill configuration files come in the game!\n\nas a dev you have to provide a skill configuration template file. based on this file, when project alice installs your skill, a config file will be automatically created with your default provided values. if you happen to update your config template, let\'s say, to drop a login and password field in favour of an api key field, project alice will detect it and update the configuration file accordingly.\n\npro tip\n\nif you are using an ide able to handle json schema, it is highly recommended to use our config file schema\n\n# the template file\nthe name of the file must be config.json.template. let\'s take a look at our helloworld skill that requires some configuration from the user:\n\n{\n\t"login": {\n\t\t"defaultvalue": "",\n\t\t"datatype": "string",\n\t\t"issensitive": false,\n\t\t"description": "login for the helloworld database",\n\t\t"beforeupdate": "tryconnection",\n\t\t"onupdate": "reconnect"\n\t},\n\t"password": {\n\t\t"defaultvalue": "",\n\t\t"datatype": "string",\n\t\t"issensitive": true,\n\t\t"description": "password for the helloworld database",\n\t\t"beforeupdate": "tryconnection",\n\t\t"onupdate": "reconnect"\n\t},\n\t"autoconnect": {\n\t\t"defaultvalue": true,\n\t\t"datatype": "boolean",\n\t\t"issensitive": false,\n\t\t"description": "check this is you want helloworld to automatically connect to the database"\n\t},\n\t"retries": {\n\t\t"defaultvalue": 3,\n\t\t"datatype": "integer",\n\t\t"issensitive": false,\n\t\t"description": "how many times should the skill retry to connect in case of failure before giving up"\n\t},\n\t"databasetouse": {\n\t\t"defaultvalue": "helloworld",\n\t\t"datatype": "list",\n\t\t"issensitive": false,\n\t\t"values": ["helloword", "byebyeworld", "hellokitty"],\n\t\t"description": "choose which database to connect to"\n\t},\n\t"language": {\n\t\t"defaultvalue": "en",\n\t\t"datatype": "list",\n\t\t"issensitive": false,\n\t\t"values": {"english": "en", "français": "fr", "deutsch":  "de"},\n\t\t"description": "choose what language to use"\n\t},\n\t"maxtries": {\n\t\t"defaultvalue": 3,\n\t\t"datatype": "range",\n\t\t"min": 1,\n\t\t"max": 5,\n\t\t"step": 1,\n\t\t"issensitive": false,\n\t\t"description": "how many times should a user be allowed to fail authentication"\n\t},\n\t"notes": {\n\t\t"defaultvalue": "",\n\t\t"datatype": "longstring",\n\t\t"issensitive": false,\n\t\t"description": "anything you would like to add?"\n\t}\n}\n\n\nwith the above example you have the full overview of what is supported. as you might have understood, we define each config by a name, this is the name you will use then in code to get the set value. we can then define a default value to use, a datatype and in case of lists, a list of value.\n\nin our example:\n\n * login is a string, the text will be visible to the user.\n * password is a string, the text won\'t be visible thanks to the "issensitive" option.\n * autoconnect is a boolean, true or false, or on or off. this will display a checkbox.\n * retries is an integer. an integer is a full number, such as 1, 5, 9563, with no trailing decimals.\n * databasetouse is a list of type list. it means it will display a dropdown field containing the defined values.\n * language is a list of type dictionary. the difference with the above list, is that it will display the key (in this case "english" / "français" / "deutsch") in a dropdown field, but the value selected will be "en" or "fr" or "de". useful when you have values to set that are not natural, the language example shows it well enough, it is nicer to display the full language name for the user to choose than a list with language codes.\n * maxtries is a slider. it needs to have a default value, a minimum allowed value, a maximum allowed value and a step which defines the increment by which the value is modified by each slider step. this setting cannot be made sensitive.\n * notes is a textarea, a text input that handles multiple lines.\n\nso we have, as setting types:\n\n * string\n * longstring\n * boolean\n * integer\n * list\n * range\n\nthere are three more options you can add to any configuration!\n\n * "issensitive": true|false: if true, the setting\'s value won\'t be shown, but replaced with * as passwords do per exemple. cannot be applied to range configuration.\n   \n   \n * "display": "hidden": hides the configuration field for the user. what\'s the use then? well, imagine a skill that requires an api key but to retrieve this api key, one needs his login and password. i\'d make "login" and "password" visible configurations, so the user can fill them, and the api key be hidden. my skill would use the login and password fields to automatically retrieve the api key and set it for next uses. the user doesn\'t need to change or see that api configuration.\n   \n   \n * "beforeupdate": "checkvalue": replace "checkvalue" with any method name in your skill and that method will be triggered before the value update passes. the method must return a boolean.\n   \n   \n * "onupdate": "reconnect": replace "reconnect" with any method name in your skill and that method will be triggered every time the user updates that configuration field.\n   \n   \n\n# the generated config file\nwhen alice loads her configuration she also loads all her active skills configurations. if there\'s a config template file available but no config file (config.json), she\'ll auto generate that said file! that file is git ignored so it cannot be pushed on your repository, keeping your personal data safe. this is how the template example would look like:\n\n{\n  "login": "",\n  "password": "",\n  "autoconnect": true,\n  "retries": 3,\n  "databasetouse": "helloworld",\n  "language": "en"\n}\n\n\n# using the settings in my skill\nnow that you have created your template, it\'s time to use those settings in your skill! happy you, it\'s very easy!\n\nconfigvalue = self.getconfig(\'login\')\n\n\nthat all! this will grab the login setting value!\n\nanother way to access the settings, for another skill per example:\n\nconfigvalue = self.configmanager.getskillconfigbyname(\'skillname\', \'configname\')\n\n\nthis will grab the setting configname from the skill skillname\n\nand if you don\'t have access to self, in a class method per example:\n\nconfigvalue = supermanager.getinstance().configmanager.getskillconfigbyname(\'skillname\', \'configname\')\n\n\ni let you guess what it does.... same as above!\n\n# accessing system settings from my skill\nbeside your skill settings, you can also access alice\'s settings from within your skill!\n\nagain, we have the same three methods as above:\n\nconfigvalue = self.getaliceconfig(\'configname\')\n\n\nor\n\nconfigvalue = self.configmanager.getaliceconfigbyname(\'configname\')\n\n\nor\n\nconfigvalue = supermanager.getinstance().configmanager.getaliceconfigbyname(\'configname\')\n\n\n# update a config value\nif for some reason you need to programmatically update a setting value, say the api key is not valid anymore, you can it easily!\n\nself.updateconfig(\'configname\', \'confignewvalue\')\n\n\nor\n\nself.configmanager.updateskillconfigurationfile(\'skillname\', \'configname\', \'confignewvalue\')\n\n\nor\n\nsupermanager.getinstance().configmanager.updateskillconfigurationfile(\'skillname\', \'configname\', \'confignewvalue\')\n\n\naaaand of course, same goes for alice\'s settings!\n\nself.updatealiceconfig(\'configname\', \'confignewvalue\')\n\n\nor\n\nself.configmanager.updatealiceconfiguration(\'configname\', \'confignewvalue\')\n\n\nor\n\nsupermanager.getinstance().configmanager.updatealiceconfiguration(\'configname\', \'confignewvalue\')\n\n\n# what we learned\nwe learned to create a skill configuration template file and which different data types this file can contain. we also learned how to access those settings from within your skill as well as how to access alice\'s settings! oh, and also how to update those settings programmatically! no more excuses for hardcoded variables in your skills!',charsets:{cjk:!0}},{title:"Skill download suggestion",frontmatter:{title:"Skill download suggestion",sidebarDepth:3,tags:["suggestion","auto download","download"]},regularPath:"/skill-development/skill-download-suggestion.html",relativePath:"skill-development/skill-download-suggestion.md",key:"v-5c179825",path:"/skill-development/skill-download-suggestion.html",lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:null,content:'# What\'s this?\nEver got frustrated because something you ask your assistant isn\'t understood? What if I told you that Alice can try to find a on our skillstore that could fulfill your request?\n\n# lang.sample\nThere\'s no black magic behind this, simply a little work for the dev to make it work! When a new version of your skill is published, our store is updated automagically. During this process, it also looks for files, in the dialogTemplate directory, with the .sample extension. The file is name after whatever language is contains, example en.sample or de.sample.\n\nThe structure of the file is really simple! It\'s a json file that contains a list... Let\'s check an example, for the DateDayTimeYear \n\n[\n\t"what time is it",\n\t"what\'s the date",\n\t"what is the year",\n\t"what is the day",\n\t"tell me the time",\n\t"tell me the date",\n\t"time",\n\t"date"\n]\n\n\nThis file is named en.sample and is placed in dialogTemplate. Its content defines, or try to guess, the most common ways a lambda user would ask or say to trigger your skill. There aren\'t many rules about this file but keep these in mind:\n\n * Politeness forms are removed, so don\'t add please or could you or stuff like that.\n * The file is limited to 10 samples.\n * Do not use punctuations.\n * Try to think out of the box and find casual samples, like, everyday usage forms.\n * Do not cover disabledByDefault intents, or answer intents such as yes/no.\n * Think about it as What do I definitely want my skill to react to?\n\n# speakableName\nThat\'s the last required bit. In the install file, make sure you have a property called speakableName. As you know by now, names are PascalCase, so let\'s say, not really speakable for a engine. This property defines the name Alice will speak when she proposes users to download your . In the case of our DateDayTimeYear the speakableName is set to date time functions, which is speakable for Alice, at least better than DateDayTimeYear\n\n# Conclusion\nVery easy, wasn\'t it? Making your skill compatible with auto suggestions is a good idea, it will make the user experience much better over time. Imagine a time when hundreds of skills are available, Alice will never again tell you she doesn\'t understand something, but will always have a skill to propose for your request!',contentLowercase:'# what\'s this?\never got frustrated because something you ask your assistant isn\'t understood? what if i told you that alice can try to find a on our skillstore that could fulfill your request?\n\n# lang.sample\nthere\'s no black magic behind this, simply a little work for the dev to make it work! when a new version of your skill is published, our store is updated automagically. during this process, it also looks for files, in the dialogtemplate directory, with the .sample extension. the file is name after whatever language is contains, example en.sample or de.sample.\n\nthe structure of the file is really simple! it\'s a json file that contains a list... let\'s check an example, for the datedaytimeyear \n\n[\n\t"what time is it",\n\t"what\'s the date",\n\t"what is the year",\n\t"what is the day",\n\t"tell me the time",\n\t"tell me the date",\n\t"time",\n\t"date"\n]\n\n\nthis file is named en.sample and is placed in dialogtemplate. its content defines, or try to guess, the most common ways a lambda user would ask or say to trigger your skill. there aren\'t many rules about this file but keep these in mind:\n\n * politeness forms are removed, so don\'t add please or could you or stuff like that.\n * the file is limited to 10 samples.\n * do not use punctuations.\n * try to think out of the box and find casual samples, like, everyday usage forms.\n * do not cover disabledbydefault intents, or answer intents such as yes/no.\n * think about it as what do i definitely want my skill to react to?\n\n# speakablename\nthat\'s the last required bit. in the install file, make sure you have a property called speakablename. as you know by now, names are pascalcase, so let\'s say, not really speakable for a engine. this property defines the name alice will speak when she proposes users to download your . in the case of our datedaytimeyear the speakablename is set to date time functions, which is speakable for alice, at least better than datedaytimeyear\n\n# conclusion\nvery easy, wasn\'t it? making your skill compatible with auto suggestions is a good idea, it will make the user experience much better over time. imagine a time when hundreds of skills are available, alice will never again tell you she doesn\'t understand something, but will always have a skill to propose for your request!',charsets:{}},{title:"Talk file",frontmatter:{title:"Talk file",sidebarDepth:3},regularPath:"/skill-development/talk-file.html",relativePath:"skill-development/talk-file.md",key:"v-e5811fb6",path:"/skill-development/talk-file.html",headers:[{level:2,title:"Structure",slug:"structure",charIndex:588},{level:3,title:"Example 1 - A list of strings",slug:"example-1-a-list-of-strings",charIndex:600},{level:3,title:"Example 2 - A dictionary of strings",slug:"example-2-a-dictionary-of-strings",charIndex:1261},{level:2,title:"Variables",slug:"variables",charIndex:2196},{level:3,title:"Unindexed variables",slug:"unindexed-variables",charIndex:2407},{level:3,title:"Indexed variables",slug:"indexed-variables",charIndex:3057}],lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:"Structure Example 1 - A list of strings Example 2 - A dictionary of strings Variables Unindexed variables Indexed variables",content:'# Intro\nInside a skill directory, there is a talks sub directory containing .json files. The files are named after the language code they contain. These files are used by Alice to respond to your requests and should by all mean contain at least 2 different ways of answering, optimal would be 5 ways, so she doesn\'t always answer the same.\n\nWe have different ways of defining those text strings. First of all, this is a json object. The keys are never to be translated!\n\nPro tip\n\nIf you are using an IDE able to handle json schema, it is highly recommended to use our Talk file Schema\n\n# Structure\n# Example 1 - A list of strings\nLet\'s take this example:\n\n{\n\t"busy": [\n\t\t"Sorry, but I\'m busy at the moment, please wait",\n\t\t"Wait a second, I\'m busy at the moment",\n\t\t"Please wait, I\'m kindda busy right now"\n\t]\n}\n\n\nIn this example, the key is busy and that key is used by skills to retrieve the text to be spoken and contains a list of 3 different strings, 3 different ways for Alice to choose from when answering. The choice is random, you cannot influence it, but it feels more natural if Alice doesn\'t always answer the same for the same question. This example is the very basic way of defining answers for a skill and is not the preferred way for skills.\n\n# Example 2 - A dictionary of strings\nLet\'s take a look at another example:\n\n{\n\t"confirmAddition": {\n\t\t"default": [\n\t\t\t"Ok, I have added this device",\n\t\t\t"I added this new device"\n\t\t]\n\t}\n}\n\n\nIn this example the key is confirmAddition but defines a dictionary this time. This dictionary is only defining the default way of answering and is not respectful of users that might have the option use short answers or night mode enabled. In this case, a random default string will be picked by Alice to answer. To respect the use short answers or night mode users, we can define the same as the following:\n\n{\n\t"confirmAddition": {\n\t\t"default": [\n\t\t\t"Ok, I have added this device",\n\t\t\t"I added this new device"\n\t\t],\n\t\t"short": [\n\t\t\t"Ok!",\n\t\t\t"Done!"\n\t\t]\n\t}\n}\n\n\nIn the case a user prefers a short answer or has turned on night mode, Alice will pick a random answer from the short list. Otherwise, she will randomly pick from the default list.\n\n# Variables\nThe time you will need variables in your answers will come very fast. Imagine answering for the weather, you cannot make 100 strings declaration for each possible temperatures! Two solutions exist.\n\n# Unindexed variables\nThis is ok to use in case your string only contains one variable but should be avoided in case of more, simply because some languages maybe have to inverse the position of the variable\n\n{\n\t"langSwitch": {\n\t\t"default": [\n\t\t\t"Ok, let\'s talk in {} then!",\n\t\t\t"Sure, I can talk in {}",\n\t\t\t"No problem, I\'m switching to {}"\n\t\t],\n\t\t"short": [\n\t\t\t"Ok",\n\t\t\t"Yep"\n\t\t]\n\t}\n}\n\n\nAs you can see, default strings all have a {} weirdness... Well, this is your variable! Alice will replace that by the content you tell her. In this example, you could ask her to speak in finnish and she\'d answer, randomly, with Ok, let\'s talk in finnish then!\n\n# Indexed variables\nThis is better as we define what goes where, as sometimes languages don\'t use the same order. Or sometimes a different way of saying inverts the order of the variables.\n\n{\n\t"noDevice": {\n\t\t"default": [\n\t\t\t"Sorry, no {0} in room {1}",\n\t\t\t"I can\'t, room {1} doesn\'t have any {0}"\n\t\t]\n\t}\n}\n\n\nBy reading this you notice that our curly braces now contain a number. They are the same variable as before but are indexed. If you take the first example, it could translate to Sorry, no satellite in room kitchen and the second would translate to I can\'t, room kitchen doesn\'t have any satellite',contentLowercase:'# intro\ninside a skill directory, there is a talks sub directory containing .json files. the files are named after the language code they contain. these files are used by alice to respond to your requests and should by all mean contain at least 2 different ways of answering, optimal would be 5 ways, so she doesn\'t always answer the same.\n\nwe have different ways of defining those text strings. first of all, this is a json object. the keys are never to be translated!\n\npro tip\n\nif you are using an ide able to handle json schema, it is highly recommended to use our talk file schema\n\n# structure\n# example 1 - a list of strings\nlet\'s take this example:\n\n{\n\t"busy": [\n\t\t"sorry, but i\'m busy at the moment, please wait",\n\t\t"wait a second, i\'m busy at the moment",\n\t\t"please wait, i\'m kindda busy right now"\n\t]\n}\n\n\nin this example, the key is busy and that key is used by skills to retrieve the text to be spoken and contains a list of 3 different strings, 3 different ways for alice to choose from when answering. the choice is random, you cannot influence it, but it feels more natural if alice doesn\'t always answer the same for the same question. this example is the very basic way of defining answers for a skill and is not the preferred way for skills.\n\n# example 2 - a dictionary of strings\nlet\'s take a look at another example:\n\n{\n\t"confirmaddition": {\n\t\t"default": [\n\t\t\t"ok, i have added this device",\n\t\t\t"i added this new device"\n\t\t]\n\t}\n}\n\n\nin this example the key is confirmaddition but defines a dictionary this time. this dictionary is only defining the default way of answering and is not respectful of users that might have the option use short answers or night mode enabled. in this case, a random default string will be picked by alice to answer. to respect the use short answers or night mode users, we can define the same as the following:\n\n{\n\t"confirmaddition": {\n\t\t"default": [\n\t\t\t"ok, i have added this device",\n\t\t\t"i added this new device"\n\t\t],\n\t\t"short": [\n\t\t\t"ok!",\n\t\t\t"done!"\n\t\t]\n\t}\n}\n\n\nin the case a user prefers a short answer or has turned on night mode, alice will pick a random answer from the short list. otherwise, she will randomly pick from the default list.\n\n# variables\nthe time you will need variables in your answers will come very fast. imagine answering for the weather, you cannot make 100 strings declaration for each possible temperatures! two solutions exist.\n\n# unindexed variables\nthis is ok to use in case your string only contains one variable but should be avoided in case of more, simply because some languages maybe have to inverse the position of the variable\n\n{\n\t"langswitch": {\n\t\t"default": [\n\t\t\t"ok, let\'s talk in {} then!",\n\t\t\t"sure, i can talk in {}",\n\t\t\t"no problem, i\'m switching to {}"\n\t\t],\n\t\t"short": [\n\t\t\t"ok",\n\t\t\t"yep"\n\t\t]\n\t}\n}\n\n\nas you can see, default strings all have a {} weirdness... well, this is your variable! alice will replace that by the content you tell her. in this example, you could ask her to speak in finnish and she\'d answer, randomly, with ok, let\'s talk in finnish then!\n\n# indexed variables\nthis is better as we define what goes where, as sometimes languages don\'t use the same order. or sometimes a different way of saying inverts the order of the variables.\n\n{\n\t"nodevice": {\n\t\t"default": [\n\t\t\t"sorry, no {0} in room {1}",\n\t\t\t"i can\'t, room {1} doesn\'t have any {0}"\n\t\t]\n\t}\n}\n\n\nby reading this you notice that our curly braces now contain a number. they are the same variable as before but are indexed. if you take the first example, it could translate to sorry, no satellite in room kitchen and the second would translate to i can\'t, room kitchen doesn\'t have any satellite',charsets:{}},{title:"Widgets",frontmatter:{title:"Widgets",sidebarDepth:2},regularPath:"/skill-development/widgets.html",relativePath:"skill-development/widgets.md",key:"v-55e645a5",path:"/skill-development/widgets.html",headers:[{level:2,title:"Widgets structure",slug:"widgets-structure",charIndex:463},{level:3,title:"css/common.css",slug:"css-common-css",charIndex:1073},{level:3,title:"css/HelloWorldWidget.css",slug:"css-helloworldwidget-css",charIndex:1243},{level:3,title:"img",slug:"img",charIndex:878},{level:3,title:"js/HelloWorldWidget.js",slug:"js-helloworldwidget-js",charIndex:1797},{level:3,title:"lang/HelloWorldWidget.json",slug:"lang-helloworldwidget-json",charIndex:2065},{level:3,title:"templates/HelloWorldWidget.html",slug:"templates-helloworldwidget-html",charIndex:2487},{level:3,title:"HelloWorldWidget.py",slug:"helloworldwidget-py",charIndex:1015},{level:2,title:"Widgets mqtt connection",slug:"widgets-mqtt-connection",charIndex:4164},{level:2,title:"Widgets call to Alice Core",slug:"widgets-call-to-alice-core",charIndex:5362},{level:2,title:"In built css rules",slug:"in-built-css-rules",charIndex:6662},{level:3,title:"Variables",slug:"variables",charIndex:6833},{level:3,title:"Classes",slug:"classes",charIndex:7281}],lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:"Widgets structure css/common.css css/HelloWorldWidget.css img js/HelloWorldWidget.js lang/HelloWorldWidget.json templates/HelloWorldWidget.html HelloWorldWidget.py Widgets mqtt connection Widgets call to Alice Core In built css rules Variables Classes",content:"# Intro\nWidgets are little tiles that a user can add to the interface home screen. They provide a quick overview or functions to your skills. Think a Philips Hue lamp adding a widget for every lamp the user has connected, allowing the user to click on the widget to toggle the light state. Or a widget for a shopping list displaying what's currently in your list. Or a widget displaying the temperature at your Netatmo devices. Or... Well, you got it I guess?\n\n# Widgets structure\nWidgets come embedded with your skill. They are not mandatory but can be a nice addition for users using the interface. You can add more than one widget per skill, and the user decides which ones to use. To add a widget you must create the following structure in your existing skill structure, our HelloWorld skills:\n\n.\n├─ widgets\n│  └─ css\n│     └─ common.css\n│     └─ HelloWorldWidget.css\n│  └─ img\n│  └─ js\n│     └─ HelloWorldWidget.js\n│  └─ lang\n│     └─ HelloWorldWidget.json\n│  └─ templates\n│     └─ HelloWorldWidget.html\n│  └─ HelloWorldWidget.py\n\n\nLet's break down this structure!\n\n# css/common.css\nThis contains any css that is common between the widgets your skill proposes. If there's no common css rule, please add this to the file:\n\n`/* empty */\n\n# css/HelloWorldWidget.css\nThis is your widget dedicated css file! The default content should be as follow:\n\n.HelloWorldWidget {\n\twidth: 100%;\n\theight: 100%;\n\tcolor: #d1d1d1;\n\tpadding: 5px;\n\tbox-sizing: border-box;\n\toverflow-y: hidden;\n}\n\n.HelloWorldWidget .icon {\n\twidth: 100%;\n\tfont-size: 1.5em;\n}\n\n\n * The first class takes up the whole widget available space and defines the background color\n * The second class defines the widget icon\n\n# img\nIf your widgets uses image files, such as backgrounds, you could place them here, for organisation's sake\n\n# js/HelloWorldWidget.js\nThe engine of your widget! If your widget is interactive, you can code whatever you want in there! Remember, we use Jquery and Jquery-UI so they are at your disposal for coding your stuff! A basic file should look like:\n\n(function () {})();\n\n\n# lang/HelloWorldWidget.json\nThis file can be used if your widget displays texts, such as html field labels, buttons or whatever that has text that should be translated. Remember what languages you made your skill compatible with! Your widget should support them too! The structure is the following:\n\n{\n\t\"en\": {\n\t\t\"title\": \"Hello all\"\n\t},\n\t\"de\": {\n\t\t\"title\": \"Hallo zusammen\"\n\t},\n\t\"fr\": {\n\t\t\"title\": \"Hello à tous\"\n\t}\n}\n\n\n# templates/HelloWorldWidget.html\nThis is what is rendered on the home page, it's your widget! A basic widget file looks like:\n\n<div class=\"HelloWorldWidget\" id=\"HelloWorldWidget\">\n\t<div class=\"widgetIcons\">\n\t\t<i class=\"fas fa-space-shuttle\" aria-hidden=\"true\"></i>\n\t</div>\n    \x3c!-- Your widget html code --\x3e\n</div>\n\n\nRemember the css classes we defined a little higher? See where they go now? Also, do you remember the language file? Using automatic translation isn't that hard! Instead of hardcoding your language string, simply replace it by {{ lang.yourStringIndex }}. This will automatically be replaced by, if your Alice instance runs in english, HelloWorldWidget.json['en']['yourStringIndex']\n\n# HelloWorldWidget.py\nThis is what makes your widget be loaded by Alice! A raw widget python file would be:\n\nimport sqlite3\n\nfrom core.base.model.Widget import Widget\nfrom core.base.model.Widget import WidgetSizes\n\n\nclass WorldMap(Widget):\n\n\tSIZE = WidgetSizes.w_extralarge_wide\n\tOPTIONS: dict = dict()\n\n\tdef __init__(self, data: sqlite3.Row):\n\t\tsuper().__init__(data)\n\n\n\nLet's take a little look at this!\n\n * SIZE: Defines the size your widget is gonna render, in pixel:\n   \n    * w_tiny: 50x50\n    * w_tiny_wide: 100x50\n    * w_tiny_tall: 50x100\n    * \n    * w_small: 100x100\n    * w_small_wide: 200x100\n    * w_small_tall: 100x200\n    * \n    * w: 200x200\n    * w_wide: 300x200\n    * w_tall: 200x300\n    * \n    * w_large: 300x300\n    * w_large_wide: 400x300\n    * w_large_tall: 300x400\n    * \n    * w_extralarge: 500x500\n    * w_extralarge_wide: 700x500\n    * w_extralarge_tall: 500x700\n   \n   \n * OPTIONS\n   \n    * To be implemented, but will allow widget options\n   \n   \n\n# Widgets mqtt connection\nWe provide a built-in way for your widgets to connect to Project Alice mqtt broker!\n\nIt is actually quite simple to use:\n\n * In your javascript file, add two function calls: * mqttRegisterSelf(myOnConnectFunction, 'onConnect')\n    * mqttRegisterSelf(myOnMessageFunction, 'onMessage')\n   \n   \n * This registers myOnConnectFunction and myOnMessageFunction to the mqtt corresponding events!\n * Create the myOnConnectFunction (name this function as you wish, as long as you declare it accordingly with mqttRegisterSelf):function onConnect() {\n       MQTT.subscribe('projectalice/logging/syslog');\n   }\n   \n   \n   \n * The MQTT object is automatically available in your scripts. It is a paho.MQTT object. In the above example we subscribe to a topic when we just connect\n * Create the myOnMessageFunction (name this function as you wish, as long as you declare it accordingly with mqttRegisterSelf):  function onMessage(msg) {\n       let payload = JSON.parse(msg.payloadString);\n       console.log(payload)\n     }\n   \n   \n   \n * The onMessage function parses the payload and prints it in the logs\n\nAnd that's it! You don't have to worry about broker address, port or whatever!\n\n# Widgets call to Alice Core\nBeside the API we also have the possibility for your widgets to call functions on the core directly! You want to know the best? It's very simple! For this we use a POST Ajax call directed to /home/widget/\n\n * In your widget javascript add an ajax call:$.ajax({\n       url: '/home/widget/',\n       data: JSON.stringify({\n           skill: 'MySkillName',\n           widget: 'ThisWidgetName',\n           func: 'functionToCall',\n           param: ''\n       }),\n       contentType: 'application/json',\n       dataType: 'json',\n       type: 'POST'\n   }).done(function(answer) {\n       let theReturnedData = answer['theReturnedData'];\n   })\n   \n   \n   \n * Replace MySkillName with the skill name the current widget is from and ThisWidgetName with the name of the widget\n * Replace func with the python function to call, in your widget .py file\n * Add parameters for that function call if necessary, as a dictionary for named arguments\n * Once the call is done, answer will contain any answer from your widget .py script\n * In your widget .py file, add the function you want to call:def functionToCall() -> dict:\n       return {'theReturnedData': 'It works'}\n   \n   \n   \n\nAnd that's it, your widget calls your function in Alice Core and it responds back with whatever you want!\n\n# In built css rules\nThe interface loads our css rules, and these are available at all time! Let me try to list the ones that are most important for you as a widget dev!\n\n# Variables\nWe have some variables set for you to use in your widgets:\n\n# --hover : Color of a link when hovered\n# --mainBG : Main color of the background\n# --windowBG : Color of windows above the main background\n# --secondary : Secondary color of windows above the main background\n# --accentuated : Accentuated color, for items that need to draw attention\n# --text : Texts color\n# --short : Text font\n# --long : Text font\n# --readable : Text font\n# Classes\nSome reusable classes\n\n# .widget : To be used for widgets, the wrapper around\n# .tileContainer : If you need to create a tile system, this is used for the container\n# .tile : If you create tiles, use this class for them\n# .red : Red color for texts\n# .disabled : Red color for texts\n# .warning : Red color for texts\n# .green : Green color for texts\n# .saved : Green color for texts\n# .yellow : Yellow color for texts\n# .active : Yellow color for texts\n# .saving : Yellow color for texts\n# .hidden : Display None\n# .button: If you use buttons, use this class",contentLowercase:"# intro\nwidgets are little tiles that a user can add to the interface home screen. they provide a quick overview or functions to your skills. think a philips hue lamp adding a widget for every lamp the user has connected, allowing the user to click on the widget to toggle the light state. or a widget for a shopping list displaying what's currently in your list. or a widget displaying the temperature at your netatmo devices. or... well, you got it i guess?\n\n# widgets structure\nwidgets come embedded with your skill. they are not mandatory but can be a nice addition for users using the interface. you can add more than one widget per skill, and the user decides which ones to use. to add a widget you must create the following structure in your existing skill structure, our helloworld skills:\n\n.\n├─ widgets\n│  └─ css\n│     └─ common.css\n│     └─ helloworldwidget.css\n│  └─ img\n│  └─ js\n│     └─ helloworldwidget.js\n│  └─ lang\n│     └─ helloworldwidget.json\n│  └─ templates\n│     └─ helloworldwidget.html\n│  └─ helloworldwidget.py\n\n\nlet's break down this structure!\n\n# css/common.css\nthis contains any css that is common between the widgets your skill proposes. if there's no common css rule, please add this to the file:\n\n`/* empty */\n\n# css/helloworldwidget.css\nthis is your widget dedicated css file! the default content should be as follow:\n\n.helloworldwidget {\n\twidth: 100%;\n\theight: 100%;\n\tcolor: #d1d1d1;\n\tpadding: 5px;\n\tbox-sizing: border-box;\n\toverflow-y: hidden;\n}\n\n.helloworldwidget .icon {\n\twidth: 100%;\n\tfont-size: 1.5em;\n}\n\n\n * the first class takes up the whole widget available space and defines the background color\n * the second class defines the widget icon\n\n# img\nif your widgets uses image files, such as backgrounds, you could place them here, for organisation's sake\n\n# js/helloworldwidget.js\nthe engine of your widget! if your widget is interactive, you can code whatever you want in there! remember, we use jquery and jquery-ui so they are at your disposal for coding your stuff! a basic file should look like:\n\n(function () {})();\n\n\n# lang/helloworldwidget.json\nthis file can be used if your widget displays texts, such as html field labels, buttons or whatever that has text that should be translated. remember what languages you made your skill compatible with! your widget should support them too! the structure is the following:\n\n{\n\t\"en\": {\n\t\t\"title\": \"hello all\"\n\t},\n\t\"de\": {\n\t\t\"title\": \"hallo zusammen\"\n\t},\n\t\"fr\": {\n\t\t\"title\": \"hello à tous\"\n\t}\n}\n\n\n# templates/helloworldwidget.html\nthis is what is rendered on the home page, it's your widget! a basic widget file looks like:\n\n<div class=\"helloworldwidget\" id=\"helloworldwidget\">\n\t<div class=\"widgeticons\">\n\t\t<i class=\"fas fa-space-shuttle\" aria-hidden=\"true\"></i>\n\t</div>\n    \x3c!-- your widget html code --\x3e\n</div>\n\n\nremember the css classes we defined a little higher? see where they go now? also, do you remember the language file? using automatic translation isn't that hard! instead of hardcoding your language string, simply replace it by {{ lang.yourstringindex }}. this will automatically be replaced by, if your alice instance runs in english, helloworldwidget.json['en']['yourstringindex']\n\n# helloworldwidget.py\nthis is what makes your widget be loaded by alice! a raw widget python file would be:\n\nimport sqlite3\n\nfrom core.base.model.widget import widget\nfrom core.base.model.widget import widgetsizes\n\n\nclass worldmap(widget):\n\n\tsize = widgetsizes.w_extralarge_wide\n\toptions: dict = dict()\n\n\tdef __init__(self, data: sqlite3.row):\n\t\tsuper().__init__(data)\n\n\n\nlet's take a little look at this!\n\n * size: defines the size your widget is gonna render, in pixel:\n   \n    * w_tiny: 50x50\n    * w_tiny_wide: 100x50\n    * w_tiny_tall: 50x100\n    * \n    * w_small: 100x100\n    * w_small_wide: 200x100\n    * w_small_tall: 100x200\n    * \n    * w: 200x200\n    * w_wide: 300x200\n    * w_tall: 200x300\n    * \n    * w_large: 300x300\n    * w_large_wide: 400x300\n    * w_large_tall: 300x400\n    * \n    * w_extralarge: 500x500\n    * w_extralarge_wide: 700x500\n    * w_extralarge_tall: 500x700\n   \n   \n * options\n   \n    * to be implemented, but will allow widget options\n   \n   \n\n# widgets mqtt connection\nwe provide a built-in way for your widgets to connect to project alice mqtt broker!\n\nit is actually quite simple to use:\n\n * in your javascript file, add two function calls: * mqttregisterself(myonconnectfunction, 'onconnect')\n    * mqttregisterself(myonmessagefunction, 'onmessage')\n   \n   \n * this registers myonconnectfunction and myonmessagefunction to the mqtt corresponding events!\n * create the myonconnectfunction (name this function as you wish, as long as you declare it accordingly with mqttregisterself):function onconnect() {\n       mqtt.subscribe('projectalice/logging/syslog');\n   }\n   \n   \n   \n * the mqtt object is automatically available in your scripts. it is a paho.mqtt object. in the above example we subscribe to a topic when we just connect\n * create the myonmessagefunction (name this function as you wish, as long as you declare it accordingly with mqttregisterself):  function onmessage(msg) {\n       let payload = json.parse(msg.payloadstring);\n       console.log(payload)\n     }\n   \n   \n   \n * the onmessage function parses the payload and prints it in the logs\n\nand that's it! you don't have to worry about broker address, port or whatever!\n\n# widgets call to alice core\nbeside the api we also have the possibility for your widgets to call functions on the core directly! you want to know the best? it's very simple! for this we use a post ajax call directed to /home/widget/\n\n * in your widget javascript add an ajax call:$.ajax({\n       url: '/home/widget/',\n       data: json.stringify({\n           skill: 'myskillname',\n           widget: 'thiswidgetname',\n           func: 'functiontocall',\n           param: ''\n       }),\n       contenttype: 'application/json',\n       datatype: 'json',\n       type: 'post'\n   }).done(function(answer) {\n       let thereturneddata = answer['thereturneddata'];\n   })\n   \n   \n   \n * replace myskillname with the skill name the current widget is from and thiswidgetname with the name of the widget\n * replace func with the python function to call, in your widget .py file\n * add parameters for that function call if necessary, as a dictionary for named arguments\n * once the call is done, answer will contain any answer from your widget .py script\n * in your widget .py file, add the function you want to call:def functiontocall() -> dict:\n       return {'thereturneddata': 'it works'}\n   \n   \n   \n\nand that's it, your widget calls your function in alice core and it responds back with whatever you want!\n\n# in built css rules\nthe interface loads our css rules, and these are available at all time! let me try to list the ones that are most important for you as a widget dev!\n\n# variables\nwe have some variables set for you to use in your widgets:\n\n# --hover : color of a link when hovered\n# --mainbg : main color of the background\n# --windowbg : color of windows above the main background\n# --secondary : secondary color of windows above the main background\n# --accentuated : accentuated color, for items that need to draw attention\n# --text : texts color\n# --short : text font\n# --long : text font\n# --readable : text font\n# classes\nsome reusable classes\n\n# .widget : to be used for widgets, the wrapper around\n# .tilecontainer : if you need to create a tile system, this is used for the container\n# .tile : if you create tiles, use this class for them\n# .red : red color for texts\n# .disabled : red color for texts\n# .warning : red color for texts\n# .green : green color for texts\n# .saved : green color for texts\n# .yellow : yellow color for texts\n# .active : yellow color for texts\n# .saving : yellow color for texts\n# .hidden : display none\n# .button: if you use buttons, use this class",charsets:{}},{title:"Your first skill",frontmatter:{Title:"Your first skill",sidebarDepth:3},regularPath:"/skill-development/your-first-skill.html",relativePath:"skill-development/your-first-skill.md",key:"v-2aedfd5d",path:"/skill-development/your-first-skill.html",headers:[{level:2,title:"Prerequisites",slug:"prerequisites",charIndex:348},{level:2,title:"Understand the flow of your skill",slug:"understand-the-flow-of-your-skill",charIndex:603},{level:2,title:"Structure of a skill",slug:"structure-of-a-skill",charIndex:981},{level:3,title:"Talks directory",slug:"talks-directory",charIndex:1268},{level:3,title:"DialogTemplate directory",slug:"dialogtemplate-directory",charIndex:2388},{level:3,title:"HelloWorldSkill.py",slug:"helloworldskill-py",charIndex:1192},{level:3,title:"HelloWorldSkill.install",slug:"helloworldskill-install",charIndex:1165},{level:3,title:"README.md",slug:"readme-md",charIndex:1214},{level:3,title:"instructions.md",slug:"instructions-md",charIndex:8746},{level:2,title:"What have we learned",slug:"what-have-we-learned",charIndex:9299}],lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:"Prerequisites Understand the flow of your skill Structure of a skill Talks directory DialogTemplate directory HelloWorldSkill.py HelloWorldSkill.install README.md instructions.md What have we learned",content:'# Your first skill\nReady to create your first skill? See how easy it is to get a new skill up and running, then we will step through the basic anatomy of a Alice skill.\n\nWARNING\n\nThis describes functions that are not fully implemented yet\n\n * the talk directory has a different structure right now, but will be changed to the one described here\n\n# Prerequisites\nIf you haven\'t already, check out our Introduction to Skill Development. This walk through assumes you:\n\n * Know some basic knowledge of Python programming,\n * have an account on Github.com, and\n * have a working version of ProjectAlice.\n\n# Understand the flow of your skill\nIt\'s a good idea to start by writing down how your skill will work, including\n\n * What words will the user speak to activate the skill?\n * What will Alice speak in response?\n * What data will you need to deliver the skill?\n * Will you need any additional packages or dependencies?\n\nOnce you\'ve given these some thought, you can get started.\n\n# Structure of a skill\nIf we now navigate to our new skill, we can see that it created the following structure\n\n.\n├─ dialogTemplate\n│  └─ en.json\n├─ talks\n│  └─ en\n│     └─ talk.json\n├─ HelloWorldSkill.install\n├─ HelloWorldSkill.py\n└─ README.md\n\n\nWe will look at each of these in turn.\n\n# Talks directory\nThe talks directories contains a subdirectory for each spoken language the skill supports. The subdirectories are named using the ISO639-1 Language Codes for the language. For example, German is \'de\', and English is \'en\'.\n\nThere will be a subdirectory for each language you selected when creating the skill using the skill Kit.\n\nEach of these subdirectories can include two files. The first one is called talk.json and the second one engine.py. The engine.py is intended for more complex use cases where a simple string is not enough for the answer and is not created by default. That\'s why we will only describe how to create the talk.json file here, while more information on the topic can be found in the chapter Talks.\n\nThe File created by the skill Kit does only contain some dummy answers that show the structure of the file:\n\n{\n\t"dummy": [\n        "example sentence",\n        "another example sentence"\n    ]\n}\n\n\nWhen instructed to use a particular dialog, Alice will choose one of these sentences at random. This is closer to natural speech. That is, many similar phrases mean the same thing.\n\n# DialogTemplate directory\nEach skill defines one or more Intents. Intents are defined in the dialogTemplate directory. The dialogTemplate directory is organized by language as well, however there is just one json file for each language like en.json for english.\n\nWe will learn about Intents in more detail shortly.\n\n# HelloWorldSkill.py\nThe HelloWorldSkill.py file is where most of the skill is defined using Python code. We will learn more about the contents of this file in the next section.\n\nLet\'s take a look:\n\n# Importing libraries\nfrom core.base.model.AliceSkill import AliceSkill\nfrom core.dialog.model.DialogSession import DialogSession\nfrom core.util.Decorators import IntentHandler\n\n\nThis section of code imports the required libraries. Some libraries will be required on every skill, and your skill may need to import additional libraries.\n\n# Class definition\nThe class definition extends the AliceSkill class:\n\nclass HelloWorldSkill(AliceSkill):\n\n\nThe class should be named logically, for example "TimeSkill", "WeatherSkill", "NewsSkill", "IPaddressSkill". If you would like guidance on what to call your skill, please join the skills Channel on our Discord chat.\n\nInside the class, methods are then defined.\n\n# __init__()\nThis method is the constructor. It is called when the skill is first constructed. It is often used to declare state variables or perform setup actions. You don\'t have to include the constructor.\n\nAn example __init__ method might be:\n\ndef __init__(self):\n    super().__init__()\n    self._offline = True\n\n\n# Intent handlers\nPreviously the __init__ function was used to register intents, however our new @IntentHandler decorator is a cleaner way to achieve this. In our current HelloWorldSkill this could be implemented in the following way.\n\n@IntentHandler(\'HelloWorldIntent\')\ndef helloWorldIntent(self, session: DialogSession):\n    self.endDialog(session.sessionId, self.randomTalk(text=\'helloWorld\'))\n\n\nThe function receives two parameters:\n\n * self - a reference to the HelloWorldSkill object itself\n * session - an DialogSession object, that includes information like the slots an intent was called with\n\nThe intent handler then calls the self.endDialog() method passing the session to end, and the answer to say. In this case the type of the answer is helloWorld\n\n# HelloWorldSkill.install\nThis file defines what is required to get the skill up and running. It includes parameters like the version number, a description, supported languages and conditions for your skill to be started.\n\nPro tip\n\nIf you are using an IDE able to handle json schema, it is highly recommended using our Install file Schema\n\nLet\'s take a look at a basic install file:\n\n{\n\t"name": "HelloWorldSkill",\n\t"version": "1.0.1",\n\t"icon": "fab fa-battle-net",\n\t"category": "entertainment"\n\t"author": "MyGithubUsername",\n\t"maintainers": [\n\t\t"Psycho",\n\t\t"Jierka",\n\t\t"maxbachmann"\n\t],\n\t"desc": "This is my first skill for Project Alice",\n\t"aliceMinVersion": "1.0.0-a4",\n\t"systemRequirements": [],\n\t"pipRequirements": [],\n\t"script": "",\n\t"conditions": {\n\t\t"lang": [\n\t\t\t"en",\n\t\t\t"fr",\n\t\t\t"de"\n\t\t]\n\t}\n}\n\n\n# name\nDefines the name of the skill. Everything should carry the same name and yes, it is case sensitive!\n\n# version\nDefines the current version of your skill, in a 3 positions versioning system, like X.X.X. The first position is used for major releases, the second is used for improved or added functions to current release, and the third one is commonly used for hotfixes.\n\n# icon\nThis is the icon that will be displayed for your skill on the skill store. It supports any free Font Awesome icons\n\n# category\nDefines a category your skill belongs to. This helps categorize your skill to better search results on the store. Available categories:\n\n * weather\n * information\n * entertainment\n * music\n * game\n * kid\n * automation\n * assistance\n * security\n * planning\n * shopping\n * organisation\n * household\n * health\n\n# author\nThis is you! Make sure to use the same github username!\n\n# maintainers\nWe believe in sharing, and people helping you should also be rewarded for their input. If you improve a skill that isn\'t yours, add yourself into the maintainers list!\n\n# desc\nA description of what your skill does\n\n# aliceMinVersion\nThe minimum ALICE version other users must be running for this skill to be usable. This is useful if your skill is using alpha or beta functions not yet available to everyone\n\n# systemRequirements\nWhatever you add here will be installed using apt install\n\n# pipRequirements\nWhatever you add here will be installed using pip install --no-cache\n\n# script\nBy specifying a shell script name here, the script will be run after installation. The script must be placed in your skill root directory. It is very usefull for a skill that needs to git clone a repo per exemple!\n\n# conditions\nThis is where you define conditions for your skill to run. Let\'s say your skill is only english, german users won\'t be able to use it. There\'s quite a few conditions you can use:\n\nKey                   Description                                                                                                                                                    \nlang                  Define the languages that are supported. User running languages not listed here won\'t be able to use your skill                                                \nonline                If set to true, your skill will only be usable for users not enforcing offline only for Alice                                                                  \nskill                 This lists other skills needed for your to run. The skill must be installed and activated! In case the skill is missing, it will be automatically downloaded   \nnotSkill              Add any skills here that are known to conflict with yours. If any of the listed skills are detected, your skill won\'t install                                  \nasrArbitraryCapture   If set to true, the user must use an ASR that is able to capture any text spoken to it and not only intent trained text                                        \nactiveManager         List managers here that need to be active for your skill to run. This only concerns managers that can be deactivated, such as InterfaceManager                 \n\n# README.md\nThe README file contains human readable information about your skill.\n\n# instructions.md\nYour skill requires some extra steps to run, like activating an API, setting up another system, modifying the hardware of that awesome remote?\n\n * Create a directory at your skill root\n * Name it instructions\n * Create a file in that instructions directory, name it en.md, or the language code it is written in, as per example fr.md.\n * Put all your instructions into that file.\n\nThe content of this file is accessible on the interface on the skills page, and will automatically pop up whenever the skill is installed and/or updated.\n\n# What have we learned\nYou have now successfully created a new skill and have an understanding of the basic components that make up an Alice skill. Next we will dive into each component in more detail.',contentLowercase:'# your first skill\nready to create your first skill? see how easy it is to get a new skill up and running, then we will step through the basic anatomy of a alice skill.\n\nwarning\n\nthis describes functions that are not fully implemented yet\n\n * the talk directory has a different structure right now, but will be changed to the one described here\n\n# prerequisites\nif you haven\'t already, check out our introduction to skill development. this walk through assumes you:\n\n * know some basic knowledge of python programming,\n * have an account on github.com, and\n * have a working version of projectalice.\n\n# understand the flow of your skill\nit\'s a good idea to start by writing down how your skill will work, including\n\n * what words will the user speak to activate the skill?\n * what will alice speak in response?\n * what data will you need to deliver the skill?\n * will you need any additional packages or dependencies?\n\nonce you\'ve given these some thought, you can get started.\n\n# structure of a skill\nif we now navigate to our new skill, we can see that it created the following structure\n\n.\n├─ dialogtemplate\n│  └─ en.json\n├─ talks\n│  └─ en\n│     └─ talk.json\n├─ helloworldskill.install\n├─ helloworldskill.py\n└─ readme.md\n\n\nwe will look at each of these in turn.\n\n# talks directory\nthe talks directories contains a subdirectory for each spoken language the skill supports. the subdirectories are named using the iso639-1 language codes for the language. for example, german is \'de\', and english is \'en\'.\n\nthere will be a subdirectory for each language you selected when creating the skill using the skill kit.\n\neach of these subdirectories can include two files. the first one is called talk.json and the second one engine.py. the engine.py is intended for more complex use cases where a simple string is not enough for the answer and is not created by default. that\'s why we will only describe how to create the talk.json file here, while more information on the topic can be found in the chapter talks.\n\nthe file created by the skill kit does only contain some dummy answers that show the structure of the file:\n\n{\n\t"dummy": [\n        "example sentence",\n        "another example sentence"\n    ]\n}\n\n\nwhen instructed to use a particular dialog, alice will choose one of these sentences at random. this is closer to natural speech. that is, many similar phrases mean the same thing.\n\n# dialogtemplate directory\neach skill defines one or more intents. intents are defined in the dialogtemplate directory. the dialogtemplate directory is organized by language as well, however there is just one json file for each language like en.json for english.\n\nwe will learn about intents in more detail shortly.\n\n# helloworldskill.py\nthe helloworldskill.py file is where most of the skill is defined using python code. we will learn more about the contents of this file in the next section.\n\nlet\'s take a look:\n\n# importing libraries\nfrom core.base.model.aliceskill import aliceskill\nfrom core.dialog.model.dialogsession import dialogsession\nfrom core.util.decorators import intenthandler\n\n\nthis section of code imports the required libraries. some libraries will be required on every skill, and your skill may need to import additional libraries.\n\n# class definition\nthe class definition extends the aliceskill class:\n\nclass helloworldskill(aliceskill):\n\n\nthe class should be named logically, for example "timeskill", "weatherskill", "newsskill", "ipaddressskill". if you would like guidance on what to call your skill, please join the skills channel on our discord chat.\n\ninside the class, methods are then defined.\n\n# __init__()\nthis method is the constructor. it is called when the skill is first constructed. it is often used to declare state variables or perform setup actions. you don\'t have to include the constructor.\n\nan example __init__ method might be:\n\ndef __init__(self):\n    super().__init__()\n    self._offline = true\n\n\n# intent handlers\npreviously the __init__ function was used to register intents, however our new @intenthandler decorator is a cleaner way to achieve this. in our current helloworldskill this could be implemented in the following way.\n\n@intenthandler(\'helloworldintent\')\ndef helloworldintent(self, session: dialogsession):\n    self.enddialog(session.sessionid, self.randomtalk(text=\'helloworld\'))\n\n\nthe function receives two parameters:\n\n * self - a reference to the helloworldskill object itself\n * session - an dialogsession object, that includes information like the slots an intent was called with\n\nthe intent handler then calls the self.enddialog() method passing the session to end, and the answer to say. in this case the type of the answer is helloworld\n\n# helloworldskill.install\nthis file defines what is required to get the skill up and running. it includes parameters like the version number, a description, supported languages and conditions for your skill to be started.\n\npro tip\n\nif you are using an ide able to handle json schema, it is highly recommended using our install file schema\n\nlet\'s take a look at a basic install file:\n\n{\n\t"name": "helloworldskill",\n\t"version": "1.0.1",\n\t"icon": "fab fa-battle-net",\n\t"category": "entertainment"\n\t"author": "mygithubusername",\n\t"maintainers": [\n\t\t"psycho",\n\t\t"jierka",\n\t\t"maxbachmann"\n\t],\n\t"desc": "this is my first skill for project alice",\n\t"aliceminversion": "1.0.0-a4",\n\t"systemrequirements": [],\n\t"piprequirements": [],\n\t"script": "",\n\t"conditions": {\n\t\t"lang": [\n\t\t\t"en",\n\t\t\t"fr",\n\t\t\t"de"\n\t\t]\n\t}\n}\n\n\n# name\ndefines the name of the skill. everything should carry the same name and yes, it is case sensitive!\n\n# version\ndefines the current version of your skill, in a 3 positions versioning system, like x.x.x. the first position is used for major releases, the second is used for improved or added functions to current release, and the third one is commonly used for hotfixes.\n\n# icon\nthis is the icon that will be displayed for your skill on the skill store. it supports any free font awesome icons\n\n# category\ndefines a category your skill belongs to. this helps categorize your skill to better search results on the store. available categories:\n\n * weather\n * information\n * entertainment\n * music\n * game\n * kid\n * automation\n * assistance\n * security\n * planning\n * shopping\n * organisation\n * household\n * health\n\n# author\nthis is you! make sure to use the same github username!\n\n# maintainers\nwe believe in sharing, and people helping you should also be rewarded for their input. if you improve a skill that isn\'t yours, add yourself into the maintainers list!\n\n# desc\na description of what your skill does\n\n# aliceminversion\nthe minimum alice version other users must be running for this skill to be usable. this is useful if your skill is using alpha or beta functions not yet available to everyone\n\n# systemrequirements\nwhatever you add here will be installed using apt install\n\n# piprequirements\nwhatever you add here will be installed using pip install --no-cache\n\n# script\nby specifying a shell script name here, the script will be run after installation. the script must be placed in your skill root directory. it is very usefull for a skill that needs to git clone a repo per exemple!\n\n# conditions\nthis is where you define conditions for your skill to run. let\'s say your skill is only english, german users won\'t be able to use it. there\'s quite a few conditions you can use:\n\nkey                   description                                                                                                                                                    \nlang                  define the languages that are supported. user running languages not listed here won\'t be able to use your skill                                                \nonline                if set to true, your skill will only be usable for users not enforcing offline only for alice                                                                  \nskill                 this lists other skills needed for your to run. the skill must be installed and activated! in case the skill is missing, it will be automatically downloaded   \nnotskill              add any skills here that are known to conflict with yours. if any of the listed skills are detected, your skill won\'t install                                  \nasrarbitrarycapture   if set to true, the user must use an asr that is able to capture any text spoken to it and not only intent trained text                                        \nactivemanager         list managers here that need to be active for your skill to run. this only concerns managers that can be deactivated, such as interfacemanager                 \n\n# readme.md\nthe readme file contains human readable information about your skill.\n\n# instructions.md\nyour skill requires some extra steps to run, like activating an api, setting up another system, modifying the hardware of that awesome remote?\n\n * create a directory at your skill root\n * name it instructions\n * create a file in that instructions directory, name it en.md, or the language code it is written in, as per example fr.md.\n * put all your instructions into that file.\n\nthe content of this file is accessible on the interface on the skills page, and will automatically pop up whenever the skill is installed and/or updated.\n\n# what have we learned\nyou have now successfully created a new skill and have an understanding of the basic components that make up an alice skill. next we will dive into each component in more detail.',charsets:{}},{title:"Sponsors",frontmatter:{title:"Sponsors",sidebarDepth:3},regularPath:"/sponsors/",relativePath:"sponsors/README.md",key:"v-36a43626",path:"/sponsors/",headers:[{level:2,title:"Jetbrains",slug:"jetbrains",charIndex:829},{level:2,title:"Gitlab",slug:"gitlab",charIndex:1402}],lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:"Jetbrains Gitlab",content:"Project Alice says a huge thanks to the following persons and companies for supporting us! It's not an easy world for those developing free software for open source and the costs involved with creating can quickly become crushing if you aim for efficiency and quality.\n\nIf you too want to sponsor Project Alice, we currently have two ways on place, either by a monthly support, with Liberapay that is clearer than Patreons and gives 100% of the funds to the receiver or a one shot donation through Paypal.\n\nLiberapay: https://liberapay.com/Psycho/donate\n\n\nAt the moment I do not have any plans on how to thank patrons other than naming them here with some link of their will, but feel free to shoot ideas through if you have any.\n\nBlockchain.com: 1Dv6CtEHUmDgv6tkgbsbrVRrBLh1KxUKPA\n\nPaypal: https://paypal.me/Psychokiller1888\n\n# Jetbrains\n Are you looking for perfect tools for whatever language you code in? Look no further, Jetbrains offers the perfect suite for developers in python, php, html, java, rust, c# and many more! With dedicated apps for each language, powerful code completion and analysis there's no excuses for typos anymore! Refactoring brought to a whole other level, debugging sweetened, remote auto deployment, themes, plugins and so much more make it the perfect platform for all your needs!\n\nThank you for providing some full pack free licenses for open source development!\n\n\n\n# Gitlab\n Looking to host your code? For a complete and very powerful Continuous Integration system? Managing your issues? Maybe you are already using another repository, but you still want to benefit from the CI? Give Gitlab a try! And even more than a try! The hosted solution is perfect for starters but if your needs increase, Gitlab can be easily downloaded and installed. Best part of it? Fear no data leakage, it's open source!\n\nThank you gitlab for providing us with a Gold license!",contentLowercase:"project alice says a huge thanks to the following persons and companies for supporting us! it's not an easy world for those developing free software for open source and the costs involved with creating can quickly become crushing if you aim for efficiency and quality.\n\nif you too want to sponsor project alice, we currently have two ways on place, either by a monthly support, with liberapay that is clearer than patreons and gives 100% of the funds to the receiver or a one shot donation through paypal.\n\nliberapay: https://liberapay.com/psycho/donate\n\n\nat the moment i do not have any plans on how to thank patrons other than naming them here with some link of their will, but feel free to shoot ideas through if you have any.\n\nblockchain.com: 1dv6ctehumdgv6tkgbsbrvrrblh1kxukpa\n\npaypal: https://paypal.me/psychokiller1888\n\n# jetbrains\n are you looking for perfect tools for whatever language you code in? look no further, jetbrains offers the perfect suite for developers in python, php, html, java, rust, c# and many more! with dedicated apps for each language, powerful code completion and analysis there's no excuses for typos anymore! refactoring brought to a whole other level, debugging sweetened, remote auto deployment, themes, plugins and so much more make it the perfect platform for all your needs!\n\nthank you for providing some full pack free licenses for open source development!\n\n\n\n# gitlab\n looking to host your code? for a complete and very powerful continuous integration system? managing your issues? maybe you are already using another repository, but you still want to benefit from the ci? give gitlab a try! and even more than a try! the hosted solution is perfect for starters but if your needs increase, gitlab can be easily downloaded and installed. best part of it? fear no data leakage, it's open source!\n\nthank you gitlab for providing us with a gold license!",charsets:{}},{title:"Basic usage",frontmatter:{title:"Basic usage",sidebarDepth:3},regularPath:"/usage/",relativePath:"usage/README.md",key:"v-3b1acf32",path:"/usage/",headers:[{level:2,title:"Not understood",slug:"not-understood",charIndex:685},{level:3,title:"Example",slug:"example",charIndex:1617}],lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:"Not understood Example",content:"# Voice\nAlice is a voice assistant so technically we've tried to make the most of the functions voice supported. Some functions are still under work, others might get voice support at a later point, but usually you interact with Alice with your voice!\n\nOne thing people usually tend to do is being shy or not knowing what to say to a voice assistant, they don't have a physical person in front of them and speaking to a machine doesn't always come natural. With Alice, you don't need to be afraid, just talk to her and ask whatever you want. If she doesn't understand, she'll let you know! The best part of it is that for many of the cases you can add a to make her understand you!\n\n# Not understood\nAlice is able to capture what you say thanks to her component and try to decypher it by using her component. Once she has what you said, it still doesn't mean she knows what to do with it... First she'll need a to handle that request. If there's no skill, she won't know what to do and apologize about it. If there's a that should, in your opinion, handle what you ask her, but she still doesn't, that would mean her confidence score is too low. The confidence score threshold can be set in the admin part of the .\n\nTIP\n\nSometimes Alice doesn't understand something the way you say it. She knows you're asking for the time, but she's not confident about it and thus says she doesn't understand. Instead of saying the same twice, three times or more, or set the confidence score lower, try to slightly change, she might then understand! And you know what? She'll even learn from that after confirming if that's ok!\n\n# Example\nWhat's better than an example?\n\nHey Alice?That's me!Gimme the temp outsideSorry? I did not understand...At that point, instead of naturally say it again the same way, try to change the way you are asking:\n\nWhat's the temperature outside?It's currently 6°C outsideIs that what you meant before?YesOk, cool, I'll remember that!Hey Alice?That's me!Gimme the temp outsideIt's currently 6°C outside",contentLowercase:"# voice\nalice is a voice assistant so technically we've tried to make the most of the functions voice supported. some functions are still under work, others might get voice support at a later point, but usually you interact with alice with your voice!\n\none thing people usually tend to do is being shy or not knowing what to say to a voice assistant, they don't have a physical person in front of them and speaking to a machine doesn't always come natural. with alice, you don't need to be afraid, just talk to her and ask whatever you want. if she doesn't understand, she'll let you know! the best part of it is that for many of the cases you can add a to make her understand you!\n\n# not understood\nalice is able to capture what you say thanks to her component and try to decypher it by using her component. once she has what you said, it still doesn't mean she knows what to do with it... first she'll need a to handle that request. if there's no skill, she won't know what to do and apologize about it. if there's a that should, in your opinion, handle what you ask her, but she still doesn't, that would mean her confidence score is too low. the confidence score threshold can be set in the admin part of the .\n\ntip\n\nsometimes alice doesn't understand something the way you say it. she knows you're asking for the time, but she's not confident about it and thus says she doesn't understand. instead of saying the same twice, three times or more, or set the confidence score lower, try to slightly change, she might then understand! and you know what? she'll even learn from that after confirming if that's ok!\n\n# example\nwhat's better than an example?\n\nhey alice?that's me!gimme the temp outsidesorry? i did not understand...at that point, instead of naturally say it again the same way, try to change the way you are asking:\n\nwhat's the temperature outside?it's currently 6°c outsideis that what you meant before?yesok, cool, i'll remember that!hey alice?that's me!gimme the temp outsideit's currently 6°c outside",charsets:{}},{title:"Web Interface",frontmatter:{title:"Web Interface",sidebarDepth:3,tags:["web","interface"]},regularPath:"/usage/web-interface.html",relativePath:"usage/web-interface.md",key:"v-8f2e0e76",path:"/usage/web-interface.html",lastUpdated:"10/28/2020, 10:37:14 PM",headersStr:null,content:"# How to find it\nThe Alice web is exposed over port 5000 (configurable in your settings) and can be accessed on the IP or local host name for your Alice host, e.g:\n\nhttp://192.168.1.101:5000/\n\n# TODO - cover the interface usage, what page does what etc etc",contentLowercase:"# how to find it\nthe alice web is exposed over port 5000 (configurable in your settings) and can be accessed on the ip or local host name for your alice host, e.g:\n\nhttp://192.168.1.101:5000/\n\n# todo - cover the interface usage, what page does what etc etc",charsets:{}}],themeConfig:{yuu:{defaultDarkTheme:!0,defaultColorTheme:"blue"},logo:"/images/umbrella.png",repo:"project-alice-assistant/ProjectAlice",docsRepo:"project-alice-assistant/docs",docsDir:"docs",editLinks:!0,smoothScroll:!0,sidebarDepth:2,locales:{"/":{selectText:" Languages",label:"English",ariaLabel:"Languages",editLinkText:"Help us improve this page!",repoLabel:"Contribute!",lastUpdated:"Last Updated",nav:[{text:"About Alice",link:"/about-alice/"},{text:"Setup",items:[{text:"Main unit setup",link:"/setup/"},{text:"Satellite setup",link:"/satsetup/"}]},{text:"Usage",items:[{text:"Using Alice",link:"/usage/"},{text:"Using satellites",link:""},{text:"Skill store",link:"https://store.projectalice.io"}]},{text:"Learn more",items:[{text:"Contributing",link:"/contribute/"},{text:"Get started with Pycharm",link:"/community-made/getting-started-pycharm"},{text:"Skill development",link:"/skill-development/"},{text:"Core development",link:"/core-development/"},{text:"API",link:"https://documenter.getpostman.com/view/7504420/SW7W59r7"}]},{text:"Sponsors",link:"/sponsors/"},{text:"Links",link:"/links/"}],sidebar:{"/about-alice/":[{title:"About Alice",collapsable:!1,children:["",["GLOSSARY","Glossary"]]}],"/setup/":[{title:"Setup",collapsable:!1,children:["","requirements","manual-install","image-install","preinstalled","docker","troubleshooting","wakeword"]}],"/satsetup/":[{title:"Satellite setup",collapsable:!1,children:["","preinstalled","manual-install","updateToA2","troubleshooting"]}],"/usage/":[{title:"Using Alice",collapsable:!1,children:["","web-interface"]}],"/contribute/":[{title:"Contribute",collapsable:!1,children:["","code-guidelines"]}],"/skill-development/":[{title:"Skill Development",collapsable:!1,children:["","your-first-skill","missing-slot-info","talk-file","dialog-template","builtin-slots","builtin-intents","logging","events","widgets","skill-configuration-file","skill-download-suggestion","publishing-to-skill-store","new-language-support","database-access"]}],"/core-development/":[{title:"Core Development",collapsable:!1,children:[""]}],"/community-made/":[{title:"By the community for the community",collapsable:!1,children:["","getting-started-pycharm"]}]}},"/de/":{selectText:" Sprachen",label:"Deutsch",ariaLabel:"Sprachen",editLinkText:"Hilf uns diese Seite zu verbessern!",repoLabel:"Mitwirken!",lastUpdated:"Zuletzte aktualisiert",nav:[{text:"Über Alice",link:"/de/about-alice/"},{text:"Setup",items:[{text:"Installation Haupteinheit",link:"/de/setup/"},{text:"Installation Satellit",link:"/de/satsetup/"}]},{text:"Verwendung",items:[{text:"Alice verwenden",link:"/de/usage"},{text:"Satelliten verwenden",link:""},{text:"Skill Store",link:"https://store.projectalice.io"}]},{text:"Learn more",items:[{text:"Mitwirken",link:"/de/contribute/"},{text:"Lege los mit Pycharm",link:"/de/community-made/getting-started-pycharm"},{text:"Skill Entwicklung",link:"/de/skill-development/"},{text:"Core Entwicklung",link:"/de/core-development/"},{text:"API",link:"https://documenter.getpostman.com/view/7504420/SW7W59r7"}]},{text:"Sponsoren",link:"/de/sponsors/"},{text:"Links",link:"/de/links/"}],sidebar:{"/de/about-alice/":[{title:"Über Alice",collapsable:!1,children:["",["GLOSSARY","Glossar"]]}],"/de/setup/":[{title:"Installation",collapsable:!1,children:["","requirements","manual-install","image-install","preinstalled","docker","troubleshooting","wakeword"]}],"/de/satsetup/":[{title:"Installation Satellit",collapsable:!1,children:["","preinstalled","manual-install","updateToA2","troubleshooting"]}],"/de/usage/":[{title:"Alice verwenden",collapsable:!1,children:["","web-interface"]}],"/de/contribute/":[{title:"Mitwirken",collapsable:!1,children:["","code-guidelines"]}],"/de/skill-development/":[{title:"Skill Entwicklung",collapsable:!1,children:["","your-first-skill","missing-slot-info","talk-file","dialog-template","builtin-slots","builtin-intents","logging","events","widgets","skill-configuration-file","skill-download-suggestion","publishing-to-skill-store","new-language-support","database-access"]}],"/de/core-development/":[{title:"Core Entwicklung",collapsable:!1,children:[""]}],"/de/community-made/":[{title:"Von der Community für die Community",collapsable:!1,children:["","getting-started-pycharm"]}]}}}},locales:{"/":{lang:"en-US",title:"ProjectAlice",description:"A smart voice assistant that guarantees your privacy",path:"/"},"/de/":{lang:"de-DE",title:"ProjectAlice",description:"Ein intelligenter Sprachassistent der dein Privatsphäre garantiert",path:"/de/"}}};n(301);Lo.component("Badge",(function(){return Promise.all([n.e(0),n.e(4)]).then(n.bind(null,478))})),Lo.component("CodeBlock",(function(){return Promise.all([n.e(0),n.e(5)]).then(n.bind(null,391))})),Lo.component("CodeGroup",(function(){return Promise.all([n.e(0),n.e(6)]).then(n.bind(null,392))}));n(302),n(303);n(178),n(98);function fs(e,t){var n=!0;void 0===e?(e="Term not found in the glossary",n=!1):e=ps(e);var i=n?"":" term-not-found";return t=ms(t),'<a title="'.concat(e,'" class="term').concat(i,'">').concat(t,"</a>")}function ps(e){return e.replace(/:[\w+]*:([\w+]*):/g,(function(e,t){return t})).replace(/:([\w+]*):/g,(function(e,t){return t}))}function ms(e){return e.split("_").join(" ")}function gs(e){return e.split("_").join(" ")}var ys={name:"Term",props:{term:{type:String,required:!0},show:{type:String,required:!1,default:""}},data:function(){return{termNotFound:!1}},computed:{terms:function(){return this.$site.pages.find((function(e){return"/GLOSSARY.html"===e.path})).frontmatter.terms},definition:function(){var e=gs(this.term),t=this.terms[e];return t?ps(t):(this.termNotFound=!0,"Term not found in the glossary")},displayText:function(){return gs(this.show?this.show:this.term)}}},vs=Object(cs.a)(ys,(function(){var e=this.$createElement;return(this._self._c||e)("a",{class:{"term-not-found":this.termNotFound,term:!0},attrs:{title:this.definition}},[this._v(this._s(this.displayText))])}),[],!1,null,null,null).exports,ws={props:{terms:{type:Object,required:!0}},methods:{definition:function(e){return t=e,n=this.terms,n[ms(t)].replace(/:([\w+]*):([\w+]*):/g,(function(e,t,i){return fs(n[ms(t)],i)})).replace(/:([\w+]*):/g,(function(e,t,i){return fs(n[ms(t)],t)}));var t,n}}},bs=(n(304),Object(cs.a)(ws,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("dl",e._l(Object.keys(e.terms),(function(t){return n("div",[n("dt",{staticClass:"defined-term"},[e._v(e._s(t))]),e._v(" "),n("dd",{staticClass:"term-definition",domProps:{innerHTML:e._s(e.definition(t,e.terms))}})])})),0)}),[],!1,null,null,null).exports),ks=[{},function(e){e.Vue.mixin({computed:{$dataBlock:function(){return this.$options.__data__block__}}})},{},{},function(e){var t=e.Vue;e.router.options.scrollBehavior=function(e,n,i){if(i)return window.scrollTo({top:i.y,behavior:"smooth"});if(e.hash){if(t.$vuepress.$get("disableScrollBehavior"))return!1;var o=document.querySelector(e.hash);return!!o&&window.scrollTo({top:(a=o,r=document.documentElement,s=r.getBoundingClientRect(),l=a.getBoundingClientRect(),{x:l.left-s.left,y:l.top-s.top}).y,behavior:"smooth"})}return window.scrollTo({top:0,behavior:"smooth"});var a,r,s,l}},function(e){var t=e.Vue;e.options,e.router,e.siteData;t.component("Term",vs),t.component("Glossary",bs)}],xs=[];n(177);function As(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}n(179);function Ss(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function js(e,t,n){return t&&Ss(e.prototype,t),n&&Ss(e,n),e}n(168);function _s(e,t){return(_s=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}n(169);function Is(e){return(Is=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}n(146),n(109);function Ps(e,t){return!t||"object"!==jr(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Ts(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,i=Is(e);if(t){var o=Is(this).constructor;n=Reflect.construct(i,arguments,o)}else n=i.apply(this,arguments);return Ps(this,n)}}var zs=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&_s(e,t)}(n,e);var t=Ts(n);function n(){return As(this,n),t.apply(this,arguments)}return n}(function(){function e(){As(this,e),this.store=new Lo({data:{state:{}}})}return js(e,[{key:"$get",value:function(e){return this.store.state[e]}},{key:"$set",value:function(e,t){Lo.set(this.store.state,e,t)}},{key:"$emit",value:function(){var e;(e=this.store).$emit.apply(e,arguments)}},{key:"$on",value:function(){var e;(e=this.store).$on.apply(e,arguments)}}]),e}());Object.assign(zs.prototype,{getPageAsyncComponent:Ur,getLayoutAsyncComponent:qr,getAsyncComponent:$r,getVueComponent:Fr});var Es={install:function(e){var t=new zs;e.$vuepress=t,e.prototype.$vuepress=t}};function Cs(e){e.beforeEach((function(t,n,i){if(Ls(e,t.path))i();else if(/(\/|\.html)$/.test(t.path))if(/\/$/.test(t.path)){var o=t.path.replace(/\/$/,"")+".html";Ls(e,o)?i(o):i()}else i();else{var a=t.path+"/",r=t.path+".html";Ls(e,r)?i(r):Ls(e,a)?i(a):i()}}))}function Ls(e,t){return e.options.routes.filter((function(e){return e.path.toLowerCase()===t.toLowerCase()})).length>0}var Ds={props:{pageKey:String,slotKey:{type:String,default:"default"}},render:function(e){var t=this.pageKey||this.$parent.$page.key;return Br("pageKey",t),Lo.component(t)||Lo.component(t,Ur(t)),Lo.component(t)?e(t):e("")}},Os={functional:!0,props:{slotKey:String,required:!0},render:function(e,t){var n=t.props,i=t.slots;return e("div",{class:["content__".concat(n.slotKey)]},i()[n.slotKey])}},Ws={computed:{openInNewWindowTitle:function(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},Rs=(n(306),Object(cs.a)(Ws,(function(){var e=this.$createElement,t=this._self._c||e;return t("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-labelledby":"outbound-link-title",role:"img",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[t("title",{attrs:{id:"outbound-link-title"}},[this._v(this._s(this.openInNewWindowTitle))]),this._v(" "),t("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),t("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})])}),[],!1,null,null,null).exports);function Ns(){return(Ns=Object(i.a)(regeneratorRuntime.mark((function e(t){var n,i,o,a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:hs.routerBase||hs.base,Cs(i=new Ar({base:n,mode:"history",fallback:!1,routes:ds,scrollBehavior:function(e,t,n){return n||(e.hash?!Lo.$vuepress.$get("disableScrollBehavior")&&{selector:e.hash}:{x:0,y:0})}})),o={},e.prev=4,e.next=7,Promise.all(ks.filter((function(e){return"function"==typeof e})).map((function(e){return e({Vue:Lo,options:o,router:i,siteData:hs,isServer:t})})));case 7:e.next=12;break;case 9:e.prev=9,e.t0=e.catch(4),console.error(e.t0);case 12:return a=new Lo(Object.assign(o,{router:i,render:function(e){return e("div",{attrs:{id:"app"}},[e("RouterView",{ref:"layout"}),e("div",{class:"global-ui"},xs.map((function(t){return e(t)})))])}})),e.abrupt("return",{app:a,router:i});case 14:case"end":return e.stop()}}),e,null,[[4,9]])})))).apply(this,arguments)}Lo.config.productionTip=!1,Lo.use(Ar),Lo.use(Es),Lo.mixin(function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Lo;Sr(t),n.$vuepress.$set("siteData",t);var i=e(n.$vuepress.$get("siteData")),o=new i,a=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(o)),r={};return Object.keys(a).reduce((function(e,t){return t.startsWith("$")&&(e[t]=a[t].get),e}),r),{computed:r}}((function(e){return function(){function t(){As(this,t)}return js(t,[{key:"setPage",value:function(e){this.__page=e}},{key:"$site",get:function(){return e}},{key:"$themeConfig",get:function(){return this.$site.themeConfig}},{key:"$frontmatter",get:function(){return this.$page.frontmatter}},{key:"$localeConfig",get:function(){var e,t,n=this.$site.locales,i=void 0===n?{}:n;for(var o in i)"/"===o?t=i[o]:0===this.$page.path.indexOf(o)&&(e=i[o]);return e||t||{}}},{key:"$siteTitle",get:function(){return this.$localeConfig.title||this.$site.title||""}},{key:"$title",get:function(){var e=this.$page,t=this.$page.frontmatter.metaTitle;if("string"==typeof t)return t;var n=this.$siteTitle,i=e.frontmatter.home?null:e.frontmatter.title||e.title;return n?i?i+" | "+n:n:i||"VuePress"}},{key:"$description",get:function(){var e=function(e){if(e){var t=e.filter((function(e){return"description"===e.name}))[0];if(t)return t.content}}(this.$page.frontmatter.meta);return e||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}},{key:"$lang",get:function(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}},{key:"$localePath",get:function(){return this.$localeConfig.path||"/"}},{key:"$themeLocaleConfig",get:function(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}},{key:"$page",get:function(){return this.__page?this.__page:function(e,t){for(var n=0;n<e.length;n++){var i=e[n];if(i.path.toLowerCase()===t.toLowerCase())return i}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}}]),t}()}),hs)),Lo.component("Content",Ds),Lo.component("ContentSlotsDistributor",Os),Lo.component("OutboundLink",Rs),Lo.component("ClientOnly",{functional:!0,render:function(e,t){var n=t.parent,i=t.children;if(n._isMounted)return i;n.$once("hook:mounted",(function(){n.$forceUpdate()}))}}),Lo.component("Layout",qr("Layout")),Lo.component("NotFound",qr("NotFound")),Lo.prototype.$withBase=function(e){var t=this.$site.base;return"/"===e.charAt(0)?t+e.slice(1):e},window.__VUEPRESS__={version:"1.6.0",hash:"7ebff6b"},function(e){return Ns.apply(this,arguments)}(!1).then((function(e){var t=e.app;e.router.onReady((function(){t.$mount("#app")}))}))}]);